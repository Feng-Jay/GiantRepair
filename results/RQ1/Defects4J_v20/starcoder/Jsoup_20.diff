--- 
+++ 
@@ -6,9 +6,9 @@
         docData = Charset.forName(defaultCharset).decode(byteData).toString();
         doc = parser.parseInput(docData, baseUri);
         Element meta = doc.select("meta[http-equiv=content-type], meta[charset]").first();
-        if (meta != null) { // if not found, will keep utf-8 as best attempt
-            String foundCharset = meta.hasAttr("http-equiv") ? getCharsetFromContentType(meta.attr("content")) : meta.attr("charset");
-            if (foundCharset != null && foundCharset.length() != 0 && !foundCharset.equals(defaultCharset)) { // need to re-decode
+        if (meta!= null) { // if not found, will keep utf-8 as best attempt
+            String foundCharset = meta.hasAttr("http-equiv")? getCharsetFromContentType(meta.attr("content")) : meta.attr("charset");
+            if (foundCharset!= null && foundCharset.length()!= 0 &&!foundCharset.equals(defaultCharset)) { // need to re-decode
                 charsetName = foundCharset;
                 byteData.rewind();
                 docData = Charset.forName(foundCharset).decode(byteData).toString();
@@ -23,6 +23,8 @@
         // there are times where there is a spurious byte-order-mark at the start of the text. Shouldn't be present
         // in utf-8. If after decoding, there is a BOM, strip it; otherwise will cause the parser to go straight
         // into head mode
+        if (docData.indexOf('\uFEFF') == 0)
+            docData = docData.substring(1);
 
         doc = parser.parseInput(docData, baseUri);
         doc.outputSettings().charset(charsetName);
