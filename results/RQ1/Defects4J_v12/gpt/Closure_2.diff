--- 
+++ 
@@ -6,22 +6,24 @@
   Set<String> currentPropertyNames;
     // This can be the case if interfaceType is proxy to a non-existent
     // object (which is a bad type annotation, but shouldn't crash).
-    currentPropertyNames = implicitProto.getOwnPropertyNames();
-  for (String name : currentPropertyNames) {
-    ObjectType oType = properties.get(name);
-    if (oType != null) {
-      if (!interfaceType.getPropertyType(name).isEquivalentTo(
-          oType.getPropertyType(name))) {
-        compiler.report(
-            t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
-                functionName, name, oType.toString(),
-                interfaceType.toString()));
-      }
+    if (implicitProto != null) {
+        currentPropertyNames = implicitProto.getOwnPropertyNames();
+        for (String name : currentPropertyNames) {
+            ObjectType oType = properties.get(name);
+            if (oType != null) {
+                if (!interfaceType.getPropertyType(name).isEquivalentTo(
+                    oType.getPropertyType(name))) {
+                    compiler.report(
+                        t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,
+                            functionName, name, oType.toString(),
+                            interfaceType.toString()));
+                }
+            }
+            currentProperties.put(name, interfaceType);
+        }
     }
-    currentProperties.put(name, interfaceType);
-  }
-  for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
-    checkInterfaceConflictProperties(t, n, functionName, properties,
-        currentProperties, iType);
-  }
+    for (ObjectType iType : interfaceType.getCtorExtendedInterfaces()) {
+        checkInterfaceConflictProperties(t, n, functionName, properties,
+            currentProperties, iType);
+    }
 }
