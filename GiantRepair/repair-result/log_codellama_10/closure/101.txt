Repair : closure_101
Current file:/data/PLM4APR/codex_out/valuable_patches_codellama_real/closure_101/patch.java
Patch Number: /data/PLM4APR/codex_out/valuable_patches_codellama_real/closure_101/patch.java
Following are 0th generated patches:
Validating 5 patches...
Following are 1th generated patches:
Validating 213 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.print_tree;
    initOptionsFromFlags(options);
    return options;
  }

1 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.print_pass_graph;
    initOptionsFromFlags(options);
    return options;
  }

2 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.third_party;
    initOptionsFromFlags(options);
    return options;
  }

3 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.print_ast;
    initOptionsFromFlags(options);
    return options;
  }

4 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives;
    initOptionsFromFlags(options);
    return options;
  }

5 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.debug;
    initOptionsFromFlags(options);
    return options;
  }

6 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.process_closure_primitives;
    initOptionsFromFlags(options);
    return options;
  }

7 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.create_name_map_files;
    initOptionsFromFlags(options);
    return options;
  }

8 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.compute_phase_ordering;
    initOptionsFromFlags(options);
    return options;
  }

9 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.use_only_custom_externs;
    initOptionsFromFlags(options);
    return options;
  }

10 th patch/218
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:17:33 HKT
--------------- END -----------------
Following are 2th generated patches:
Validating 1 patches...
Following are 3th generated patches:
Validating 212 patches...
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.print_tree;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

11 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.third_party;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

12 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.print_pass_graph;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

13 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.print_ast;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

14 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.debug;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

15 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.create_name_map_files;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

16 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.compute_phase_ordering;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

17 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.use_only_custom_externs;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

18 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.print_ast;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

19 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.print_pass_graph;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

20 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.print_tree;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

21 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.debug;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

22 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

23 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.third_party;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

24 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName;RHSEMPTY
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.process_closure_primitives;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

25 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.create_name_map_files;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

26 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.compute_phase_ordering;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

27 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
FILE : /data/PLM4APR/tmp/defects4j_buggy//closure/closure_101_buggy/src/com/google/javascript/jscomp/CommandLineRunner.java
SUCCESS
//Following are generated patch:
  protected CompilerOptions createOptions(){
    CompilerOptions options=new CompilerOptions();
    options.setCodingConvention(new ClosureCodingConvention());
    CompilationLevel level=flags.compilation_level;
    level.setOptionsForCompilationLevel(options);
    if (flags.debug) {
      level.setDebugOptionsForCompilationLevel(options);
    }
    WarningLevel wLevel=flags.warning_level;
    wLevel.setOptionsForWarningLevel(options);
    for (    FormattingOption formattingOption : flags.formatting) {
      formattingOption.applyToOptions(options);
    }
options.closurePass=flags.process_closure_primitives||flags.use_only_custom_externs;
    if (flags.process_closure_primitives) {
      options.closurePass=true;
    }
    initOptionsFromFlags(options);
    return options;
  }

28 th patch/431
Trace:
ExpressionStmt;Assign;InfixExpr;QName
START : 
2023.12.23 AD at 17:16:34 HKT
---------TIME : 
2023.12.23 AD at 17:18:45 HKT
--------------- END -----------------
Patch number exceeds the limit!
Tested 430 patches
Compile failed 373 patches
Compilation rate0.1325581395348837
Patch number exceeds the limit!
Tested 430 patches
Compile failed 373 patches
Compilation rate0.1325581395348837
Tested:430 patches
Compile failed:373 patches
Compilation rate:0.1325581395348837
Finish : closure-101 > patch : 28 | Start : Sat Dec 23 17:16:34 HKT 2023 | End : 2023.12.23 AD at 17:18:45 HKT
