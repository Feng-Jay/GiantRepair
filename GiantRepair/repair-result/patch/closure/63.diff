FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<=sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno&&charno<b.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5292/pattern-ver1-serial/FireSwamp.src.byui.cit260.fireSwamp.controller.GameControl.java-createNewGame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 07:12:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
+if(sourceExcerpt.endsWith("/")==false){
+sourceExcerpt=sourceExcerpt+"/";
+}
 int charno=error.getCharno();
 if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/1014/pattern-ver1-serial/src.main.java.HxCKDMS.HxCEnchants.Handlers.EnchantHandlers.java-handleBootEnchant.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(true){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
 if(Character.isWhitespace(c)){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:38:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/closure/closure_63_buggy/src/com/google/javascript/jscomp/LightweightMessageFormatter.java[66,111]
------------Solution---------------
 private String format(JSError error,boolean warning){
 SourceExcerptProvider source=getSource();
 String sourceExcerpt=source==null?null:excerpt.get(source,error.sourceName,error.lineNumber,excerptFormatter);
 StringBuilder b=new StringBuilder();
 if(error.sourceName!=null){
 b.append(error.sourceName);
 if(error.lineNumber>0){
 b.append(':');
 b.append(error.lineNumber);
 }
 b.append(": ");
 }
 b.append(getLevelName(warning?CheckLevel.WARNING:CheckLevel.ERROR));
 b.append(" - ");
 b.append(error.description);
 b.append('\n');
 if(sourceExcerpt!=null){
 b.append(sourceExcerpt);
 b.append('\n');
 int charno=error.getCharno();
-if(excerpt.equals(LINE)&&0<=charno&&charno<sourceExcerpt.length()){
+if(excerpt.equals(LINE)&&0<=charno){
 for(int i=0;i<charno;i++){
 char c=sourceExcerpt.charAt(i);
-if(Character.isWhitespace(c)){
+if(Character.isWhitespace(c)&&charno<sourceExcerpt.length()){
 b.append(c);
 }else {
 b.append(' ');
 }
 }
 b.append("^\n");
 }
 }
 return b.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine1, com.google.javascript.jscomp.LightweightMessageFormatterTest::testFormatErrorSpaceEndOfLine2]
---------START : 2019.09.06 AD at 06:06:59 CDT
---------TIME : 2019.09.06 AD at 08:44:11 CDT
--------------- END -----------------
