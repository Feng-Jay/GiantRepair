FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Solution---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=1;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Solution---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(index<0){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(index>=minStart){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:52 CDT
--------------- END -----------------
