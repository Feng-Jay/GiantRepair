Repair : lang_22
Current failed test : org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int | 2019.09.05 AD at 19:40:51 CDT
Location : org.apache.commons.lang3.math.Fraction.getReducedFraction:[216, 223, 226, 228, 230, 231, 219, 215, 218, 222, 225, 234, 235, 236, 237]#1.0
Compute Candidate : 2019.09.05 AD at 20:50:53 CDT - 2019.09.05 AD at 21:14:29 CDT , PNumber : 11304, CandNumber : 450 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+ int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:16:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE&&denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:18:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==0||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:20:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator==0){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:22:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==0&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:24:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=1;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=1;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=1;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=1;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+return null;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+return null;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(numerator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
-return ZERO;
+return null;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:38:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+long gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=0;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=0;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:44:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=0;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=0;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<=0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:46:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+numerator/=gcd;
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+denominator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator>0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:50:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=2;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=2;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:50:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator<=0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator<=0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:54:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)<=0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:56:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator<=Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 21:58:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator<=Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator<=Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+float gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:04:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=3;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:06:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=3;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:08:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=3;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:08:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=3;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:08:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(denominator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:10:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||numerator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:12:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator>=Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:14:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator>=Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:16:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator>=0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:16:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator>=0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator>=Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)>=0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:18:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator!=Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:20:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator!=Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator!=0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator!=0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:22:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)!=0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator!=Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:25:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+Integer gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=numerator;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=denominator;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=numerator;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:33:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=denominator;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=10;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:37:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=10;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:39:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=10;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=10;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)>0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:41:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator>0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:41:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator>0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator>Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator>Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator>Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==4||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator==4){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:49:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)==4){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==4){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==4){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==4&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:57:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=100;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 22:59:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=100;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=100;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:01:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=100;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:01:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==5||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator==5){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:05:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)==5){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:07:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==5){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:09:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==5){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:11:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==5&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:13:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=0.0;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:15:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=0.0;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:17:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=0.0;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=0.0;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/4063/pattern-ver1-serial/playgrounds.agarwalamit.src.main.java.playground.agarwalamit.mixedTraffic.plots.LinkPersonInfoContainer.java-updateAvailableLinkSpace.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:17:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=4;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:19:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=4;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:21:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=4;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:21:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=4;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:21:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=-2;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:23:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=-2;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:25:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(numerator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=numerator;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:27:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=denominator;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=numerator;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:29:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=denominator;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:31:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=-denominator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V31/6403/pattern-ver1-serial/app.src.main.java.in.co.mn.minesweeper.game.GameState.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:33:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=-numerator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V31/6403/pattern-ver1-serial/app.src.main.java.in.co.mn.minesweeper.game.GameState.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:35:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator|1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=5;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=5;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:41:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=5;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:41:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=5;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:41:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=1;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=1;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:45:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=-1;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:47:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=-1;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:49:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=-1;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=-1;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:53:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=-1;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:53:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=-1;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:53:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=0;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:55:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=0;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
-throw new ArithmeticException("The denominator must not be zero");
+throw new ArithmeticException("The denominator must not be zero".trim());
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.05 AD at 23:59:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
+throw new ArithmeticException("overflow: can't negate".trim());
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:01:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=2;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=2;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:05:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=3;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:07:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=3;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:09:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==-1||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:11:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator==-1){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:13:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)==-1){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:15:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==-1){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:17:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==-1){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:19:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==-1&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:21:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+gcd++;
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+numerator++;
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+denominator++;
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+numerator++;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+denominator++;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:25:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
+numerator++;
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
+denominator++;
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:26:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+numerator++;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:28:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+denominator++;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
+numerator++;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
+denominator++;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:30:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+gcd--;
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:30:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+numerator--;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+denominator--;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+numerator--;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+denominator--;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:34:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+numerator--;
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+denominator--;
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
+numerator--;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=denominator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=numerator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:40:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=10;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=10;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=100;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=100;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator!=0||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator!=0){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator!=0&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
-throw new ArithmeticException("The denominator must not be zero");
+throw new UnsupportedOperationException();
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/56/pattern-ver1-serial/core.src.main.java.lupos.datastructures.paged_dbbptree.DBBPTree.java-lastKey.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
+throw new UnsupportedOperationException();
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/56/pattern-ver1-serial/core.src.main.java.lupos.datastructures.paged_dbbptree.DBBPTree.java-lastKey.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
-throw new ArithmeticException("The denominator must not be zero");
+throw new ArithmeticException(("The denominator must not be zero").toLowerCase());
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
+throw new ArithmeticException(("overflow: can't negate").toLowerCase());
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=4;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=4;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
+numerator++;
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
+denominator++;
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
-return ZERO;
+return (Fraction)(ZERO);
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
-denominator/=2;
+numerator/=1;
+denominator/=1;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
-denominator/=gcd;
+numerator/=1;
+denominator/=1;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator<0||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator<0){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator<0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator<0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator<0&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+while(true){
+
+}
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+while(true){
+
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator>0||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator>0){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator>0&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
-throw new ArithmeticException("The denominator must not be zero");
+throw new ArithmeticException(("The denominator must not be zero").toUpperCase());
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
+throw new ArithmeticException(("overflow: can't negate").toUpperCase());
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7401/pattern-ver1-serial/Model.src.main.java.config.SensorParams.java-SensorParams.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=5;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=5;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/2611/pattern-ver1-serial/app.src.main.java.com.example.ywn.escapeproject.FiniteStateMachine.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(2!=0){
 numerator/=2;
+}
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
+if(2!=0){
 denominator/=2;
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+if(-numerator!=0){
 numerator=-numerator;
+}
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+if(-denominator!=0){
 denominator=-denominator;
+}
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd!=0){
 numerator/=gcd;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
+numerator=numerator;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
+denominator=denominator;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator+numerator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator+denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator+numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator+denominator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator+numerator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator+denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator+numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator+denominator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)+numerator==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)+denominator==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+gcd=1000;
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+numerator=1000;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+denominator=1000;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(true){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(true){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(true){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+int a=0;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
+int a=0;
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
+int a=0;
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+int a=0;
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+int a=0;
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+int a=0;
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+String OUTSTRING="";
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+String OUTSTRING="";
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+String OUTSTRING="";
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
+String OUTSTRING="";
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
+String OUTSTRING="";
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+String OUTSTRING="";
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+int Integer=5;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+int MIN_VALUE=5;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(Double.isNaN(denominator)){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(Double.isNaN(numerator)){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(Double.isNaN(denominator)){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&numerator==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+int indexSelection=0;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
+int indexSelection=0;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+int indexSelection=0;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return (Fraction)(new Fraction(numerator,denominator));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+int gcd=greatestCommonDivisor(Math.max(numerator,denominator),denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+int gcd=greatestCommonDivisor(numerator,Math.max(numerator,denominator));
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return new Fraction(Math.max(numerator,denominator),denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return new Fraction(numerator,Math.max(numerator,denominator));
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=numerator+2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=denominator+2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=numerator+-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=denominator+-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=numerator+gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=denominator+gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if("Chrome".equals(numerator)||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+int a=1;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
+int a=1;
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
+int a=1;
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+int a=1;
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+int a=1;
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+int a=1;
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+String MIN_VALUE="%#.&f";
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+boolean b=true;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
+boolean b=true;
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+boolean b=true;
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
+boolean b=true;
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+boolean b=true;
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+boolean b=true;
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
+}
+if("&null".equals(numerator)){
+return null;
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
+}
+if("&null".equals(denominator)){
+return null;
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
+}
+if("&null".equals(numerator)){
+return null;
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
+}
+if("&null".equals(denominator)){
+return null;
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if("&null".equals(gcd)){
+return null;
+}
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+numerator/=2;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+denominator/=2;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+numerator/=2;
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+denominator/=2;
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+numerator/=2;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+denominator/=2;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+numerator/=2;
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+denominator/=2;
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+numerator/=2;
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+denominator/=2;
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
+numerator/=2;
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
+denominator/=2;
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
+if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+denominator/=2;
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+if(numerator<0){
+return null;
+}
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
+if(denominator<0){
 if(denominator<0){
+return null;
+}
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(numerator<0){
+return null;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(denominator<0){
+return null;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0||numerator==Long.MIN_VALUE){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0||denominator==Long.MIN_VALUE){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0||denominator==Long.MIN_VALUE){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
+numerator/=2;
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
+denominator/=2;
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
+numerator/=2;
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
+denominator/=2;
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+try{
 numerator/=2;
+}finally{
 denominator/=2;
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+try{
 denominator/=2;
+}finally{
+numerator/=2;
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
-denominator/=2;
+numerator/=-1;
+denominator/=-1;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
-denominator/=gcd;
+numerator/=-1;
+denominator/=-1;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
+if(numerator==0){
+return null;
+}
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+if(denominator==0){
+return null;
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(numerator==0){
+return null;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(denominator==0){
+return null;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+if(numerator==0){
+return null;
+}
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
+if(numerator==0){
+return null;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+if(denominator==0){
+return null;
+}
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
+if(denominator==0){
+return null;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+if(numerator==0){
+return null;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+if(denominator==0){
+return null;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+assert (gcd!=greatestCommonDivisor(numerator,denominator));
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=-1;
 denominator/=2;
 }
+numerator++;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=-1;
 }
+denominator++;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=-1;
 denominator=-denominator;
 }
+numerator++;
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+numerator/=-1;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+numerator++;
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
-denominator/=2;
+denominator/=-1;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+denominator++;
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=-1;
+numerator++;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+try{
 numerator/=gcd;
+}finally{
+numerator/=2;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+try{
 denominator/=gcd;
 return new Fraction(numerator,denominator);
+}finally{
+numerator/=2;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+try{
 numerator/=gcd;
+}finally{
+denominator/=2;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+try{
 denominator/=gcd;
 return new Fraction(numerator,denominator);
+}finally{
+denominator/=2;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0||"查看红包".equals(numerator)){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0||"查看红包".equals(denominator)){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0||"查看红包".equals(denominator)){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0||denominator==3){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0||numerator==3){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0||denominator==3){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator<0||numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator<0||denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0||denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+numerator=-numerator;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+denominator=-denominator;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+numerator=-numerator;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+denominator=-denominator;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+numerator=-numerator;
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+denominator=-denominator;
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+numerator=-numerator;
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+numerator=-numerator;
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+numerator=-numerator;
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+denominator=-denominator;
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
+numerator=(-numerator+numerator)%numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
+denominator=(-denominator+denominator)%denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=(gcd+gcd)%gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=(gcd+gcd)%gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+numerator=-numerator;
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+denominator=-denominator;
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&denominator>=0&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
+numerator=-numerator;
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
+denominator=-denominator;
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
+numerator/=gcd<0?0:gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
+denominator/=gcd<0?0:gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if((denominator==Integer.MIN_VALUE||denominator=='\'')&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
-numerator=-numerator;
 denominator=-denominator;
 }
+numerator=-numerator;
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
-denominator=-denominator;
 }
+denominator=-denominator;
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0||denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0||numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0||denominator==0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0||numerator>9){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0||denominator>9){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0||denominator>9){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+numerator=-numerator;
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+denominator=-denominator;
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0&&denominator<4000000){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0&&denominator<4000000){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0&&numerator<4000000){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0&&denominator!=9999){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0&&numerator!=9999){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0&&denominator!=9999){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(0>0&&denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(0>0&&numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(0>0&&denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+assert (numerator>=0):"Receive a negative tratment";
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+assert (denominator>=0):"Receive a negative tratment";
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+assert (numerator>=0):"Receive a negative tratment";
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+assert (denominator>=0):"Receive a negative tratment";
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+assert (gcd>=0):"Receive a negative tratment";
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+numerator=-numerator;
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+denominator=-denominator;
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+assert (numerator!=0):"Receive a size tratment";
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+assert (denominator!=0):"Receive a size tratment";
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
+assert (numerator!=0):"Receive a size tratment";
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
+assert (denominator!=0):"Receive a size tratment";
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+assert (gcd!=0):"Receive a size tratment";
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
+if(denominator==0||denominator=='"'){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
-if(numerator==0){
+if(numerator==0||numerator=='"'){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
+if(denominator<0||denominator=='"'){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(numerator>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(denominator>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
+if(numerator>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
+if(denominator>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
+if(numerator<0){
+numerator=0;
+}
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+if(denominator<0){
+denominator=0;
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(numerator<0){
+numerator=0;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(denominator<0){
+denominator=0;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+if(numerator<0){
+numerator=0;
+}
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
+if(numerator<0){
+numerator=0;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+if(denominator<0){
+denominator=0;
+}
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
+if(denominator<0){
+denominator=0;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+if(numerator<0){
+numerator=0;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+if(denominator<0){
+denominator=0;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(numerator!=2){
 numerator/=gcd;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(denominator!=2){
 numerator/=gcd;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<=0){
+gcd=1;
+}
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+if(gcd<=0){
+gcd=1;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+if(numerator<=0){
+numerator=1;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+if(denominator<=0){
+denominator=1;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+if(denominator>numerator){
+denominator=numerator;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
+if(numerator>denominator){
+numerator=denominator;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator!=2){
 numerator/=2;
-denominator/=2;
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
+if(numerator!=2){
 denominator/=2;
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+int gcd=greatestCommonDivisor(numerator-1,denominator);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return new Fraction(numerator-1,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+int gcd=greatestCommonDivisor(numerator-1,denominator);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return new Fraction(numerator,denominator-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+int gcd=greatestCommonDivisor(numerator,denominator-1);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return new Fraction(numerator-1,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
-int gcd=greatestCommonDivisor(numerator,denominator);
+int gcd=greatestCommonDivisor(numerator,denominator-1);
 numerator/=gcd;
 denominator/=gcd;
-return new Fraction(numerator,denominator);
+return new Fraction(numerator,denominator-1);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE||"查看红包".equals(numerator==Integer.MIN_VALUE)){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE||denominator=='%'){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator<0L||(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE)){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(true){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+if(numerator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<0){
+gcd=greatestCommonDivisor(numerator,denominator);
+}
+numerator/=gcd;
+if(numerator<0){
 numerator/=gcd;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<0){
+gcd=greatestCommonDivisor(numerator,denominator);
+}
 numerator/=gcd;
+denominator/=gcd;
+if(denominator<0){
 denominator/=gcd;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+numerator/=gcd;
+if(numerator<0){
 numerator/=gcd;
+}
+denominator/=gcd;
+if(denominator<0){
 denominator/=gcd;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/5043/pattern-ver1-serial/src.Server.ServerWorld.java-updateObjects.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)==0||"查看红包".equals(denominator==Integer.MIN_VALUE)){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE&&(numerator&1)==0||(numerator&1)=='%'){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator<0L||(denominator==Integer.MIN_VALUE&&(numerator&1)==0)){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(true){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+if(numerator==denominator){
+throw new ArithmeticException("overflow: can't negate");
+}else {
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
+}
+numerator=-numerator;
+denominator=-denominator;
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/1425/pattern-ver1-serial/ScalableStorageService.src.consistent_hashing.Range.java-isWithin.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==Integer.MIN_VALUE){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5898/pattern-ver1-serial/eSecureBox.src.main.java.com.volcano.esecurebox.widget.FieldCell.java-setListAction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+boolean succeeded=false;
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+succeeded=true;
+}
+if(!succeeded){
+return null;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
+boolean succeeded=false;
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+succeeded=true;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
+if(!succeeded){
+return null;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+throw new ArithmeticException("overflow: can't negate");
+}
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
-}
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+throw new ArithmeticException("overflow: can't negate");
+}
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+if(numerator==3){
+System.out.println("debug");
+}
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+if(numerator==3){
+System.out.println("debug");
+}
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+if(denominator==3){
+System.out.println("debug");
+}
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+if(denominator==3){
+System.out.println("debug");
+}
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(numerator==3){
+System.out.println("debug");
+}
 numerator/=2;
 denominator/=2;
+if(numerator==3){
+System.out.println("debug");
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+if(denominator==3){
+System.out.println("debug");
+}
 numerator/=2;
 denominator/=2;
+if(denominator==3){
+System.out.println("debug");
+}
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
-}
 numerator=-numerator;
 denominator=-denominator;
+}
+if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+throw new ArithmeticException("overflow: can't negate");
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
+}
+if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+throw new ArithmeticException("overflow: can't negate");
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
-}
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
-if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
+if(denominator<0){
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<0){
+gcd--;
+}
 numerator/=gcd;
+if(numerator<0){
+numerator--;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<0){
+gcd--;
+}
 numerator/=gcd;
 denominator/=gcd;
+if(denominator<0){
+denominator--;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+if(numerator<0){
+numerator--;
+}
 denominator/=gcd;
+if(denominator<0){
+denominator--;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<3){
+gcd=3;
+}
 numerator/=gcd;
+if(numerator<3){
+numerator=3;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<3){
+gcd=3;
+}
 numerator/=gcd;
 denominator/=gcd;
+if(denominator<3){
+denominator=3;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+if(numerator<3){
+numerator=3;
+}
 denominator/=gcd;
+if(denominator<3){
+denominator=3;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<0){
+gcd=0;
+}
 numerator/=gcd;
+if(numerator<0){
+numerator=0;
+}
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
+if(gcd<0){
+gcd=0;
+}
 numerator/=gcd;
 denominator/=gcd;
+if(denominator<0){
+denominator=0;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
+if(numerator<0){
+numerator=0;
+}
 denominator/=gcd;
+if(denominator<0){
+denominator=0;
+}
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+long startTime=System.currentTimeMillis();
 numerator/=2;
 denominator/=2;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
+long startTime=System.currentTimeMillis();
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+long startTime=System.currentTimeMillis();
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
+if(denominator==0){
+throw new ArithmeticException("The denominator must not be zero");
+}
+if(numerator==0){
+return ZERO;
+}
+if(denominator==(numerator&1)){
+numerator/=2;
+denominator/=2;
+}else {
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
+}
+if(denominator<0){
+if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
+throw new ArithmeticException("overflow: can't negate");
+}
+numerator=-numerator;
+denominator=-denominator;
+}
+int gcd=greatestCommonDivisor(numerator,denominator);
+numerator/=gcd;
+denominator/=gcd;
+return new Fraction(numerator,denominator);
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/1425/pattern-ver1-serial/ScalableStorageService.src.consistent_hashing.Range.java-isWithin.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
-}
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
-denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
+if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
+numerator/=2;
+denominator/=2;
+}
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 0, INS : 1, DEL : 15
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
-}
-if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
-}
-numerator=-numerator;
-denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 20, UPD : 0, INS : 0, DEL : 20
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
-throw new ArithmeticException("The denominator must not be zero");
-}
-if(numerator==0){
-return ZERO;
-}
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 3, INS : 0, DEL : 18
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
-}
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
+}
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 0, INS : 1, DEL : 20
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
-numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 15, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
 if(denominator==0){
 throw new ArithmeticException("The denominator must not be zero");
 }
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
-denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 15, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
-throw new ArithmeticException("The denominator must not be zero");
-}
 if(numerator==0){
 return ZERO;
-}
-if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
-numerator/=2;
-denominator/=2;
 }
 if(denominator<0){
 if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
 throw new ArithmeticException("overflow: can't negate");
 }
 numerator=-numerator;
 denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 32, UPD : 3, INS : 0, DEL : 29
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_22_buggy/src/main/java/org/apache/commons/lang3/math/Fraction.java[200,238]
------------Candidate---------------
 public static Fraction getReducedFraction(int numerator,int denominator){
-if(denominator==0){
-throw new ArithmeticException("The denominator must not be zero");
-}
 if(numerator==0){
 return ZERO;
 }
 if(denominator==Integer.MIN_VALUE&&(numerator&1)==0){
 numerator/=2;
 denominator/=2;
-}
-if(denominator<0){
-if(numerator==Integer.MIN_VALUE||denominator==Integer.MIN_VALUE){
-throw new ArithmeticException("overflow: can't negate");
-}
-numerator=-numerator;
-denominator=-denominator;
 }
 int gcd=greatestCommonDivisor(numerator,denominator);
 numerator/=gcd;
 denominator/=gcd;
 return new Fraction(numerator,denominator);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 37, UPD : 3, INS : 0, DEL : 34
Failing Tests:[org.apache.commons.lang3.math.FractionTest::testReducedFactory_int_int, org.apache.commons.lang3.math.FractionTest::testReduce]
---------START : 2019.09.05 AD at 19:40:51 CDT
---------TIME : 2019.09.06 AD at 00:42:20 CDT
--------------- END -----------------
Current failed test : org.apache.commons.lang3.math.FractionTest::testReduce | 2019.09.06 AD at 00:42:20 CDT
Finish : lang-22 > patch : 0 | Start : Thu Sep 05 19:40:51 CDT 2019 | End : 2019.09.06 AD at 01:42:21 CDT
