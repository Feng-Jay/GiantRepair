Repair : lang_21
Current failed test : org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal | 2019.09.05 AD at 19:13:36 CDT
Location : org.apache.commons.lang3.time.DateUtils.isSameLocalTime:[259, 262]#1.0
Compute Candidate : 2019.09.05 AD at 19:14:04 CDT - 2019.09.05 AD at 19:33:19 CDT , PNumber : 11351, CandNumber : 163 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1==null&&cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1!=null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1==null||cal2!=null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal2.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal1.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal2.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal1.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal2.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)<=cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)<=cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)<=cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)<=cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)<=cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)<=cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)<=cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal2.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3728/pattern-ver1-serial/subsystem.src.main.java.org.jboss.as.camel.integration.deployment.CreateCamelContextDeploymentProcessor.java-deploy.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal1.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3728/pattern-ver1-serial/subsystem.src.main.java.org.jboss.as.camel.integration.deployment.CreateCamelContextDeploymentProcessor.java-deploy.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal2.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3728/pattern-ver1-serial/subsystem.src.main.java.org.jboss.as.camel.integration.deployment.CreateCamelContextDeploymentProcessor.java-deploy.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal1.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3728/pattern-ver1-serial/subsystem.src.main.java.org.jboss.as.camel.integration.deployment.CreateCamelContextDeploymentProcessor.java-deploy.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal2.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3728/pattern-ver1-serial/subsystem.src.main.java.org.jboss.as.camel.integration.deployment.CreateCamelContextDeploymentProcessor.java-deploy.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal2==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)>=cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)>=cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)>=cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)>=cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)>=cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)>=cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)>=cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)!=cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)!=cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)!=cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)!=cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)!=cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)!=cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)!=cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()!=cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4891/pattern-ver1-serial/app.src.main.java.edu.temple.androidpermissions.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)>cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)>cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)>cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)>cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)>cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)>cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)>cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal1.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5292/pattern-ver1-serial/FireSwamp.src.byui.cit260.fireSwamp.controller.GameControl.java-createNewGame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal2.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5292/pattern-ver1-serial/FireSwamp.src.byui.cit260.fireSwamp.controller.GameControl.java-createNewGame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal1.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5292/pattern-ver1-serial/FireSwamp.src.byui.cit260.fireSwamp.controller.GameControl.java-createNewGame.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Solution---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR_OF_DAY)==cal2.get(Calendar.HOUR_OF_DAY)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/2982/pattern-ver1-serial/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java-buildHumanDateRangeFormat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Solution---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.HOUR_OF_DAY)==cal2.get(Calendar.HOUR_OF_DAY)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/2982/pattern-ver1-serial/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java-buildHumanDateRangeFormat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Solution---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.HOUR_OF_DAY)==cal2.get(Calendar.HOUR_OF_DAY)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/2982/pattern-ver1-serial/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java-buildHumanDateRangeFormat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Solution---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.HOUR_OF_DAY)==cal2.get(Calendar.HOUR_OF_DAY)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/2982/pattern-ver1-serial/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java-buildHumanDateRangeFormat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Solution---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.HOUR_OF_DAY)==cal2.get(Calendar.HOUR_OF_DAY)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/2982/pattern-ver1-serial/src.ca.cumulonimbus.barometernetwork.BarometerNetworkActivity.java-buildHumanDateRangeFormat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.getInstance().get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.getInstance().get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.getInstance().get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.getInstance().get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.getInstance().get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.getInstance().get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getInstance().getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getInstance().getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.getInstance().get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.getInstance().get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.getInstance().get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/6347/pattern-ver1-serial/app.src.main.java.oly.netpowerctrl.widget.DeviceWidgetProvider.java-onDeleted.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.getInstance().get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/6347/pattern-ver1-serial/app.src.main.java.oly.netpowerctrl.widget.DeviceWidgetProvider.java-onDeleted.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:36:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
+cal1.clear();
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
+cal2.clear();
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/5987/pattern-ver1-serial/src.org.kjg.garderobe.ShiftDetailNumbersFragment.java-onCreateOptionsMenu.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+cal1.clear();
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+cal2.clear();
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5052/pattern-ver1-serial/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyServer.java-returnClient.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal2.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal2.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/208/pattern-ver1-serial/src.main.java.eu.musesproject.server.dataminer.DataMiner.java-dataClassification.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal1.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal1.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/208/pattern-ver1-serial/src.main.java.eu.musesproject.server.dataminer.DataMiner.java-dataClassification.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal2.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal2.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/208/pattern-ver1-serial/src.main.java.eu.musesproject.server.dataminer.DataMiner.java-dataClassification.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal1.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal1.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/208/pattern-ver1-serial/src.main.java.eu.musesproject.server.dataminer.DataMiner.java-dataClassification.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal2.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal2.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/208/pattern-ver1-serial/src.main.java.eu.musesproject.server.dataminer.DataMiner.java-dataClassification.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal1.get(Calendar.ERA)&&cal1.getClass()==cal1.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal2.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal2.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal1.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal1.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1!=null&&cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V10/7445/pattern-ver1-serial/bungeecord.src.main.java.com.vexsoftware.votifier.bungee.forwarding.OnlineForwardPluginMessagingForwardingSource.java-forward.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
+cal1.clear();
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
+cal2.clear();
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7642/pattern-ver1-serial/src.net.thecobix.openwsk.arena.WaterRemoveSystem.java-collectBlocks.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==0&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==0&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==0&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==0&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==0&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==0&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==0&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V20/4207/pattern-ver1-serial/app.src.main.java.pl.pnoga.weatheralert.app.dao.OptionsDAO.java-saveRefreshInterval.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1==null||cal2.equals(null)){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5953/pattern-ver1-serial/src.main.java.org.corfudb.runtime.TXRuntime.java-readsSomethingWrittenBy.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
+int a=0;
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:37:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+int a=0;
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
+String OUTSTRING="";
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+String OUTSTRING="";
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if("Chrome".equals(cal1)||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
+int a=1;
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+int a=1;
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+String MILLISECOND="%#.&f";
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
+boolean b=true;
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+boolean b=true;
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Math.abs(Calendar.ERA))==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Math.abs(Calendar.ERA))&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Math.abs(Calendar.SECOND))==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Math.abs(Calendar.SECOND))&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Math.abs(Calendar.MILLISECOND))==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Math.abs(Calendar.MILLISECOND))&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Math.abs(Calendar.DAY_OF_YEAR))==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Math.abs(Calendar.DAY_OF_YEAR))&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Math.abs(Calendar.HOUR))==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Math.abs(Calendar.HOUR))&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
+}
+if(cal1==null){
+return false;
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
+}
+if(cal2==null){
+return false;
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal2==cal1){
+return true;
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal1==cal2){
+return true;
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal2.equals(cal1)){
+return false;
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal1.equals(cal2)){
+return false;
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+assert (cal1!=null);
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+assert (cal2!=null);
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal1!=null){
+if(cal1==null||cal2==null){
+throw new IllegalArgumentException("The date must not be null");
+}
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal2!=null){
+if(cal1==null||cal2==null){
+throw new IllegalArgumentException("The date must not be null");
+}
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
+assert (cal1!=null);
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
+assert (cal2!=null);
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.getInstance().get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.getInstance().get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.getInstance().get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.getInstance().get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.getInstance().get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.getInstance().get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.getInstance().get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.getInstance().get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.getInstance().get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.getInstance().get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.getInstance().get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.getInstance().get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.getInstance().get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.getInstance().get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.getInstance().get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.getInstance().get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.getInstance().get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.getInstance().get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.getInstance().get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.getInstance().get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.activity.RepresentativeDelegationActivity.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+assert (cal1!=null):"Appointments day is not allowed to be null!";
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+assert (cal2!=null):"Appointments day is not allowed to be null!";
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
+}
+if(cal1==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
+}
+if(cal2==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1.equals(null)||cal2.equals(null)){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V8/4279/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.discovery.smis.processor.LunMaskingProcessor.java-addIoLimitsOnVolume.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1==null&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1==null&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1==null&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1==null&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1==null&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1==null&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1==null&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1==null||cal2==null||"查看红包".equals(cal1==null)){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1!=null&&cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/3737/pattern-ver1-serial/src.com.ichi2.libanki.sync.RemoteMediaServer.java-addFiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(true){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.MILLISECOND)>=0&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return ((cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)||cal1.get(Calendar.MILLISECOND)=='\'')&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
-if(cal1==null||cal2==null){
+if(cal1==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return ((cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND))&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal2==null||cal1==null){
+throw new NullPointerException();
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+if(cal1==null||cal2==null){
+throw new NullPointerException();
+}
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
+}
+if(cal2==null||cal1==null){
+throw new NullPointerException();
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
+}
+if(cal1==null||cal2==null){
+throw new NullPointerException();
 }
 return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V36/6358/pattern-ver1-serial/src.main.java.com.builtbroken.icbm.content.ams.TileAMSClient.java-onPlayerRightClick.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return ((cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND))&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V8/4601/pattern-ver1-serial/core.src.by.matveev.rorty.entities.Robot.java-updateControlState.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2016/V36/6358/pattern-ver1-serial/src.main.java.com.builtbroken.icbm.content.ams.TileAMSClient.java-onPlayerRightClick.pattern
MATCHLEVEL : ALL
ALL : 55, UPD : 55, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4561/pattern-ver1-serial/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.gui.ListRequirementsPanel.java-getTableCellRendererComponent.pattern
MATCHLEVEL : ALL
ALL : 55, UPD : 55, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 61, UPD : 61, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
+import java.util.Collections;
+
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4457/pattern-ver1-serial/library.src.main.java.com.gh.bmd.jrt.core.DefaultResultChannel.java-isOutputChannelOpen.pattern
MATCHLEVEL : ALL
ALL : 61, UPD : 61, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (boolean)(cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 61, UPD : 61, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/2253/pattern-ver1-serial/modules.core.src.main.java.org.apache.ignite.internal.visor.util.VisorTaskUtils.java-apply.pattern
MATCHLEVEL : ALL
ALL : 61, UPD : 61, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/5823/pattern-ver1-serial/GMSLib.src.com.jstakun.gms.android.landmarks.LandmarkManager.java-apply.pattern
MATCHLEVEL : ALL
ALL : 61, UPD : 61, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return (boolean)((cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass()));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 61, UPD : 61, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/3849/pattern-ver1-serial/Pregel.src.main.java.system.HealthManager.java-checkHealth.pattern
MATCHLEVEL : ALL
ALL : 61, UPD : 61, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_21_buggy/src/main/java/org/apache/commons/lang3/time/DateUtils.java[246,270]
------------Candidate---------------
+import java.util.ArrayList;
+
+import java.util.List;
+
 public static boolean isSameLocalTime(Calendar cal1,Calendar cal2){
+boolean license=(cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
 if(cal1==null||cal2==null){
 throw new IllegalArgumentException("The date must not be null");
 }
-return (cal1.get(Calendar.MILLISECOND)==cal2.get(Calendar.MILLISECOND)&&cal1.get(Calendar.SECOND)==cal2.get(Calendar.SECOND)&&cal1.get(Calendar.MINUTE)==cal2.get(Calendar.MINUTE)&&cal1.get(Calendar.HOUR)==cal2.get(Calendar.HOUR)&&cal1.get(Calendar.DAY_OF_YEAR)==cal2.get(Calendar.DAY_OF_YEAR)&&cal1.get(Calendar.YEAR)==cal2.get(Calendar.YEAR)&&cal1.get(Calendar.ERA)==cal2.get(Calendar.ERA)&&cal1.getClass()==cal2.getClass());
+return license;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2889/pattern-ver1-serial/vipr-portal.portal.app.util.LicenseUtils.java-getLicense.pattern
MATCHLEVEL : ALL
ALL : 64, UPD : 61, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.time.DateUtilsTest::testIsSameLocalTime_Cal]
---------START : 2019.09.05 AD at 19:13:36 CDT
---------TIME : 2019.09.05 AD at 19:40:50 CDT
--------------- END -----------------
Finish : lang-21 > patch : 5 | Start : Thu Sep 05 19:13:36 CDT 2019 | End : 2019.09.05 AD at 19:40:50 CDT
