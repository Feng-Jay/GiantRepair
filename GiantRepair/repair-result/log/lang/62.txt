Repair : lang_62
Current failed test : org.apache.commons.lang.EntitiesTest::testNumberOverflow | 2019.09.08 AD at 03:21:38 CDT
Location : org.apache.commons.lang.Entities.unescape:[840, 843, 845, 848, 852, 853, 862, 819, 820, 821, 822, 823, 824, 825, 829, 830, 835, 837, 839, 857, 864, 865, 869, 814, 815]#0.5773502691896258
Compute Candidate : 2019.09.08 AD at 03:24:31 CDT - 2019.09.08 AD at 04:48:31 CDT , PNumber : 10844, CandNumber : 1004 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+continue;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+continue;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+continue;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+continue;
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+continue;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+continue;
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+continue;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+continue;
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+continue;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+continue;
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+continue;
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+ int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+ int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==0){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1==0||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1==0){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)==0){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch==0){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=1;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+return null;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+return null;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+return null;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+return null;
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+return null;
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+return null;
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+return null;
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+return null;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+return null;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V41/1695/pattern-ver1-serial/src.fr.project.bluechat.layout.activity.MainActivity.java-newName.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+long amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/5901/pattern-ver1-serial/src.main.java.org.jboss.pressgang.ccms.rest.v1.entities.RESTTopicV1.java-explicitSetContentSpecs_OTM.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:49:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1),charAt1);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/1763/pattern-ver1-serial/MyApplication.app.src.main.java.com.gcode.notes.controllers.BaseController.java-setNewContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1,charAt1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/1763/pattern-ver1-serial/MyApplication.app.src.main.java.com.gcode.notes.controllers.BaseController.java-setNewContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=0;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp;i<=str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1&&amph<=semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<=0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Collection;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,myUid;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,DEFAULT_TIMEOUT2;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'&&charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V7/7763/pattern-ver1-serial/app.src.main.java.cheaphone.gui.Offerta.java-setOffert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1),0);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1,0));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp>0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp;i>str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1&&amph>semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,MAX_SERVICE_NODES;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,MAX_ZK_WAIT_RETRY_TIMES;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+break;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+break;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+break;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+break;
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+break;
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+break;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+break;
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:50:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+break;
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph==-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+break;
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1233/pattern-ver1-serial/crm.src.main.java.com.ogg.crm.ui.activity.CustomerPublicListActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(buf.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/668/pattern-ver1-serial/src.jp.ac.aiit.jointry.controllers.MainController.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=2;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()<=1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()<=0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1<='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1<='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi<=-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue<=-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch<='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)<='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+float amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=3;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(str.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/79/pattern-ver1-serial/src.main.java.com.brxt.service.impl.ReportManagerImpl.java-getFinanceCheckList.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+break;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2900/pattern-ver1-serial/BlueMesh.src.blue.mesh.ServerThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.indexOf(';',i-1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+int amph=str.indexOf('&',i-1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+String entityName=str.substring(i-1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
+break;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/2027/pattern-ver1-serial/cong.Internet.BRITE.src.org.cong.complexNetwork.model.AB.java-getTargetNode.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
-return str;
+return null;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/1194/pattern-ver1-serial/src.backend.rest.SaveUserCompetences.java-saveUserCompetences.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.indexOf(';',i+i);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+int amph=str.indexOf('&',i+i);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()>=1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1>='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1>='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi>=-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue>=-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch>='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()>=0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)>='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+return null;
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/2889/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.github.extension.GHEventsSubscriber.java-apply.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()!=1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi!=-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue!=-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()!=0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1!='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1!='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch!='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)!='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+Integer semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+Integer amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+Integer firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.indexOf(';',i+3);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+int amph=str.indexOf('&',i+3);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+String entityName=str.substring(i+3,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7749/pattern-ver1-serial/HowOld.src.com.gzfgeh.customview.MyHorizontalScrollView.java-initDatas.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1,1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositories.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,localLevel;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:52:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=i;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V10/7295/pattern-ver1-serial/src.android.SunmiPrinter.java-printTask.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=ch;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V10/7295/pattern-ver1-serial/src.android.SunmiPrinter.java-printTask.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph<-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=10;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()>1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()>0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1>'x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1>'X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi>-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue>-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)>'#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch>'&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(i,1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/3647/pattern-ver1-serial/src.main.java.semanticMarkup.ling.learn.Learner.java-Learner.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==4){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==4){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)==4){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1==4||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1==4){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch==4){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph>-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp;i<str.length();++i,new ArrayList<KeyBinding>()){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=100;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1==amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/427/pattern-ver1-serial/softwaresystems.src.ss.week5.Board.java-isFull.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==5){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==5){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)==5){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1==5||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1==5){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch==5){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:53:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+int firstAmp=str.indexOf('?');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/596/pattern-ver1-serial/org.lunifera.ecview.dsl.ui.src-gen.org.lunifera.ecview.dsl.ui.contentassist.antlr.internal.InternalUIGrammarLexer.java-mT__201.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.lastIndexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4339/pattern-ver1-serial/app.src.main.java.com.leafpic.app.utils.StringUtils.java-getPhotoNamebyPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+int amph=str.lastIndexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4339/pattern-ver1-serial/app.src.main.java.com.leafpic.app.utils.StringUtils.java-getPhotoNamebyPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+int firstAmp=str.lastIndexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4339/pattern-ver1-serial/app.src.main.java.com.leafpic.app.utils.StringUtils.java-getPhotoNamebyPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1),2);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1,2));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=4;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-2){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-2&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-2){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1609/pattern-ver1-serial/jsqlbox.src.main.java.com.github.drinkjava2.jsqlbox.Dao.java-executeQuiet.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
-buf.append((char)(entityValue));
+buf.append((char)entityValue);
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(i=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
+}
+if(entityName.charAt(0)=='#'){
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
 }
+}else {
+entityValue=this.entityValue(entityName);
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/2067/pattern-ver1-serial/src.io.openems.impl.controller.debuglog.Ess.java-Ess.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str.toString());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/7441/pattern-ver1-serial/HelloWorld.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,_afterComposeMethodCache;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(i!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(ch!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(semi!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return "An arena doesn't seem to be built yet.";
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+return "An arena doesn't seem to be built yet.";
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+return "An arena doesn't seem to be built yet.";
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+return "An arena doesn't seem to be built yet.";
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+return "An arena doesn't seem to be built yet.";
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+return "An arena doesn't seem to be built yet.";
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+return "";
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return "";
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+return "";
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+return "";
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+return "";
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+return "";
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+return "";
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+return "";
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,mActions;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=entityValue;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=firstAmp;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=amph;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:57:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp;i<str.length();++firstAmp){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/6403/pattern-ver1-serial/app.src.main.java.in.co.mn.minesweeper.game.GameState.java-validate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+int firstAmp=str.indexOf(',');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/596/pattern-ver1-serial/org.lunifera.ecview.dsl.ui.src-gen.org.lunifera.ecview.dsl.ui.contentassist.antlr.internal.InternalUIGrammarLexer.java-mT__182.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+buf.append((char)(entityValue));
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.indexOf(';',i+ch);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.indexOf(';',i+firstAmp);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,mRelationId;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==0){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==0){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ final String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ final StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ final char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+ final int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ final int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+ final int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ final StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ final String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 04:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=-1;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:00:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
-return str;
+return new String(str);
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6348/pattern-ver1-serial/src.bufmgr.LIRS.java-getReplacementCandidate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ final StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ final int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.examples.ResourceListExample.java-printRecordings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ final StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+ final int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.examples.ResourceListExample.java-printRecordings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+ final int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ final StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+ int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+ int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Iterator;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==-1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Iterator;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==-1){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Iterator;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)==-1){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Iterator;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1==-1||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Iterator;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1==-1){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Iterator;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch==-1){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+if(entityName.isEmpty()){
+continue;
+}
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6775/pattern-ver1-serial/Salvum.src.br.ufpe.cin.analyses.Main.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(i==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(ch==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(semi==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(amph==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(firstAmp==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+charAt1++;
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+charAt1++;
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+i++;
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+i++;
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
+i++;
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+i++;
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+i++;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+charAt1++;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+charAt1++;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf.toString().trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+charAt1--;
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+charAt1--;
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+semi--;
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return str;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5398/pattern-ver1-serial/extensions.fluent.src.org.exist.fluent.Item.java-valueWithDefault.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp;i<=str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1&&amph<=semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<=0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1&&amph<=semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<=0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp;i<=str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return new String(buf.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+i--;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+charAt1--;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+charAt1--;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return (String)buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
+synchronized(this){
 i=semi;
+}
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+long amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+long entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7447/pattern-ver1-serial/dkpro-c4corpus-hadoop.src.main.java.de.tudarmstadt.ukp.dkpro.c4corpus.hadoop.statistics.LangLicenseStatistics.java-reduce.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==4){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==4){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuilder buf=new StringBuilder(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/556/pattern-ver1-serial/OtrosLogViewer-app.src.main.java.pl.otros.logview.importer.UtilLoggingXmlLogImporter.java-getCData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+return null;
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+return null;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+return null;
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+return null;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
+return null;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+return null;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1!=0||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1!=0){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch!=0){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+synchronized(this){
 entityValue=Integer.parseInt(entityName.substring(1));
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+synchronized(buf){
 buf.append((char)(entityValue));
+}
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+synchronized(buf){
 buf.append(ch);
+}
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+synchronized(buf){
 buf.append(ch);
+}
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+synchronized(buf){
 buf.append('&');
+}
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
+synchronized(buf){
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+synchronized(buf){
 buf.append(ch);
+}
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+unescape(str);
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+unescape(str);
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==5){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==5){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+return null;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3053/pattern-ver1-serial/src.UI.ReservationUI.java-reserveTableOption.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf.toString().toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(buf.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(buf.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/208/pattern-ver1-serial/src.main.java.eu.musesproject.server.dataminer.DataMiner.java-dataClassification.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(buf.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+char charAt1=buf.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V20/208/pattern-ver1-serial/src.main.java.eu.musesproject.server.dataminer.DataMiner.java-dataClassification.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
+i++;
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+semi++;
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+float amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+float entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/7403/pattern-ver1-serial/src.structures.CountryCompetition.java-searchUsableComp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.indexOf(';',i+-1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+int amph=str.indexOf('&',i+-1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+String entityName=str.substring(i+-1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+synchronized(this){
 buf.append((char)(entityValue));
+}
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+synchronized(this){
 buf.append(ch);
+}
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+synchronized(this){
 buf.append(ch);
+}
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+synchronized(this){
 buf.append(ch);
+}
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+synchronized(this){
 buf.append('&');
+}
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp,continentName,countryCode;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+break;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+break;
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+break;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+break;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+break;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+break;
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+break;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+break;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+break;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+break;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/1550/pattern-ver1-serial/src.com.patr.radix.ActiveTimeActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return (String)(buf.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1<0||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1<0){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch<0){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+return null;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+return null;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
+while(true){
+
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:06:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+while(true){
+
+}
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:06:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+while(true){
+
+}
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:06:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+while(true){
+
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:08:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+}
+while(true){
+
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:10:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
+while(true){
+
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:12:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
 }
+while(true){
+
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:14:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+while(true){
+
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(str.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(str.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(str.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+char charAt1=str.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(buf.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(buf.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/5634/pattern-ver1-serial/src.main.java.nz.org.nesi.researchHub.control.ProjectControls.java-validateProjectAllocation.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
+break;
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+break;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+break;
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+break;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+break;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+break;
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+break;
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+break;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+break;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1968/pattern-ver1-serial/src.main.java.com.ucmo.chat.controller.Controller.java-handleMessage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+return null;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+return null;
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/323/pattern-ver1-serial/PhysicsEngine.src.de.engine.colldetect.ContactCreator.java-getCirclePolygonContact.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return unescape(buf.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V3/4040/pattern-ver1-serial/illaclient.src.illarion.client.net.client.DragScScCmd.java-toString.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()>0){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1>0||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1>0){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch>0){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)>0){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
+return null;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+return null;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/4615/pattern-ver1-serial/src.at.jku.ssw.cmm.launcher.AddProfileListener.java-mouseClicked.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+synchronized(this){
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
-for(int i=firstAmp;i<str.length();++i){
+for(int i=firstAmp;i<str.length();++i,Charset.forName("UTF-8")){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+if(buf!=null){
 buf.append((char)(entityValue));
+}
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/6565/pattern-ver1-serial/MarioAI.src.ch.idsia.agents.controllers.AdvancedMarioAIAgent.java-getAction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+if(buf!=null){
 buf.append(ch);
+}
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/6565/pattern-ver1-serial/MarioAI.src.ch.idsia.agents.controllers.AdvancedMarioAIAgent.java-getAction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+if(buf!=null){
 buf.append(ch);
+}
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/6565/pattern-ver1-serial/MarioAI.src.ch.idsia.agents.controllers.AdvancedMarioAIAgent.java-getAction.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+if(buf!=null){
 buf.append(ch);
+}
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/5324/pattern-ver1-serial/src.main.java.de.cismet.cids.custom.objecteditors.wrrl_db_mv.HydrologRouteEditor.java-sldZoomStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+if(buf!=null){
 buf.append(entityName);
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/5324/pattern-ver1-serial/src.main.java.de.cismet.cids.custom.objecteditors.wrrl_db_mv.HydrologRouteEditor.java-sldZoomStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+synchronized(this){
 buf.append(ch);
 continue;
+}
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
+synchronized(this){
 return str;
+}
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+synchronized(this){
 buf.append(ch);
 continue;
+}
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(entityName.substring(1)==null){
+continue;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V29/816/pattern-ver1-serial/src.main.java.com.dynious.refinedrelocation.client.renderer.RendererRelocator.java-renderTileEntityAt.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+if(-1!=0){
 entityValue=-1;
+}
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+if(ch>0){
 buf.append(ch);
+}
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+if(ch>0){
 buf.append(ch);
+}
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+if(ch>0){
 buf.append(ch);
+}
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/1583/pattern-ver1-serial/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java-write.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
+if(entityName==null){
+continue;
+}
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2120/pattern-ver1-serial/org.dawb.workbench.ui.src.org.dawb.workbench.ui.editors.PlotDataEditor.java-getSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
-buf.append((char)(entityValue));
+buf.append((char)entityValue*100);
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ final char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ final int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ final char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+ final int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ final char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ final String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ final int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ final String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1).trim());
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
+buf.append("]");
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+buf.append("]");
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+buf.append("]");
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
+buf.append("]");
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+buf.append("]");
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+buf.append("]");
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2811/pattern-ver1-serial/src.main.java.no.anderska.wta.engines.MinesweeperEngine.java-generateBoard.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:16:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+buf.append("            scope.apply();\n");
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V37/4602/pattern-ver1-serial/layout.src.main.java.com.flarestar.drones.layout.directives.Click.java-afterViewCreated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ @SuppressWarnings("UnusedAssignment") StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ @SuppressWarnings("UnusedAssignment") int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ @SuppressWarnings("UnusedAssignment") char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ @SuppressWarnings("UnusedAssignment") int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ @SuppressWarnings("UnusedAssignment") char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+ @SuppressWarnings("UnusedAssignment") int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ @SuppressWarnings("UnusedAssignment") int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ @SuppressWarnings("UnusedAssignment") char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
-int entityValue;
+ @SuppressWarnings("UnusedAssignment") String entityName=str.substring(i+1,semi);
+ @SuppressWarnings("UnusedAssignment") int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ @SuppressWarnings("UnusedAssignment") char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ @SuppressWarnings("UnusedAssignment") int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ @SuppressWarnings("UnusedAssignment") int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ @SuppressWarnings("UnusedAssignment") char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+ @SuppressWarnings("UnusedAssignment") int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
+ @SuppressWarnings("UnusedAssignment") int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ @SuppressWarnings("UnusedAssignment") char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
-int firstAmp=str.indexOf('&');
+ @SuppressWarnings("UnusedAssignment") int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ @SuppressWarnings("UnusedAssignment") StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ @SuppressWarnings("UnusedAssignment") StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+ @SuppressWarnings("UnusedAssignment") String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+ @SuppressWarnings("UnusedAssignment") StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
-char ch=str.charAt(i);
+ @SuppressWarnings("UnusedAssignment") char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ @SuppressWarnings("UnusedAssignment") int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+entityName=str;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()+i==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()+ch==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()+semi==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()+amph==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()+firstAmp==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+ final int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+ final int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
+ final char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5586/pattern-ver1-serial/querqy-core.src.main.java.querqy.CompoundCharSequence.java-subSequence.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str.length()-1);
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/250/pattern-ver1-serial/src.main.java.com.scienjus.client.PixivParserClient.java-buildGetUrl.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+charAt1=1000;
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(true){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(true){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt("https://myschool.ru.is/myschool/"+entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer("https://myschool.ru.is/myschool/"+str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+if(entityName!=null){
 buf.append(entityName);
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/7255/pattern-ver1-serial/parser.src.main.java.me.vertretungsplan.objects.Substitution.java-setTeacher.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1)+" votes");
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str.length()+" votes");
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+int a=0;
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+int a=0;
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+int a=0;
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+int a=0;
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:17:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+int a=0;
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+int a=0;
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+int a=0;
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+int a=0;
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+int a=0;
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
+int a=0;
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt("There was a problem with the call to ManyWho: "+entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer("There was a problem with the call to ManyWho: "+str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+String OUTSTRING="";
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+String OUTSTRING="";
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+String OUTSTRING="";
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+String OUTSTRING="";
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+String OUTSTRING="";
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+String OUTSTRING="";
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+String OUTSTRING="";
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+String OUTSTRING="";
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
+String OUTSTRING="";
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+String OUTSTRING="";
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi!=0){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue!=0){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str.length()*1000);
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/3175/pattern-ver1-serial/src.de.fuberlin.wiwiss.d2rq.server.D2RServer.java-describe.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName.isEmpty()){
+return null;
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str.isEmpty()){
+return null;
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.isEmpty()){
+return null;
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+if(entityName.isEmpty()){
+return null;
+}
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+if(entityName.isEmpty()){
+return null;
+}
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+int Integer=5;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:18:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
+int entityValue;
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
-int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1365/pattern-ver1-serial/src.main.java.nl.tue.win.vcp.virtualbreitenbergenvironment.model.Environment.java-draw.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+entityName=new String();
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/4713/pattern-ver1-serial/CapstoneProject.src.capstone.BinaryTree.java-getRecords.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt((entityName.substring(1)).toLowerCase());
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(Double.isNaN(firstAmp)){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(Double.isNaN(ch)){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+if(buf!=null){
 buf.append('&');
+}
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/387/pattern-ver1-serial/AugmentedBizzClient.src.com.app.augmentedbizz.application.data.DataManager.java-clearLocalBuffer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
+if(buf!=null){
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/387/pattern-ver1-serial/AugmentedBizzClient.src.com.app.augmentedbizz.application.data.DataManager.java-clearLocalBuffer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+if(entityName.contains("MapDisarm")){
+continue;
+}
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/811/pattern-ver1-serial/app.src.main.java.com.disarm.sanna.pdm.SocialShareActivity.java-addSentFilesToSenderNodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+if(equals(entityName)){
+return null;
+}
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+if(equals(entityName)){
+return null;
+}
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
+if(equals(entityName)){
+return null;
+}
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(equals(charAt1)){
+return null;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+int indexSelection=0;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+int indexSelection=0;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+int indexSelection=0;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+int indexSelection=0;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+int indexSelection=0;
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:19:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
+int indexSelection=0;
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+int indexSelection=0;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+int indexSelection=0;
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+int indexSelection=0;
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+int indexSelection=0;
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(entityName.substring(1).isEmpty()){
+return null;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/7204/pattern-ver1-serial/src.main.java.sg.edu.nus.cs2103t.omnitask.logic.DataImpl.java-addTask.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
+int semi=str.indexOf(';',Math.max(';',i+1));
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
-int amph=str.indexOf('&',i+1);
+int amph=str.indexOf('&',Math.max('&',i+1));
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+String entityName=str.substring(Math.max(i+1,semi),semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(Math.max(0,firstAmp),firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(0,Math.max(0,firstAmp)));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi<0){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue<0){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt("PATH: \n"+entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer("PATH: \n"+str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(str.substring(0,firstAmp)!=null){
 buf.append(str.substring(0,firstAmp));
+}
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/294/pattern-ver1-serial/src.com.fererlab.dto.PairConverter.java-marshal.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(entityName.equals("sounds")){
+continue;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName.equals("sounds")){
+continue;
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+buf.append(" & ");
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+buf.append(" & ");
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V23/2617/pattern-ver1-serial/src.main.java.com.github.opensource21.vsynchistory.service.impl.AddressServiceImpl.java-addChanges.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return "FolderPersister for '"+this;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/1833/pattern-ver1-serial/src.main.de.dal33t.powerfolder.disk.Folder.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+buf.append("    }\n");
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
+buf.append("    }\n");
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4582/pattern-ver1-serial/knapsack.src.main.java.me.williamhester.knapsack.internal.BundlingClass.java-emitRestoreMethod.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(String.valueOf(entityName.substring(1)));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(String.valueOf(str.length()));
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:20:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=i+semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if("Chrome".equals(charAt1)||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/4219/pattern-ver1-serial/src.browsermator.com.STAppController.java-itemStateChanged.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi>0){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue>0){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(charAt1+1,1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositoryCitation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+int a=1;
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+int a=1;
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+int a=1;
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+int a=1;
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+int a=1;
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+int a=1;
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+int a=1;
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
+int a=1;
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+int a=1;
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+int a=1;
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
+if(str!=null){
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+}
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V17/7646/pattern-ver1-serial/src.java.com.smi.travel.datalayer.dao.impl.TourOperationImpl.java-updateTourOperation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1)+"/logout");
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str.length()+"/logout");
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+buf.append(entityName);
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+buf.append(ch);
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/7093/pattern-ver1-serial/main.plugins.org.talend.designer.runprocess.src.main.java.org.talend.designer.runprocess.java.JavaProcessor.java-getBasePathClasspath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt("\nDealer has: \n"+entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer("\nDealer has: \n"+str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+boolean Integer=true;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+boolean b=true;
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+boolean b=true;
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:21:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+boolean b=true;
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+boolean b=true;
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+boolean b=true;
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+boolean b=true;
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+boolean b=true;
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+boolean b=true;
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+boolean b=true;
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
+boolean b=true;
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf.toString()+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
+if(str==null){
+return "";
+}
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str==null){
+return "";
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str==null){
+return "";
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str==null){
+return null;
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str==null){
+return null;
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(buf==null){
+return null;
+}
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+if(entityName==null){
+return null;
+}
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+if(entityName==null){
+return null;
+}
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(entityName==null){
+return null;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName==null){
+return null;
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
+if(entityName==null){
+return null;
+}
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.isEmpty()){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.isEmpty()){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+synchronized(this){
 entityValue=-1;
+}
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
+synchronized(this){
 entityValue=-1;
+}
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if("&null".equals(charAt1)){
+return null;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:22:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if("&null".equals(entityName)){
+return null;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+if("&null".equals(str)){
+return null;
+}
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+if("&null".equals(str)){
+return null;
+}
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+if("&null".equals(entityName)){
+return null;
+}
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+if("&null".equals(entityName)){
+return null;
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(Integer.valueOf(entityName.substring(2),16)==null){
+return null;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(0,firstAmp).trim());
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+buf.append(ch);
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+buf.append('&');
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+buf.append(';');
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+buf.append(ch);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+buf.append('&');
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+buf.append(';');
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+buf.append(entityName);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+buf.append(entityName);
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2451/pattern-ver1-serial/ShopNow.src.shopnow.Customer_Account.java-get_phone_number.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+buf.append(ch);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
-buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+buf.append(ch);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
-buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+buf.append(ch);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
-buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+buf.append(ch);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
 buf.append(ch);
+if(semi==-1){
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+buf.append(ch);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
-buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(buf.equals("")){
+return "";
+}
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+buf.append('&');
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+buf.append('&');
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+buf.append(ch);
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
-buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+buf.append(ch);
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
-buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(true){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:23:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(true){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(true){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(true){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(!str.substring(0,firstAmp).equals("")){
 buf.append(str.substring(0,firstAmp));
+}
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/60/pattern-ver1-serial/app.src.main.java.com.holygon.dishcuss.Fragments.AccountPhotosFragment.java-SetImageURL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1==false){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0==false){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append("https://myschool.ru.is/myschool/"+str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V56/3824/pattern-ver1-serial/MyRU.src.com.littleindian.myru.AssignmentDetailFragment.java-onCreateView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+buf.append(entityName);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+buf.append(entityName);
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+buf.append(ch);
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+buf.append(ch);
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+buf.append(ch);
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+if(entityName.equals("-1")){
+return null;
+}
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1||entityName.length()==Long.MIN_VALUE){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-1||semi==Long.MIN_VALUE){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0||firstAmp==Long.MIN_VALUE){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-1||entityValue==Long.MIN_VALUE){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch=='&'||ch==Long.MIN_VALUE){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0||entityName.length()==Long.MIN_VALUE){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.matches("/+[\\w\\.\\d/]+.*")){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5089/pattern-ver1-serial/exportLibraries.cimadapter.src.main.java.com.emc.storageos.cimadapter.processors.CimIndicationSet.java-processProperty.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.matches("/+[\\w\\.\\d/]+.*")){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5089/pattern-ver1-serial/exportLibraries.cimadapter.src.main.java.com.emc.storageos.cimadapter.processors.CimIndicationSet.java-processProperty.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1&&false){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/5079/pattern-ver1-serial/Server.src.server.model.players.packets.ClickNPC.java-processPacket.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(0,firstAmp)+" votes");
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2342/pattern-ver1-serial/app.src.main.java.com.example.abhishek.bookshareapp.ui.adapter.BooksAdapter.java-onBindViewHolder.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append("There was a problem with the call to ManyWho: "+str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/1227/pattern-ver1-serial/sdk-core.src.main.java.com.manywho.sdk.RunService.java-executePost.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str.length()*-1);
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1084/pattern-ver1-serial/Bank.src.entities.Account.java-returnLoan.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.text.ParseException;
+
+import java.math.BigDecimal;
+
+import java.text.NumberFormat;
+
+import java.math.RoundingMode;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(new BigDecimal(str.substring(0,firstAmp)).setScale(2,RoundingMode.HALF_UP));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/120/pattern-ver1-serial/src.main.java.sk.janobono.habox.sql.util.ItemsHelper.java-getItems.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:24:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
+}
+if(str==null){
+return null;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
+if(str==null){
+return null;
+}
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(str==null){
+return null;
+}
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+if(str==null){
+return null;
+}
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+assert (str!=null);
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+assert (str!=null);
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
+assert (str!=null);
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
+assert (str!=null);
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+assert (!entityName.isEmpty());
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+assert (!str.isEmpty());
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+assert (!str.isEmpty());
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+assert (!entityName.isEmpty());
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+assert (!entityName.isEmpty());
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+assert (!entityName.isEmpty());
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+buf.append(entityName);
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3545/pattern-ver1-serial/components.device-mgt.org.wso2.carbon.device.mgt.core.src.main.java.org.wso2.carbon.device.mgt.core.operation.mgt.dao.impl.CommandOperationDAOImpl.java-deleteOperation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(str.equals(InputStream.class)){
+return entityName;
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+if(str.equals(InputStream.class)){
+return entityName;
+}
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+if(str.equals(InputStream.class)){
+return entityName;
+}
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
+try{
 buf.append(entityName);
+}finally{
+buf.append('&');
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+try{
 buf.append(entityName);
+}finally{
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/6401/pattern-ver1-serial/main.java.org.logbuddy.logger.Fuse.java-log.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(0,firstAmp).subSequence(0,6));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/5102/pattern-ver1-serial/CloudStarProject.CloudStar.src.main.java.com.cloudstar.util.ResultViewBuilder.java-getResultFilesAndDirectoriesView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append((str.substring(0,firstAmp)).toLowerCase());
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(Double.isNaN(entityName.length())){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(Double.isNaN(semi)){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(Double.isNaN(entityValue)){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(Double.isNaN(entityName.length())){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.contains(".")){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2868/pattern-ver1-serial/src.main.java.play.templates.GroovyTemplate.java-invokeTag.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.contains(".")){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2868/pattern-ver1-serial/src.main.java.play.templates.GroovyTemplate.java-invokeTag.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+if(entityName.contains(entityName)){
+return null;
+}
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:25:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+if(entityName.contains(entityName)){
+return null;
+}
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
+if(entityName.contains(entityName)){
+return null;
+}
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1==true){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0==true){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+}else {
+if(entityName!=null){
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+if(entityName!=null){
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
+}
+}
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
+entityValue=-1;
+}else {
+if(entityName!=null){
+if(entityName.charAt(0)=='#'){
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
 entityValue=-1;
+}
+}
 }else {
+entityValue=this.entityValue(entityName);
+}
+}
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+if(entityName!=null){
+entityValue=Integer.parseInt(entityName.substring(1));
+}
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
-return str;
+return str.replace(",","\n");
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/234/pattern-ver1-serial/src.maigosoft.mcpdict.SearchResultCursorAdapter.java-lineBreak.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf.toString().replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
+}
+if(str.contains(str)){
+return null;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
+if(str.contains(str)){
+return null;
+}
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(str.contains(str)){
+return null;
+}
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+if(str.contains(str)){
+return null;
+}
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.contains(str)){
+return null;
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6336/pattern-ver1-serial/app.src.main.java.com.example.martin.nextflight.managers.FileManager.java-addFlight.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
+if(entityValue==0){
+return null;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+if(entityValue==0){
+return null;
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+}
+if(entityValue==0){
+return null;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
 }
+if(entityValue==0){
+return null;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
+if(entityValue==0){
+return null;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
 }
+if(entityValue==0){
+return null;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+if(entityValue==0){
+return null;
+}
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+buf.append(entityName);
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2108/pattern-ver1-serial/pac4j-oauth.src.main.java.org.pac4j.oauth.client.BaseOAuth10Client.java-addAccessTokenToProfile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+assert (!entityName.isEmpty());
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getOptionalStringArrayParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:26:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+assert (!entityName.isEmpty());
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getOptionalStringArrayParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return String.format("%s",buf.toString());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
+buf.append(ch);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+buf.append(ch);
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/528/pattern-ver1-serial/sketches.src.main.java.com.yahoo.sketches.frequencies.ReversePurgeItemHashMap.java-toString.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+assert (charAt1!=entityName.charAt(1));
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+assert (buf!=new StringBuffer(str.length()));
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append("PATH: \n"+str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/1966/pattern-ver1-serial/obdEnergy.src.main.java.com.example.obdenergy.obdenergy.MainActivity.java-onStop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
+assert (buf!=null);
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
+assert (buf!=null);
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+assert (buf!=null);
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName.startsWith("https")){
+return entityName;
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str.startsWith("https")){
+return str;
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.startsWith("https")){
+return str;
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+if(entityName.startsWith("https")){
+return entityName;
+}
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+if(entityName.startsWith("https")){
+return entityName;
+}
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(String.valueOf(str.substring(0,firstAmp)));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V37/4379/pattern-ver1-serial/src.main.java.st.alr.mqttitude.preferences.PreferencesBroker.java-onBindDialogView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:27:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+i++;
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=-1;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:29:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+entityValue++;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:29:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+i++;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=-1;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+entityValue++;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+buf.append(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+buf.append(entityName);
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+buf.append(entityName);
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+buf.append(entityName);
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+buf.append(entityName);
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+buf.append(entityName);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4888/pattern-ver1-serial/core.src.main.java.com.digitalpebble.storm.crawler.bolt.JSoupParserBolt.java-toOutlinks.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+assert (entityName!=null);
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+assert (entityName!=null);
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+assert (entityName!=null);
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+assert (buf!=null);
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+assert (buf!=null);
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+try{
 buf.append('&');
-buf.append(entityName);
+}finally{
 buf.append(';');
+}
+buf.append(entityName);
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
 buf.append(entityName);
+try{
 buf.append(';');
+}finally{
+buf.append('&');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(0,firstAmp)+"/logout");
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V43/2012/pattern-ver1-serial/HTTPBank.src.ibm.controller.UserInfoChanger.java-doGet.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append("\nDealer has: \n"+str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4064/pattern-ver1-serial/src.run.java-dealerScore.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName.equalsIgnoreCase("/")){
+return entityName;
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str.equalsIgnoreCase("/")){
+return str;
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.equalsIgnoreCase("/")){
+return str;
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+if(entityName.equalsIgnoreCase("/")){
+return entityName;
+}
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+if(entityName.equalsIgnoreCase("/")){
+return entityName;
+}
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+buf.append(ch);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+buf.append(ch);
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+assert (str!=null);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+assert (str!=null);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str.equalsIgnoreCase("")){
+return "";
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.equalsIgnoreCase("")){
+return "";
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName.equalsIgnoreCase("")){
+return "";
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+if(entityName.equalsIgnoreCase("")){
+return "";
+}
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+if(entityName.equalsIgnoreCase("")){
+return "";
+}
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1||"查看红包".equals(entityName.length())){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-1||"查看红包".equals(semi)){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0||"查看红包".equals(firstAmp)){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch=='&'||"查看红包".equals(ch)){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-1||"查看红包".equals(entityValue)){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0||"查看红包".equals(entityName.length())){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'||"查看红包".equals(entityName.charAt(0))){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1||entityName.length()==3){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0||entityName.length()==3){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-1||semi==3){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'||entityName.charAt(0)==3){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-1||entityValue==3){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0||firstAmp==3){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch=='&'||ch==3){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=1;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:32:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=-1;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.isEmpty()){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=0;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf.toString()==null?"":buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName!=null&&entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName!=null&&entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName!=null&&entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+buf.append((char)(entityValue));
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+buf.append((char)(entityValue));
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+buf.append((char)(entityValue));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+buf.append((char)(entityValue));
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+buf.append((char)(entityValue));
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=2;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+buf.append((char)(entityValue));
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=3;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+if(str.isEmpty()){
+str=null;
+}
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+if(str.isEmpty()){
+str=null;
+}
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
+if(str.isEmpty()){
+str=null;
+}
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()<0||entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0||firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi<0||semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()<0||entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue<0||entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch<0||ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)<0||entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+entityValue=-1;
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
+entityValue=-1;
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:33:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+entityValue=-1;
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+entityValue=-1;
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+entityValue=-1;
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+entityValue=-1;
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
 entityValue=-1;
+if(entityName.length()==1){
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+entityValue=-1;
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
-entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(true){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=(semi+semi)%semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'==false){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+buf.append((char)(entityValue));
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=charAt1;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=i;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=ch;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=semi;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=amph;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1&&amph>=0&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'||entityName.charAt(0)==Long.MIN_VALUE){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.matches("/+[\\w\\.\\d/]+.*")){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5089/pattern-ver1-serial/exportLibraries.cimadapter.src.main.java.com.emc.storageos.cimadapter.processors.CimIndicationSet.java-processProperty.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
-i=semi;
+i=semi<0?0:semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=10;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if((amph!=-1||amph=='\'')&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
-entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+entityValue=-1;
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
-entityValue=-1;
 }
+entityValue=-1;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
-entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+entityValue=-1;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:34:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+entityValue=-1;
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf.toString()!=null?buf.toString():new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1||entityName.length()==0){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-1||semi==0){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-1||entityValue==0){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch=='&'||ch==0){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0||firstAmp==0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0||entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'||entityName.charAt(0)==0){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1||entityName.length()>9){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0||firstAmp>9){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-1||semi>9){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0||entityName.length()>9){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-1||entityValue>9){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch=='&'||ch>9){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'||entityName.charAt(0)>9){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=100;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf==null?null:buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1&&entityName.length()<4000000){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0&&entityName.length()<4000000){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'&&entityName.charAt(0)<4000000){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0&&firstAmp<4000000){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-1&&semi<4000000){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-1&&entityValue<4000000){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch=='&'&&ch<4000000){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=4;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(Double.isNaN(entityName.charAt(0))){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.contains(".")){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2868/pattern-ver1-serial/src.main.java.play.templates.GroovyTemplate.java-invokeTag.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf.toString()==null?new String():buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'==true){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName==null?null:entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str==null?null:str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str==null?null:str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4299/pattern-ver1-serial/client.synapseJavaClient.src.main.java.org.sagebionetworks.client.SynapseClientImpl.java-uploadToS3FileHandle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
-return str;
+return str==null?new String():str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5872/pattern-ver1-serial/FirebaseNotes.src.main.java.de.iks.hotischeck.firebase.notes.controller.NotesDAO.java-fetchNotes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName.length()==1&&entityName.length()!=9999){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(semi==-1&&semi!=9999){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(entityValue==-1&&entityValue!=9999){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(firstAmp<0&&firstAmp!=9999){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if(ch=='&'&&ch!=9999){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName.length()==0&&entityName.length()!=9999){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName.charAt(0)=='#'&&entityName.charAt(0)!=9999){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:36:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(1>0&&entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(0>0&&entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if('#'>0&&entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
-if(semi==-1){
+if(-1>0&&semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
-if(firstAmp<0){
+if(0>0&&firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
-if(entityValue==-1){
+if(-1>0&&entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
+if('&'>0&&ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName!=null?entityName.substring(1):null);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
-StringBuffer buf=new StringBuffer(str.length());
+StringBuffer buf=new StringBuffer(str!=null?str.length():null);
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str!=null?str.substring(0,firstAmp):null);
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/4302/pattern-ver1-serial/src.com.floreantpos.model.KitchenTicket.java-fromTicket.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+assert (charAt1>=0):"Receive a negative tratment";
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+assert (charAt1>=0):"Receive a negative tratment";
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
+if(buf!=null){
 return buf.toString();
+}else {
+return null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V35/3589/pattern-ver1-serial/HermesBucarBala.app.src.main.java.com.laboratoriodesoftware2015.hermesbucarbala.presenter.DashboardPresenter.java-getListTabsById.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
-return buf.toString();
+return buf!=null?buf.toString():null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
+if(entityName==null||entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:37:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
-if(entityName.length()==0){
+if(entityName==null||entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
+if(entityName==null||entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+if(entityName.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+if(entityName.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
+if(entityName.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
+}
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
+assert (str!=null):"Appointments day is not allowed to be null!";
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+assert (str!=null):"Appointments day is not allowed to be null!";
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+assert (str!=null):"Appointments day is not allowed to be null!";
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+assert (charAt1!=0):"Receive a size tratment";
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+assert (charAt1!=0):"Receive a size tratment";
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
 }
+if(entityName.isEmpty()){
+entityName=null;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
+if(entityName.isEmpty()){
+entityName=null;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
 }
+if(entityName.isEmpty()){
+entityName=null;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(entityName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(entityName.substring(1))+1;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5032/pattern-ver1-serial/mapreduce.src.contrib.streaming.src.java.org.wikimedia.wikihadoop.StreamWikiDumpInputFormat.java-MyRecordReader.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(entityName==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+if(entityName==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(Integer.valueOf(entityName.substring(2),16)==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(charAt1>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(entityName.substring(1)==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
+if(entityValue<0){
+entityValue=0;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+if(entityValue<0){
+entityValue=0;
+}
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+if(entityValue<0){
+entityValue=0;
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+}
+if(entityValue<0){
+entityValue=0;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
 }
+if(entityValue<0){
+entityValue=0;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
+if(entityValue<0){
+entityValue=0;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
 }
+if(entityValue<0){
+entityValue=0;
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+if(entityName.equals("")){
+entityName="Manchester United FC";
+}
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4958/pattern-ver1-serial/FootballScores.app.src.main.java.barqsoft.footballscores.widget.ScoresWidgetIntentService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+buf.append(" (");
 buf.append(entityName);
 buf.append(';');
+buf.append(") ");
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+buf.append(" (");
+buf.append(") ");
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+buf.append(" (");
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
+buf.append(") ");
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/4157/pattern-ver1-serial/SMSListServ.src.TransSMSServ.MessageParser.java-parseCats.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(charAt1<=0){
+charAt1=1;
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+buf.append("\"category\" : [");
+buf.append("]");
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/1798/pattern-ver1-serial/src.main.java.com.github.jerdeb.daqvalidator.Validator.java-listCompliantCDM.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+if(buf!=null){
 buf.append('&');
+}
 buf.append(entityName);
+if(buf!=null){
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+if(buf!=null){
 buf.append('&');
+}
+if(buf!=null){
 buf.append(entityName);
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+if(buf!=null){
 buf.append(entityName);
+}
+if(buf!=null){
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
 buf.append(entityName);
+if(buf!=null){
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+if(buf!=null){
 buf.append('&');
+}
 buf.append(entityName);
-buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+if(buf!=null){
 buf.append('&');
-buf.append(entityName);
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
-buf.append(entityName);
+if(buf!=null){
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/3876/pattern-ver1-serial/src.com.akshay.protocol10.asplayer.service.MediaServiceContoller.java-onDestroy.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+char charAt1=entityName.charAt(1);
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+char charAt1=entityName.charAt(1);
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
 try{
+char charAt1=entityName.charAt(1);
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/4434/pattern-ver1-serial/gui.src.main.java.org.jboss.as.console.client.shared.subsys.messaging.forms.ConnectorForm.java-asWidget.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+entityValue=this.entityValue(entityName);
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
+if(buf!=null){
 buf.append(entityName);
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V46/1762/pattern-ver1-serial/app.src.main.java.kosbrother.com.doctorguide.SearchableActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+if(buf!=null){
 buf.append(entityName);
-buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V46/1762/pattern-ver1-serial/app.src.main.java.kosbrother.com.doctorguide.SearchableActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(0-1,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(str.substring(0,firstAmp-1));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
-String entityName=str.substring(i+1,semi);
+String entityName=str.substring(i+1,semi-1);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
+char charAt1=entityName.charAt(1);
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=-1;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+entityValue=-1;
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=-1;
 }
+entityValue=-1;
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=-1;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=-1;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+ final String currency=entityName.substring(1);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.parseInt(currency);
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1=='X'||"查看红包".equals(charAt1=='x')){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1=='x'||charAt1=='X'||charAt1=='%'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(charAt1<0L||(charAt1=='x'||charAt1=='X')){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
-if(charAt1=='x'||charAt1=='X'){
+if(true){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
+buf.append(str.substring(0,firstAmp));
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/6439/pattern-ver1-serial/core.src.game.screen.battle.Battle.java-render.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+buf.append(str.substring(0,firstAmp));
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/6439/pattern-ver1-serial/core.src.game.screen.battle.Battle.java-render.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+buf.append(str.substring(0,firstAmp));
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/6439/pattern-ver1-serial/core.src.game.screen.battle.Battle.java-render.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+buf.append(str.substring(0,firstAmp));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V67/6439/pattern-ver1-serial/core.src.game.screen.battle.Battle.java-render.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
-return str;
+String t=str;
+str=null;
+return t;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
+String t=str;
+str=null;
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
-return str;
+return t;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5100/pattern-ver1-serial/CityGenJava.src.gameObjects.player.Player.java-drop.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+buf.append(str.substring(0,firstAmp));
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/198/pattern-ver1-serial/src.com.bekvon.bukkit.residence.listeners.ResidencePlayerListener.java-onPlayerMove.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+buf.append(str.substring(0,firstAmp));
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/198/pattern-ver1-serial/src.com.bekvon.bukkit.residence.listeners.ResidencePlayerListener.java-onPlayerMove.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=-1;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+entityValue++;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 5, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
+ final String currency=str.substring(0,firstAmp);
 StringBuffer buf=new StringBuffer(str.length());
-buf.append(str.substring(0,firstAmp));
+buf.append(currency);
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/3650/pattern-ver1-serial/projects.OG-Financial.src.com.opengamma.financial.analytics.model.future.InterestRateFutureDefaultValuesFunction.java-canApplyTo.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 4, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+if(entityName==null){
+throw new IllegalStateException("User isn't registered! "+str);
+}
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1&&amph<semi||"查看红包".equals(amph!=-1)){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph!=-1&&amph<semi||amph=='%'){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.parseInt(entityName.substring(1));
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+entityValue=Integer.parseInt(entityName.substring(1));
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+entityValue=Integer.parseInt(entityName.substring(1));
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph<0L||(amph!=-1&&amph<semi)){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+entityValue=Integer.parseInt(entityName.substring(1));
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=Integer.parseInt(entityName.substring(1));
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+entityValue=Integer.parseInt(entityName.substring(1));
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+entityValue=Integer.parseInt(entityName.substring(1));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+entityValue=Integer.parseInt(entityName.substring(1));
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
+entityValue=Integer.parseInt(entityName.substring(1));
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+entityValue=Integer.parseInt(entityName.substring(1));
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+entityValue=Integer.parseInt(entityName.substring(1));
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+entityValue=Integer.parseInt(entityName.substring(1));
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+entityValue=Integer.parseInt(entityName.substring(1));
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+entityValue=Integer.parseInt(entityName.substring(1));
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
+entityValue=Integer.parseInt(entityName.substring(1));
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(true){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+entityValue=Integer.parseInt(entityName.substring(1));
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4215/pattern-ver1-serial/Mage.Server.src.main.java.mage.server.TableController.java-joinTournament.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
+entityValue=Integer.parseInt(entityName.substring(1));
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7577/pattern-ver1-serial/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.prefs.PreferencesCompat.java-setupActionBar.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str==null){
+return "";
+}
+if(buf==null){
+return str;
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str==null){
+return "";
+}
+if(buf==null){
+return str;
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
+if(str==null){
+return "";
+}
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(buf==null){
+return str;
+}
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:41:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+buf.append("<table style=\"text-align: center;\" width=\"100%\" "+"height=\"100%\" border=\"0\" bordercolor=\"#000000\">");
+buf.append("</table>");
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5923/pattern-ver1-serial/photoweb.src.com.utils.web.GenerateHTML.java-genDayNavigate.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+entityValue=Integer.parseInt(entityName.substring(1));
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/2335/pattern-ver1-serial/app.src.main.java.swampthings.dems.LoginActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/2335/pattern-ver1-serial/app.src.main.java.swampthings.dems.LoginActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+entityValue=Integer.parseInt(entityName.substring(1));
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
+if(amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1971/pattern-ver1-serial/src.main.java.gregtech.api.gui.GT_GUIContainerMetaTile_Machine.java-drawGuiContainerBackgroundLayer.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
+entityValue=Integer.parseInt(entityName.substring(1));
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V39/1103/pattern-ver1-serial/Graphs.src.com.jmga.graphs.classes.GView.java-update.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
+if(entityName.startsWith("/")){
+entityName=entityName.substring(1);
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+}
+if(str.startsWith("/")){
+str=str.substring(1);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
 }
+if(str.startsWith("/")){
+str=str.substring(1);
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+if(entityName.startsWith("/")){
+entityName=entityName.substring(1);
+}
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+if(entityName.startsWith("/")){
+entityName=entityName.substring(1);
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+synchronized(this){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+synchronized(this){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+}
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
+if(entityName.contains("phpreturn")){
+entityName=entityName.replace("php","php\n");
+}
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V39/2350/pattern-ver1-serial/src.main.java.ru.andyskvo.main.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=Integer.parseInt(entityName.substring(1));
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 2, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+entityValue=Integer.parseInt(entityName.substring(1));
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+entityValue=Integer.parseInt(entityName.substring(1));
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 2, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=-1;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+entityValue++;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 7, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:42:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(charAt1==3){
+System.out.println("debug");
+}
+if(charAt1==3){
+System.out.println("debug");
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+if(charAt1==3){
+System.out.println("debug");
+}
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+if(charAt1==3){
+System.out.println("debug");
+}
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+if(charAt1==3){
+System.out.println("debug");
+}
 entityValue=Integer.parseInt(entityName.substring(1));
+if(charAt1==3){
+System.out.println("debug");
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+if(charAt1==3){
+System.out.println("debug");
+}
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+}
+if(charAt1==3){
+System.out.println("debug");
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5250/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiVirtualVolumeManager.java-updateVirtualVolumeInfoAfterExpansion.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V27/5024/pattern-ver1-serial/src.org.exist.collections.Collection.java-getDocumentWithLock.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V27/7577/pattern-ver1-serial/networkmonitor.src.main.java.ca.rmen.android.networkmonitor.app.prefs.PreferencesCompat.java-setupActionBar.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
+if(entityName.endsWith("/")==false){
+entityName=entityName+"/";
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
 entityValue=-1;
+}
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
+if(entityName.charAt(0)=='#'){
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
 entityValue=-1;
+}
+}
+}else {
+entityValue=this.entityValue(entityName);
+}
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str.startsWith("extern ")){
+return str.substring(6,str.length()-1).trim();
+}
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+if(str.startsWith("extern ")){
+return str.substring(6,str.length()-1).trim();
+}
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
+if(str.startsWith("extern ")){
+return str.substring(6,str.length()-1).trim();
+}
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 2, DEL : 9
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
+if(amph!=-1&&amph<semi){
+buf.append(ch);
+continue;
+}
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 1, DEL : 11
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
-buf.append(entityName);
-buf.append(';');
-}else {
 buf.append((char)(entityValue));
+}else {
+buf.append('&');
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
-buf.append(entityName);
-buf.append(';');
-}else {
 buf.append((char)(entityValue));
+}else {
+buf.append(';');
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
-buf.append('&');
-buf.append(entityName);
-buf.append(';');
-}else {
 buf.append((char)(entityValue));
+}else {
+buf.append(entityName);
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 13, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
+long startTime=System.currentTimeMillis();
 entityValue=-1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
+long startTime=System.currentTimeMillis();
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+long startTime=System.currentTimeMillis();
 entityValue=Integer.parseInt(entityName.substring(1));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
+long startTime=System.currentTimeMillis();
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
+long startTime=System.currentTimeMillis();
 buf.append(ch);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
+long startTime=System.currentTimeMillis();
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
+long startTime=System.currentTimeMillis();
 entityValue=this.entityValue(entityName);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
+long startTime=System.currentTimeMillis();
 buf.append((char)(entityValue));
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
 entityValue=Integer.parseInt(entityName.substring(1));
+}else {
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
+if(entityValue==-1){
+buf.append('&');
+buf.append(entityName);
+buf.append(';');
+}else {
+buf.append((char)(entityValue));
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
+if(entityValue==-1){
+buf.append('&');
+buf.append(entityName);
+buf.append(';');
+}else {
+buf.append((char)(entityValue));
+}
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 1, DEL : 17
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 2, DEL : 16
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=Integer.parseInt(entityName.substring(1));
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 2, DEL : 16
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+entityValue=Integer.parseInt(entityName.substring(1));
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 2, DEL : 16
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=Integer.parseInt(entityName.substring(1));
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5263/pattern-ver1-serial/site.src.main.java.org.eastbar.site.ConsoleListener.java-stopListen.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 0, INS : 2, DEL : 16
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+if(charAt1==charAt1){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
+}
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/1425/pattern-ver1-serial/ScalableStorageService.src.consistent_hashing.Range.java-isWithin.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 23, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 34, UPD : 34, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 34, UPD : 34, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
+if(buf.toString().contains("E")&&buf.toString().charAt(buf.indexOf("E")+1)!='-'&&Integer.parseInt(buf.toString().substring(buf.indexOf("E")+1,buf.length()))<=15){
+return String.format("%.0f",Double.parseDouble(buf.toString().replace(' ','\0')));
+}
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V21/476/pattern-ver1-serial/app.src.main.java.com.davidsgk.microcalc.MainActivity.java-Interpreter.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 0, INS : 40, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
+synchronized(this){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
+}
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 42, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
-}
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V1/3408/pattern-ver1-serial/COMP90015ChatClient.src.tiredale.client.ChatClientSocketThread.java-IdentityChangeResponse.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 42, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3131/pattern-ver1-serial/src.cofh.tweak.asmhooks.render.RenderGlobal.java-markRenderers.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 42, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
 entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V49/556/pattern-ver1-serial/onebusaway-android.src.main.java.org.onebusaway.android.report.ui.ReportProblemFragmentBase.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 42, UPD : 42, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
+if(entityName.charAt(0)=='#'){
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 43, UPD : 0, INS : 1, DEL : 42
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 43, UPD : 0, INS : 1, DEL : 42
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:44:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 43, UPD : 0, INS : 1, DEL : 42
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
+}
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 43, UPD : 0, INS : 1, DEL : 42
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
+if(str!=null){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
+}
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 45, UPD : 3, INS : 0, DEL : 42
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=this.entityValue(entityName);
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+entityValue=this.entityValue(entityName);
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
 entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V18/307/pattern-ver1-serial/RobotCode.src.org.usfirst.frc.team2175.robot.subsystems.ContainerElevator.java-setContainerElevatorSpeed.pattern
MATCHLEVEL : ALL
ALL : 52, UPD : 52, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
 entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
-}
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 52, UPD : 52, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
 entityValue=-1;
-}
-}
 }else {
 entityValue=this.entityValue(entityName);
-}
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 52, UPD : 52, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
 entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
 entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
-}
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 52, UPD : 52, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
-if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
-}
 }
-}else {
-entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 52, UPD : 52, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
 entityValue=-1;
 }else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
-}
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 52, UPD : 52, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
+entityValue=-1;
+}else {
+if(entityName.charAt(0)=='#'){
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
 entityValue=-1;
+}
+}
 }else {
+entityValue=this.entityValue(entityName);
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
+}
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 53, UPD : 0, INS : 1, DEL : 52
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
+if(entityName.charAt(0)=='#'){
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
+}
+}else {
+entityValue=this.entityValue(entityName);
+}
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 53, UPD : 0, INS : 1, DEL : 52
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
+synchronized(this){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
+}
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 124, UPD : 124, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
-if(semi==-1){
-buf.append(ch);
-continue;
-}
-int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
-}
-String entityName=str.substring(i+1,semi);
-int entityValue;
-if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
-}
-}
-if(entityValue==-1){
-buf.append('&');
-buf.append(entityName);
-buf.append(';');
-}else {
-buf.append((char)(entityValue));
-}
-i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 124, UPD : 124, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
 if(ch=='&'){
-int semi=str.indexOf(';',i+1);
-if(semi==-1){
-buf.append(ch);
-continue;
-}
-int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
 buf.append(ch);
-continue;
-}
-String entityName=str.substring(i+1,semi);
-int entityValue;
-if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
-}
-}
-if(entityValue==-1){
-buf.append('&');
-buf.append(entityName);
-buf.append(';');
-}else {
-buf.append((char)(entityValue));
-}
-i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6802/pattern-ver1-serial/FtcRobotController.src.main.java.com.qualcomm.ftcrobotcontroller.opmodes.PacmanBotHardwareBase.java-checkUsers.pattern
MATCHLEVEL : ALL
ALL : 127, UPD : 127, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
-if(ch=='&'){
-int semi=str.indexOf(';',i+1);
-if(semi==-1){
-buf.append(ch);
-continue;
-}
-int amph=str.indexOf('&',i+1);
-if(amph!=-1&&amph<semi){
-buf.append(ch);
-continue;
-}
-String entityName=str.substring(i+1,semi);
-int entityValue;
-if(entityName.length()==0){
-entityValue=-1;
-}else {
-if(entityName.charAt(0)=='#'){
-if(entityName.length()==1){
-entityValue=-1;
-}else {
-char charAt1=entityName.charAt(1);
-try{
-if(charAt1=='x'||charAt1=='X'){
-entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
-}else {
-entityValue=Integer.parseInt(entityName.substring(1));
-}
-}catch(NumberFormatException ex){
-entityValue=-1;
-}
-}
-}else {
-entityValue=this.entityValue(entityName);
-}
-}
-if(entityValue==-1){
-buf.append('&');
-buf.append(entityName);
-buf.append(';');
-}else {
-buf.append((char)(entityValue));
-}
-i=semi;
-}else {
-buf.append(ch);
-}
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 130, UPD : 0, INS : 0, DEL : 130
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[804,870]
------------Candidate---------------
 public String unescape(String str){
 int firstAmp=str.indexOf('&');
 if(firstAmp<0){
 return str;
 }
 StringBuffer buf=new StringBuffer(str.length());
 buf.append(str.substring(0,firstAmp));
 for(int i=firstAmp;i<str.length();++i){
 char ch=str.charAt(i);
+if(ch=='&'){
+int semi=str.indexOf(';',i+1);
+if(semi==-1){
+buf.append(ch);
+continue;
+}
+int amph=str.indexOf('&',i+1);
+if(amph!=-1&&amph<semi){
+buf.append(ch);
+continue;
+}
+String entityName=str.substring(i+1,semi);
+int entityValue;
+if(entityName.length()==0){
+entityValue=-1;
+}else {
+if(entityName.charAt(0)=='#'){
+if(entityName.length()==1){
+entityValue=-1;
+}else {
+char charAt1=entityName.charAt(1);
+try{
+if(charAt1=='x'||charAt1=='X'){
+entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
+}else {
+entityValue=Integer.parseInt(entityName.substring(1));
+}
+}catch(NumberFormatException ex){
+entityValue=-1;
+}
+}
+}else {
+entityValue=this.entityValue(entityName);
+}
+}
+if(entityValue==-1){
+buf.append('&');
+buf.append(entityName);
+buf.append(';');
+}else {
+buf.append((char)(entityValue));
+}
+i=semi;
+}else {
+buf.append(ch);
+}
 if(ch=='&'){
 int semi=str.indexOf(';',i+1);
 if(semi==-1){
 buf.append(ch);
 continue;
 }
 int amph=str.indexOf('&',i+1);
 if(amph!=-1&&amph<semi){
 buf.append(ch);
 continue;
 }
 String entityName=str.substring(i+1,semi);
 int entityValue;
 if(entityName.length()==0){
 entityValue=-1;
 }else {
 if(entityName.charAt(0)=='#'){
 if(entityName.length()==1){
 entityValue=-1;
 }else {
 char charAt1=entityName.charAt(1);
 try{
 if(charAt1=='x'||charAt1=='X'){
 entityValue=Integer.valueOf(entityName.substring(2),16).intValue();
 }else {
 entityValue=Integer.parseInt(entityName.substring(1));
 }
 }catch(NumberFormatException ex){
 entityValue=-1;
 }
 }
 }else {
 entityValue=this.entityValue(entityName);
 }
 }
 if(entityValue==-1){
 buf.append('&');
 buf.append(entityName);
 buf.append(';');
 }else {
 buf.append((char)(entityValue));
 }
 i=semi;
 }else {
 buf.append(ch);
 }
 }
 return buf.toString();
 }

PATTERN : /home/jiajun/GithubData/2016/V18/1214/pattern-ver1-serial/src.main.java.cz.vutbr.web.domassign.SingleMapNodeData.java-toString.pattern
MATCHLEVEL : ALL
ALL : 131, UPD : 0, INS : 1, DEL : 130
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:45:42 CDT
--------------- END -----------------
Location : org.apache.commons.lang.IntHashMap.Entry:[83, 84, 85, 86, 87, 88]#0.23570226039551587
Compute Candidate : 2019.09.08 AD at 05:45:57 CDT - 2019.09.08 AD at 05:50:28 CDT , PNumber : 11254, CandNumber : 255 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=this;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/3216/pattern-ver1-serial/instagram_integration.app.src.main.java.com.hha.instagram_integration.Photo.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:50:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=this;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/3216/pattern-ver1-serial/instagram_integration.app.src.main.java.com.hha.instagram_integration.Photo.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+this.hash=0;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=0;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int i,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1206/pattern-ver1-serial/mobile.src.main.java.sketchagram.chalmers.com.sketchagram.MainActivity.java-onConnectionSuspended.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int i,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1206/pattern-ver1-serial/mobile.src.main.java.sketchagram.chalmers.com.sketchagram.MainActivity.java-onConnectionSuspended.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=next;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+this.hash=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+this.hash=1;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=1;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=null;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+this.hash=this.key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:52:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=this.hash;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=hash;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=0;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2689/pattern-ver1-serial/wififixer.src.org.wahtod.wififixer.WFConnection.java-clearConnectedStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int newState,int key,Object value,Entry next){
+this.hash=newState;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4595/pattern-ver1-serial/src.main.java.com.sparta.is.armor.ArmorIS.java-setState.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int newState,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=newState;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4595/pattern-ver1-serial/src.main.java.com.sparta.is.armor.ArmorIS.java-setState.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int authoredForumsAmt,int key,Object value,Entry next){
+this.hash=authoredForumsAmt;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7435/pattern-ver1-serial/msgcntr.messageforums-app.src.java.org.sakaiproject.tool.messageforums.ui.MessageForumStatisticsBean.java-setAuthoredForumsAmt.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int authoredForumsAmt,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=authoredForumsAmt;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7435/pattern-ver1-serial/msgcntr.messageforums-app.src.java.org.sakaiproject.tool.messageforums.ui.MessageForumStatisticsBean.java-setAuthoredForumsAmt.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+hash++;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+key++;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+hash++;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+key++;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.hash++;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+this.key++;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+hash--;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+key--;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.hash--;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+this.key--;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+hash--;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+key--;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import javax.xml.bind.annotation.XmlAccessType;
+
+import javax.xml.bind.annotation.XmlAccessorType;
+
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3790/pattern-ver1-serial/tools.dbcli.src.main.java.com.emc.storageos.dbcli.wrapper.FSExportMapWrapper.java-setValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import javax.xml.bind.annotation.XmlAccessType;
+
+import javax.xml.bind.annotation.XmlAccessorType;
+
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+value=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3790/pattern-ver1-serial/tools.dbcli.src.main.java.com.emc.storageos.dbcli.wrapper.FSExportMapWrapper.java-setValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import javax.xml.bind.annotation.XmlAccessType;
+
+import javax.xml.bind.annotation.XmlAccessorType;
+
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+value=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3790/pattern-ver1-serial/tools.dbcli.src.main.java.com.emc.storageos.dbcli.wrapper.FSExportMapWrapper.java-setValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import javax.xml.bind.annotation.XmlAccessType;
+
+import javax.xml.bind.annotation.XmlAccessorType;
+
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+value=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3790/pattern-ver1-serial/tools.dbcli.src.main.java.com.emc.storageos.dbcli.wrapper.FSExportMapWrapper.java-setValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+synchronized(this){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+synchronized(this){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+synchronized(this){
 this.hash=hash;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+synchronized(this){
 this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object bindingModes,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=bindingModes;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry bindingModes){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=bindingModes;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int bindingModes,int key,Object value,Entry next){
+this.hash=bindingModes;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int bindingModes,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=bindingModes;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object collectorManager,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=collectorManager;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry collectorManager){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=collectorManager;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int collectorManager,int key,Object value,Entry next){
+this.hash=collectorManager;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int collectorManager,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=collectorManager;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object parentFileShare,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=parentFileShare;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry parentFileShare){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=parentFileShare;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int parentFileShare,int key,Object value,Entry next){
+this.hash=parentFileShare;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int parentFileShare,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=parentFileShare;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object pIssued,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=pIssued;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry pIssued){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=pIssued;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry pIssued){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=pIssued;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int pIssued,int key,Object value,Entry next){
+this.hash=pIssued;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int hash,int pIssued,Object value,Entry next){
+this.hash=pIssued;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object Pin,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=Pin;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry Pin){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=Pin;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int Pin,int key,Object value,Entry next){
+this.hash=Pin;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int Pin,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=Pin;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object graphdbInput,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=graphdbInput;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry graphdbInput){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=graphdbInput;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int graphdbInput,int key,Object value,Entry next){
+this.hash=graphdbInput;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int graphdbInput,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=graphdbInput;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+hash++;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+key++;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object thePrescribeMedicationCntl,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=thePrescribeMedicationCntl;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry thePrescribeMedicationCntl){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=thePrescribeMedicationCntl;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry thePrescribeMedicationCntl){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=thePrescribeMedicationCntl;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int thePrescribeMedicationCntl,int key,Object value,Entry next){
+this.hash=thePrescribeMedicationCntl;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int hash,int thePrescribeMedicationCntl,Object value,Entry next){
+this.hash=thePrescribeMedicationCntl;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object pScore,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=pScore;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry pScore){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=pScore;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int pScore,int key,Object value,Entry next){
+this.hash=pScore;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int pScore,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=pScore;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object pterm,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=pterm;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry pterm){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=pterm;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int pterm,int key,Object value,Entry next){
+this.hash=pterm;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int pterm,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=pterm;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object boid,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=boid;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry boid){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+this.next=boid;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int boid,int key,Object value,Entry next){
+this.hash=boid;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int boid,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=boid;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int animationStyle,int key,Object value,Entry next){
+this.hash=animationStyle;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3883/pattern-ver1-serial/app.src.main.java.com.shockn745.workoutmotivationaltool.motivation.recyclerview.animation.CardAnimator.java-setAnimationStyle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int hash,int animationStyle,Object value,Entry next){
+this.hash=animationStyle;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3883/pattern-ver1-serial/app.src.main.java.com.shockn745.workoutmotivationaltool.motivation.recyclerview.animation.CardAnimator.java-setAnimationStyle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int animationStyle,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=animationStyle;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3883/pattern-ver1-serial/app.src.main.java.com.shockn745.workoutmotivationaltool.motivation.recyclerview.animation.CardAnimator.java-setAnimationStyle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int animationStyle,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=animationStyle;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3883/pattern-ver1-serial/app.src.main.java.com.shockn745.workoutmotivationaltool.motivation.recyclerview.animation.CardAnimator.java-setAnimationStyle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+this.hash=2;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6026/pattern-ver1-serial/advanced.mathfx.src.main.java.org.arakhne.afc.math.geometry.d2.dfx.Path2dfx.java-toDoubleArray.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=2;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6026/pattern-ver1-serial/advanced.mathfx.src.main.java.org.arakhne.afc.math.geometry.d2.dfx.Path2dfx.java-toDoubleArray.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+value=this;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+next=this;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 05:59:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+this.value=this;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(hash!=0){
 this.hash=hash;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(key!=0){
 this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+this.value=value;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+this.value=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+hash=hash;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+key=key;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+next=next;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(this.value==null){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(this.next==null){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+int a=0;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+String OUTSTRING="";
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(value!=null){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/663/pattern-ver1-serial/src.ceprei.appcrawler.config.FileAppCrawlerConfig.java-FileAppCrawlerConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(next!=null){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/663/pattern-ver1-serial/src.ceprei.appcrawler.config.FileAppCrawlerConfig.java-FileAppCrawlerConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+hash=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+key=hash;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(equals(value)){
+return ;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(equals(next)){
+return ;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(equals(hash)){
+return ;
+}
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(equals(key)){
+return ;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+int indexSelection=0;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+int a=1;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+boolean b=true;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+this.value=value;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+this.next=next;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+this.hash=hash;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+this.key=key;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(value==null){
+return ;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(next==null){
+return ;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(hash<0){
+return ;
+}
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(key<0){
+return ;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int yy,int key,Object value,Entry next){
+hash=yy;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6317/pattern-ver1-serial/core.src.com.nnldev.fartlek.sprites.Obstacle.java-setY.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int yy,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+key=yy;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6317/pattern-ver1-serial/core.src.com.nnldev.fartlek.sprites.Obstacle.java-setY.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int perrCode,int key,Object value,Entry next){
+hash=perrCode;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/6417/pattern-ver1-serial/src.main.java.com.bill.team02.week4.IORuntimeException.java-IORuntimeException.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int perrCode,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+key=perrCode;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/6417/pattern-ver1-serial/src.main.java.com.bill.team02.week4.IORuntimeException.java-IORuntimeException.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+assert (value!=null);
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+assert (next!=null);
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(value!=null){
+this.hash=hash;
+this.key=key;
+this.value=value;
+this.next=next;
+}
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(next!=null){
+this.hash=hash;
+this.key=key;
+this.value=value;
+this.next=next;
+}
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(this.hash==0){
+return ;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(this.key==0){
+return ;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import java.util.Collection;
+
+import java.util.Arrays;
+
+import java.util.HashSet;
+
+import java.util.ArrayList;
+
+import java.util.Set;
+
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+this.value=new ArrayList<>(Arrays.asList(value));
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4438/pattern-ver1-serial/src.model.writable.Interface.java-setInterfaces.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object r,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+value=r;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry r){
 this.hash=hash;
 this.key=key;
 this.value=value;
-this.next=next;
+next=r;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+protected Entry(int r,int key,Object value,Entry next){
+hash=r;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int r,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+key=r;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+assert (value!=null);
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+assert (next!=null);
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if((Thread.currentThread().interrupted())){
+return ;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object sourceGtfsCache,Entry next){
+value=sourceGtfsCache;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int key,Object value,Entry sourceGtfsCache){
+next=sourceGtfsCache;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int sourceGtfsCache,int key,Object value,Entry next){
+hash=sourceGtfsCache;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
-protected Entry(int hash,int key,Object value,Entry next){
+protected Entry(int hash,int sourceGtfsCache,Object value,Entry next){
+key=sourceGtfsCache;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+this.hash=(hash+hash)%hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=(key+key)%key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+this.hash=hash<0?0:hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+this.key=key<0?0:key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+try{
 this.key=key;
+}finally{
+this.hash=hash;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
+try{
 this.value=value;
+}finally{
+this.hash=hash;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
 this.value=value;
+try{
 this.next=next;
+}finally{
+this.hash=hash;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+try{
 this.hash=hash;
+}finally{
 this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+try{
 this.value=value;
+}finally{
+this.key=key;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
 this.value=value;
+try{
 this.next=next;
+}finally{
+this.key=key;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+try{
 this.hash=hash;
-this.key=key;
+}finally{
 this.value=value;
+}
+this.key=key;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+try{
 this.key=key;
+}finally{
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+try{
 this.next=next;
+}finally{
+this.value=value;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+try{
 this.hash=hash;
+}finally{
+this.next=next;
+}
 this.key=key;
 this.value=value;
-this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+assert (hash>=0):"Receive a negative tratment";
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+assert (key>=0):"Receive a negative tratment";
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+try{
 this.key=key;
-this.value=value;
+}finally{
 this.next=next;
+}
+this.value=value;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+try{
 this.value=value;
+}finally{
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/2377/pattern-ver1-serial/common.src.main.java.slash.common.io.Files.java-writeToTempFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+assert (value!=null):"Appointments day is not allowed to be null!";
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+assert (next!=null):"Appointments day is not allowed to be null!";
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected Entry(int hash,int key,Object value,Entry next){
+assert (hash!=0):"Receive a size tratment";
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 protected Entry(int hash,int key,Object value,Entry next){
+assert (key!=0):"Receive a size tratment";
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(hash>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:02:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(key>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(this.hash<0){
+this.hash=0;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(this.key<0){
+this.key=0;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(value==null){
+value=this.value;
+}else {
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3590/pattern-ver1-serial/src.main.java.ch.bfh.btx8081.w2015.blue.HealthVisApp.View.PatientDetailView.java-refreshView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(next==null){
+next=this.next;
+}else {
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3590/pattern-ver1-serial/src.main.java.ch.bfh.btx8081.w2015.blue.HealthVisApp.View.PatientDetailView.java-refreshView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+if(this.hash!=hash){
 this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
+if(this.hash!=hash){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
 this.value=value;
+if(this.hash!=hash){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(this.key!=key){
 this.hash=hash;
-this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+if(this.key!=key){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
 this.value=value;
+if(this.key!=key){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(this.value!=value){
 this.hash=hash;
+}
 this.key=key;
-this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(this.value!=value){
 this.key=key;
-this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+if(this.value!=value){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(this.next!=next){
 this.hash=hash;
+}
 this.key=key;
 this.value=value;
-this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
+if(this.value==null){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
 this.value=value;
+if(this.next==null){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+if(this.value==null){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
 this.value=value;
+if(this.next==null){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
-this.value=value;
+if(this.next==null){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
+if(this.value!=null){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+if(this.value!=null){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(this.value!=null){
 this.value=value;
-this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
 this.value=value;
+if(this.next!=null){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(hash!=0){
 this.hash=hash;
-this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7235/pattern-ver1-serial/src.core.Model.java-addEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(hash!=0){
 this.hash=hash;
+}
 this.key=key;
-this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7235/pattern-ver1-serial/src.core.Model.java-addEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(hash!=0){
 this.hash=hash;
+}
 this.key=key;
 this.value=value;
-this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7235/pattern-ver1-serial/src.core.Model.java-addEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+if(key!=0){
 this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7235/pattern-ver1-serial/src.core.Model.java-addEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(key!=0){
 this.key=key;
-this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7235/pattern-ver1-serial/src.core.Model.java-addEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+if(key!=0){
 this.key=key;
+}
 this.value=value;
-this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7235/pattern-ver1-serial/src.core.Model.java-addEvent.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.value=value;
+this.next=next;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.next=next;
+this.value=value;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
 this.hash=hash;
+this.value=value;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
 this.hash=hash;
+this.next=next;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.key=key;
+this.value=value;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.key=key;
+this.next=next;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.value=value;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.value=value;
+this.key=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.next=next;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.next=next;
+this.key=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(value==null||next==null){
+throw new NullPointerException();
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(next==null||value==null){
+throw new NullPointerException();
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+try{
 this.key=key;
+}finally{
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
+try{
 this.key=key;
-this.value=value;
+}finally{
 this.next=next;
+}
+this.value=value;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
-this.key=key;
+try{
 this.value=value;
+}finally{
+this.key=key;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
+try{
 this.value=value;
+}finally{
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
-this.key=key;
 this.value=value;
+try{
 this.next=next;
+}finally{
+this.key=key;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
 this.key=key;
-this.value=value;
+try{
 this.next=next;
+}finally{
+this.value=value;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+try{
 this.hash=hash;
-this.key=key;
+}finally{
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+try{
 this.hash=hash;
-this.key=key;
-this.value=value;
+}finally{
 this.next=next;
+}
+this.value=value;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
-this.hash=hash;
-this.key=key;
+try{
 this.value=value;
+}finally{
+this.hash=hash;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
-this.key=key;
+try{
 this.value=value;
+}finally{
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2113/pattern-ver1-serial/src.main.java.hudson.plugins.perforce.QuickRestoreCall.java-call.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 1, INS : 0, DEL : 8
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(hash==3){
+System.out.println("debug");
+}
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(hash==3){
+System.out.println("debug");
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+if(key==3){
+System.out.println("debug");
+}
 this.hash=hash;
 this.key=key;
 this.value=value;
+if(key==3){
+System.out.println("debug");
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+for(int i=0;i<24;i++){
 this.key=key;
+}
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+for(int i=0;i<24;i++){
 this.hash=hash;
+}
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+for(int i=0;i<24;i++){
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:04:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
 this.value=value;
+for(int i=0;i<24;i++){
 this.next=next;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
 this.key=key;
+if(null==value||value.equals("")){
+this.value="null";
+}else {
 this.value=value;
+}
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/3929/pattern-ver1-serial/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.disruptor.inbound.QueueInfo.java-QueueInfo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.next=next;
+this.value=value;
+this.hash=hash;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.value=value;
+this.next=next;
+this.hash=hash;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.next=next;
+this.value=value;
+this.key=key;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.value=value;
+this.next=next;
+this.key=key;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.key=key;
+this.value=value;
+this.hash=hash;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.key=key;
+this.next=next;
+this.hash=hash;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.value=value;
+this.key=key;
+this.hash=hash;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.next=next;
+this.key=key;
+this.hash=hash;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.value=value;
+this.key=key;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.next=next;
+this.key=key;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4457/pattern-ver1-serial/SisfoProjectManagement.src.sisfoprojectmanagement.Orang.java-Orang.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.value=value;
 this.hash=hash;
+this.key=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.next=next;
 this.hash=hash;
+this.key=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.next=next;
+this.value=value;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.value=value;
+this.next=next;
 this.hash=hash;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.next=next;
+this.value=value;
+this.key=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.value=value;
+this.next=next;
+this.key=key;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+this.hash=hash;
+this.next=next;
 this.hash=hash;
+this.value=value;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
 this.hash=hash;
+this.next=next;
+this.key=key;
+this.value=value;
 this.key=key;
 this.value=value;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V10/2655/pattern-ver1-serial/core.src.com.segdx.game.entity.GameOver.java-GameOver.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[75,88]
------------Candidate---------------
 protected Entry(int hash,int key,Object value,Entry next){
+long startTime=System.currentTimeMillis();
 this.hash=hash;
 this.key=key;
 this.value=value;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 this.next=next;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:05:46 CDT
--------------- END -----------------
Location : org.apache.commons.lang.Entities.add:[427, 428, 429]#0.23570226039551587
Compute Candidate : 2019.09.08 AD at 06:06:03 CDT - 2019.09.08 AD at 06:10:19 CDT , PNumber : 11165, CandNumber : 111 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+mapNameToValue.putIfAbsent(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5128/pattern-ver1-serial/mbhd-core.src.main.java.org.multibit.hd.core.services.WalletService.java-addTransactionInfo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+mapNameToValue.remove(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/4998/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Adapters.CommentAdapter.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+this.mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
-mapValueToName.put(value,name);
+this.mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.isEmpty()){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+value++;
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+value++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+value--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+value--;
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+synchronized(mapNameToValue){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+synchronized(mapValueToName){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+synchronized(this){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+synchronized(this){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(equals(name)){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(equals(value)){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(equals(name)){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(equals(value)){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:10:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:12:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name==null){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:12:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name==null){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:12:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(mapNameToValue!=null){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:12:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(mapValueToName!=null){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(mapNameToValue==null){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(mapValueToName==null){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if("index".equals(name)){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if("index".equals(value)){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.equals("TIME")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if("&null".equals(value)){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if("&null".equals(name)){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name.equals("DATETIME")){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+name=name;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+value=value;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import java.util.Map.Entry;
+
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(!name.isEmpty()){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V17/735/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.FileStorageScheduler.java-getRecommendedVirtualNASBasedOnCandidatePools.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(new Integer(value)!=null){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/6062/pattern-ver1-serial/src.main.java.org.openarchives.resourcesync.ResourceSyncDescription.java-addCapabilityList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name!=null){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/6062/pattern-ver1-serial/src.main.java.org.openarchives.resourcesync.ResourceSyncDescription.java-addCapabilityList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(value<0){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(value<0){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name!=null){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/991/pattern-ver1-serial/CEO.src.cs2103.CommandParser.java-separateParameters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(name.contains("deviantart.com")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+int a=0;
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.equals(value)){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+String OUTSTRING="";
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+int mapNameToValue=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+int mapValueToName=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(mapValueToName.contains(name)){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(mapValueToName.contains(value)){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(String name,int value){
+if(name.equals(InputStream.class)){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.startsWith("-")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3084/pattern-ver1-serial/src.cdio.shared.FieldVerifier.java-isValidRbId.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.startsWith("extern ")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:13:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.startsWith("https")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+int a=1;
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.equalsIgnoreCase("/")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+boolean mapNameToValue=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+boolean mapValueToName=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+boolean b=true;
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.equalsIgnoreCase("")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.matches("[0-9]*")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5036/pattern-ver1-serial/src.engine.PrinterServerTask1After.java-checkIfInputMatchStored.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+mapNameToValue.put(name,new Integer(Math.abs(value)));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if((Thread.currentThread().interrupted())){
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+mapNameToValue.put(name,new Integer(value&0xff));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/4742/pattern-ver1-serial/src.uk.ac.herts.SmartLab.XBee.Response.XBeeRx16Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(new Integer(value)>0){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/464/pattern-ver1-serial/src.com.nhksos.jjfs85.BetterShop.BSCommand.java-listAlias.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(mapNameToValue.size()>0){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(mapValueToName.size()>0){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V48/506/pattern-ver1-serial/app.src.main.java.com.jessie.guessnumber.MainActivity.java-delete.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+assert (name!=null);
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+assert (!name.isEmpty());
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name!=null){
+mapNameToValue.put(name,new Integer(value));
+mapValueToName.put(value,name);
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void add(String name,int value){
+if(name.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+assert (name!=null);
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(!mapNameToValue.containsKey(name)){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/7615/pattern-ver1-serial/src.mudmap2.backend.World.java-put.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(!mapValueToName.containsKey(value)){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V39/7615/pattern-ver1-serial/src.mudmap2.backend.World.java-put.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name.isEmpty()){
+name=null;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(name.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:14:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+try{
 mapNameToValue.put(name,new Integer(value));
+}finally{
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+assert (value>=0):"Receive a negative tratment";
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+assert (name!=null):"Appointments day is not allowed to be null!";
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public void add(String name,int value){
+assert (value!=0):"Receive a size tratment";
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(mapNameToValue.isEmpty()){
+mapNameToValue=null;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(mapValueToName.isEmpty()){
+mapValueToName=null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(mapNameToValue==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(mapValueToName==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(value>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(value>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(mapNameToValue!=null){
 mapNameToValue.put(name,new Integer(value));
+}
+if(mapValueToName!=null){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/1406/pattern-ver1-serial/src.com.netease.qa.emmagee.utils.TrafficInfo.java-getTrafficInfo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+try{
 mapValueToName.put(value,name);
+}finally{
+mapNameToValue.put(name,new Integer(value));
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 1, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
-mapValueToName.put(value,name);
+mapValueToName.put(value-1,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.equals("CALL_RECEIVED_AT")){
+return ;
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(name.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(name.equals("INFO")){
+return ;
+}
+if(name.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(new Integer(value)!=null&&name!=null){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/523/pattern-ver1-serial/src.se.chalmers.lidkopingsh.model.Order.java-sync.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(!name.endsWith("/")){
+name+="/";
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5980/pattern-ver1-serial/WebAlbums3-Bootstrap.src.net.wazari.bootstrap.GF.java-start.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(mapNameToValue!=null){
 mapNameToValue.put(name,new Integer(value));
-mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7443/pattern-ver1-serial/app.src.main.java.com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.java-setCharacteristicNotification.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name==null){
+mapNameToValue.put(name,"onLoadFinished: end because bookSearchData is null.");
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/204/pattern-ver1-serial/app.src.main.java.com.daipresents.tsundoku.com.daipresents.tsundoku.booksapi.BookSearchResultActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+if(name==null){
+mapValueToName.put(value,"onLoadFinished: end because bookSearchData is null.");
+return ;
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/204/pattern-ver1-serial/app.src.main.java.com.daipresents.tsundoku.com.daipresents.tsundoku.booksapi.BookSearchResultActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 7, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+if(mapValueToName!=null){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7443/pattern-ver1-serial/app.src.main.java.com.example.mobile.smartcycledemo.bluetooth.BluetoothLeService.java-setCharacteristicNotification.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(name.startsWith("\r\n")){
+name=name.substring(2);
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(name.startsWith("/")){
+name=name.substring(1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(value==3){
+System.out.println("debug");
+}
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(value==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+if(name.endsWith("/")==false){
+name=name+"/";
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:15:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+if(!(mapNameToValue.get(name)==new Integer(value))){
 mapNameToValue.put(name,new Integer(value));
-mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/1854/pattern-ver1-serial/src.main.java.eu.spitfire_project.smart_service_proxy.core.httpServer.EntityManager.java-virtualEntityCreated.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 6, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:16:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+for(int i=0;i<24;i++){
 mapNameToValue.put(name,new Integer(value));
+}
 mapValueToName.put(value,name);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:16:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
 mapNameToValue.put(name,new Integer(value));
+for(int i=0;i<24;i++){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:16:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
-mapNameToValue.put(name,new Integer(value));
+if(!(mapValueToName.get(value)==name)){
 mapValueToName.put(value,name);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/1854/pattern-ver1-serial/src.main.java.eu.spitfire_project.smart_service_proxy.core.httpServer.EntityManager.java-virtualEntityCreated.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 6, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:16:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[423,429]
------------Candidate---------------
 public void add(String name,int value){
+long startTime=System.currentTimeMillis();
 mapNameToValue.put(name,new Integer(value));
 mapValueToName.put(value,name);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:16:09 CDT
--------------- END -----------------
Location : org.apache.commons.lang.IntHashMap.put:[296, 297, 298, 299, 307, 316, 317, 318, 319]#0.23570226039551587
Compute Candidate : 2019.09.08 AD at 06:16:25 CDT - 2019.09.08 AD at 06:41:54 CDT , PNumber : 11413, CandNumber : 447 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+continue;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:41:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
+ Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:41:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
-int hash=key;
+ int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+ int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+ Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return new Object();
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5649/pattern-ver1-serial/src.todolist.logic.FunctionChecker.java-deleteChecker.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];e==null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return null;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+e=e.next;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
+e=e.next;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+tab=table;
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
+tab=table;
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/2554/pattern-ver1-serial/src.GreenTeaScript.java-CommentToken.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Collection;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],myUid;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V12/276/pattern-ver1-serial/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.viewmodel.GroupVM.java-create.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],DEFAULT_TIMEOUT2;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/3872/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ManageAccount.java-addNewUserAccount.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return this;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/4081/pattern-ver1-serial/src.com.bthorson.torule.screens.MessageScreen.java-respondToMouseClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],MAX_SERVICE_NODES;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/4395/pattern-ver1-serial/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.zookeeper.ZkServiceDescriptors.java-start.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],MAX_ZK_WAIT_RETRY_TIMES;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7180/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcOpHandler.java-waitForAllNodesAndReboot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+break;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return true;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+return true;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V45/3473/pattern-ver1-serial/src.main.java.com.fabegabe.cmd.CCCommand.java-onCommand.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(index==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(key==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:42:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];e!=null;e=e){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return 0;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2131/pattern-ver1-serial/src.nl.dobots.bluenet.extended.structs.BleDeviceList.java-compare.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
-int hash=key;
+Integer hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:44:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+Integer index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+return 0;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:44:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[count];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V40/625/pattern-ver1-serial/src.controllers.multiPlayer.sampleMCTS.SingleTreeNode.java-rollOut.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],localLevel;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1178/pattern-ver1-serial/wrapper.src.main.java.com.ankit.wrapper.Logger.java-w.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
+e.value=tab;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
+e.value=hash;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
+e.value=index;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4596/pattern-ver1-serial/VortexGameEngine.src.vortex.Game.java-setDriver.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
+e.value=e;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4596/pattern-ver1-serial/VortexGameEngine.src.vortex.Game.java-setDriver.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
+e.value=key;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4596/pattern-ver1-serial/VortexGameEngine.src.vortex.Game.java-setDriver.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.xml.bind.annotation.XmlAccessType;
+
+import javax.xml.bind.annotation.XmlAccessorType;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
+value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3790/pattern-ver1-serial/tools.dbcli.src.main.java.com.emc.storageos.dbcli.wrapper.FSExportMapWrapper.java-setValue.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.ArrayList;
+
+import com.sun.javafx.scene.control.behavior.KeyBinding;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];e!=null;e=e.next,new ArrayList<KeyBinding>()){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/314/pattern-ver1-serial/src.main.java.jfxtras.labs.internal.scene.control.behavior.SixteenSegmentBehavior.java-SixteenSegmentBehavior.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count<=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return "";
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/5469/pattern-ver1-serial/OnlineBookStoreServer.src.Server.Routines.java-getMYSQLPath.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];e!=null;e=null){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+tab[index]=null;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
-return old;
+return e;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
-return old;
+return value;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
-return old;
+return key;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
-return old;
+return tab[index];
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6187/pattern-ver1-serial/device-manager.core.src.main.java.org.dc.bco.manager.device.core.AbstractDeviceFactory.java-newInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[hash];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+Entry e=new Entry(hash,key,value,tab[hash]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/1576/pattern-ver1-serial/src.wyil.io.WyilFileReader.java-readTypePool.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return tab;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return hash;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return index;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return e;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return value;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/56/pattern-ver1-serial/src.main.java.javax.shell.Shell.java-getInstance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
-return old;
+return tab;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
-return old;
+return hash;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
-return old;
+return index;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/6794/pattern-ver1-serial/java.src.main.java.net.auxesia.Population.java-getPopulation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],_afterComposeMethodCache;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V6/5922/pattern-ver1-serial/zkbind.src.org.zkoss.bind.BindComposer.java-doAfterCompose.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];tab!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];value!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];e.value!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];tab[index]!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/1150/pattern-ver1-serial/src.main.java.de.nedelosk.modularmachines.client.gui.GuiAssembler.java-onUpdate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return "An arena doesn't seem to be built yet.";
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return "";
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+return "";
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.List;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],mActions;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/428/pattern-ver1-serial/quickaction.src.main.java.com.imallan.quickaction.QuickActionOnTouchListener.java-onDown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
-return null;
+return key;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/7440/pattern-ver1-serial/Java.Ore.java-createOre.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return hash;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return value;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+return e;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2280/pattern-ver1-serial/Project1.src.searchAlgorithms.BFS.java-search.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+int index=(hash|0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+int index=(hash&0x7fffffff)|tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/5904/pattern-ver1-serial/src.gameboi.GBRegisters.java-getHL.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+rehash();
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/3884/pattern-ver1-serial/TcpChat.src.client.gui.ClientGuiThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],mRelationId;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/910/pattern-ver1-serial/app.src.main.java.fr.sims.coachingproject.ui.fragment.RelationChatFragment.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
-int hash=key;
+ final int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+ final Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
-int hash=key;
+ final int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
-Object old=e.value;
+ final Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
+ Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+ int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
+ Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
-Object old=e.value;
+ Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
+ Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+ Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
-int hash=key;
+ Entry tab[]=table;
+ int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:46:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
-int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+ int hash=key;
+ int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+rehash();
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+rehash();
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+rehash();
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+rehash();
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+rehash();
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+rehash();
 }
 if(count>=threshold){
-rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+rehash();
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+rehash();
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/2466/pattern-ver1-serial/tajo-core.src.main.java.org.apache.tajo.worker.Task.java-run.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+rehash();
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+rehash();
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+hash++;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+hash++;
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+hash++;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+index++;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+hash++;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+hash++;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+index++;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+index++;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+index++;
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+hash--;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+hash--;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+hash--;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+index--;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+hash--;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+hash--;
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+index--;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+index--;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+rehash();
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
+rehash();
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.xml.bind.annotation.XmlAccessType;
+
+import javax.xml.bind.annotation.XmlAccessorType;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+value=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/3790/pattern-ver1-serial/tools.dbcli.src.main.java.com.emc.storageos.dbcli.wrapper.FSExportMapWrapper.java-setValue.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+synchronized(this){
 e.value=value;
+}
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+synchronized(this){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index++];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+Entry e=new Entry(hash,key,value,tab[index++]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+tab[index++]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/7673/pattern-ver1-serial/src.main.java.org.rapla.storage.dbrm.RemoteOperator.java-getFromId.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+rehash();
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/3822/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.activities.ProfileActivity.java-SetupNewUserProfile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+synchronized(this){
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+synchronized(this){
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
 tab=table;
+try{
 index=(hash&0x7fffffff)%tab.length;
+}finally{
+rehash();
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
+try{
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}finally{
+rehash();
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:48:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+try{
 tab[index]=e;
+}finally{
+rehash();
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:49:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+try{
 count++;
+}finally{
+rehash();
+}
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+synchronized(this){
 rehash();
+}
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:49:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+synchronized(this){
 count++;
+}
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:49:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+rehash();
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5656/pattern-ver1-serial/Project1.src.com.example.project1.EditTextModified.java-onSelectionChanged.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 1, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:49:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],continentName,countryCode;e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/6266/pattern-ver1-serial/app.src.main.java.com.hyperion.dashdroid.radio.RadioListFragment.java-refresh.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:49:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+while(true){
+
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:51:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+while(true){
+
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index],userEmail;e!=null;e=e.next,e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V15/3912/pattern-ver1-serial/app.src.main.java.finalproject.ee461l.journey.JoinTrip.java-searchForUser.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
+synchronized(this){
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+synchronized(this){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(e==null){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1221/pattern-ver1-serial/CransJavaAI.trunk.src.com.springrts.ai.crans.DGunControllerHandler.java-update.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.nio.charset.Charset;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];e!=null;e=e.next,Charset.forName("UTF-8")){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3733/pattern-ver1-serial/Code.Part1.src.core.Intraprocedural.java-callgraph.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+value=this;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/4878/pattern-ver1-serial/app.src.main.java.com.trukr.shipper.activity.Notification.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+Entry e=new Entry(hash+1,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+Entry e=new Entry(hash,key+1,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/4700/pattern-ver1-serial/src.main.java.org.javaan.print.GraphPrinter.java-visitVertex.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+if((hash&0x7fffffff)%tab.length!=0){
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+int index=hash&0x7fffffff*100%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/1028/pattern-ver1-serial/coordinatorsvc.src.main.java.com.emc.storageos.coordinator.client.model.DbConsistencyStatus.java-updateCFProgress.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index-1];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+Entry e=new Entry(hash,key,value,tab[index-1]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+tab[index-1]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/1847/pattern-ver1-serial/33_CDIO3.src.boundary.GUIHandler.java-askPlayerBuyField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
+ @SuppressWarnings("UnusedAssignment") Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+ @SuppressWarnings("UnusedAssignment") int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
-Object old=e.value;
+ @SuppressWarnings("UnusedAssignment") Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
+ @SuppressWarnings("UnusedAssignment") Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+ @SuppressWarnings("UnusedAssignment") int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+ @SuppressWarnings("UnusedAssignment") Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
+ @SuppressWarnings("UnusedAssignment") Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
-Object old=e.value;
+ @SuppressWarnings("UnusedAssignment") Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+ @SuppressWarnings("UnusedAssignment") Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
-int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+ @SuppressWarnings("UnusedAssignment") Entry tab[]=table;
+ @SuppressWarnings("UnusedAssignment") int hash=key;
+ @SuppressWarnings("UnusedAssignment") int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
-Entry tab[]=table;
-int hash=key;
+ @SuppressWarnings("UnusedAssignment") Entry tab[]=table;
+ @SuppressWarnings("UnusedAssignment") int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
-Object old=e.value;
+ @SuppressWarnings("UnusedAssignment") Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+e.value=tab;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+key=key;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+e.hash=hash;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+tab=tab;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+hash=hash;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(e.hash+hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(e.hash+index==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(e.hash+key==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+if(index!=(hash&0x7fffffff)%tab.length){
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+count++;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
-count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(true){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+if(tab==null){
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab[index]==null){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Arrays;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+Arrays.sort(tab);
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/405/pattern-ver1-serial/twitter-topic-strand-core.src.main.java.twittertopicstrand.util.FileOperations.java-getFiles.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Arrays;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
+Arrays.sort(tab);
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/405/pattern-ver1-serial/twitter-topic-strand-core.src.main.java.twittertopicstrand.util.FileOperations.java-getFiles.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+int a=0;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:54:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+int a=0;
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+int a=0;
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
+if(new Entry(hash,key,value,tab[index])!=null){
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6804/pattern-ver1-serial/HashTableProject.src.IndexedColorEncoder.java-encodeFast.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+String OUTSTRING="";
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+String OUTSTRING="";
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+String OUTSTRING="";
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+int old=5;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+if(value!=null){
 e.value=value;
+}
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/663/pattern-ver1-serial/src.ceprei.appcrawler.config.FileAppCrawlerConfig.java-FileAppCrawlerConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e!=null){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/663/pattern-ver1-serial/src.ceprei.appcrawler.config.FileAppCrawlerConfig.java-FileAppCrawlerConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(Double.isNaN(count)){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
-int index=(hash&0x7fffffff)%tab.length;
+int index=hash%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
+index=hash%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(equals(tab)){
+return null;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(equals(tab)){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(equals(hash)){
+return null;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(equals(tab)){
+return null;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(equals(hash)){
+return null;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(equals(key)){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(equals(hash)){
+return null;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(equals(value)){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+int indexSelection=0;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+int indexSelection=0;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+int indexSelection=0;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(value.equals("sounds")){
+continue;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+int a=1;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+int a=1;
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+int a=1;
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+boolean old=true;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+if(tab!=null){
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+boolean b=true;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+boolean b=true;
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+boolean b=true;
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(value==null){
+continue;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+if(value==null){
+continue;
+}
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab==null){
+return false;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+if(value==null){
+return false;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(value==null){
+return false;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+if(value==null){
+return false;
+}
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(value==null){
+return "";
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+if(value==null){
+return "";
+}
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(value==null){
+return "";
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab==null){
+return "";
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab==null){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(value==null){
+return null;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+if(value==null){
+return null;
+}
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(value==null){
+return null;
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+return null;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+if(tab==null){
+return null;
+}
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(tab==null){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab==value){
+return true;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(value==tab){
+return true;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3923/pattern-ver1-serial/railo-java.railo-core.src.railo.runtime.op.Operator.java-_equalsComplexEL.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(tab==table){
+return index;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(hash==key){
+return tab;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:56:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(tab==table){
+return hash;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(index==(hash&0x7fffffff)%tab.length){
+return tab;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==new Entry(hash,key,value,tab[index])){
+return tab;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(hash==key){
+return index;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(tab==null){
+return null;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if("index".equals(tab)){
+return 0;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if("index".equals(value)){
+return 0;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+if("index".equals(value)){
+return 0;
+}
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if("index".equals(value)){
+return 0;
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+if("index".equals(hash)){
+return 0;
+}
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if("index".equals(hash)){
+return 0;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if("index".equals(hash)){
+return 0;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if("index".equals(key)){
+return 0;
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if("index".equals(index)){
+return 0;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+if("&null".equals(value)){
+return null;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if("&null".equals(value)){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+if("&null".equals(value)){
+return null;
+}
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if("&null".equals(tab)){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if("&null".equals(hash)){
+return null;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+if("&null".equals(hash)){
+return null;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+if("&null".equals(hash)){
+return null;
+}
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if("&null".equals(key)){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if("&null".equals(index)){
+return null;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(tab==null){
+return false;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/1529/pattern-ver1-serial/src.main.java.net.openhft.chronicle.core.io.IOTools.java-shallowDeleteDirWithFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(tab==null){
+return false;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/1529/pattern-ver1-serial/src.main.java.net.openhft.chronicle.core.io.IOTools.java-shallowDeleteDirWithFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(tab==null){
+return false;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/1529/pattern-ver1-serial/src.main.java.net.openhft.chronicle.core.io.IOTools.java-shallowDeleteDirWithFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
-tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+tab=table;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+e.value=value;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
 return old;
 }
+e.value=value;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+e.value=value;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+tab=table;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+tab=table;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
-tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+tab=table;
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+tab=table;
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
-tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab.equals("")){
+return "";
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:57:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e.equals("")){
+return "";
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+if(tab.equals("")){
+return "";
+}
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(tab.equals("")){
+return "";
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+e.value=value;
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+tab=table;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+e.value=value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+tab=table;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+e.value=value;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+e.value=value;
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+tab=table;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
-tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(key<0){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(key<0){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(hash<0){
+return null;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab.equals("-1")){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e.equals("-1")){
+return null;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+if(tab.equals("-1")){
+return null;
+}
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(tab.equals("-1")){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold||count==Long.MIN_VALUE){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+tab=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
-tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
 Object old=e.value;
+if(e.hash==hash){
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
+tab=table;
 if(count>=threshold){
 rehash();
-tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab.equals(value)){
+return false;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(value.equals(tab)){
+return false;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab.equals(key)){
+return false;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab.equals(e)){
+return false;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(tab.equals(hash)){
+return false;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(tab.equals(index)){
+return false;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(value.equals(hash)){
+return false;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(value.equals(hash)){
+return false;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:58:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index++];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+Entry e=new Entry(hash,key,value,tab[index++]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index++];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+tab[index++]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+Entry e=new Entry(hash,key,value,tab[index++]);
+tab[index++]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3938/pattern-ver1-serial/src.main.java.de.topobyte.osm4j.geometry.CoordinateSequencesBuilder.java-createGeometry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(value==null){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4925/pattern-ver1-serial/statemachine-persistence.src.main.java.de.teck.statemachine.persistence.model.TransitionGraph.java-addTransition.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+try{
 rehash();
+}finally{
 tab=table;
+}
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+assert (tab!=null);
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+assert (value!=null);
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+assert (value!=null);
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+assert (value!=null);
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(tab.equals(InputStream.class)){
+return value;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(tab.equals(InputStream.class)){
+return hash;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(value.equals(InputStream.class)){
+return hash;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(e.equals(InputStream.class)){
+return value;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(value!=null){
+Entry tab[]=table;
+int hash=key;
+int index=(hash&0x7fffffff)%tab.length;
+for(Entry e=tab[index];e!=null;e=e.next){
+if(e.hash==hash){
+Object old=e.value;
+e.value=value;
+return old;
+}
+}
+if(count>=threshold){
+rehash();
+tab=table;
+index=(hash&0x7fffffff)%tab.length;
+}
+Entry e=new Entry(hash,key,value,tab[index]);
+tab[index]=e;
+count++;
+return null;
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+if(index==0){
+return null;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(index==0){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Collection;
+
+import java.util.Arrays;
+
+import java.util.HashSet;
+
+import java.util.ArrayList;
+
+import java.util.Set;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
-e.value=value;
+e.value=new ArrayList<>(Arrays.asList(value));
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4438/pattern-ver1-serial/src.model.writable.Interface.java-setInterfaces.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+assert (tab!=table);
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+assert (hash!=key);
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+assert (index!=(hash&0x7fffffff)%tab.length);
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+assert (e!=new Entry(hash,key,value,tab[index]));
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+assert (e!=null);
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+assert (e!=null);
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+Object old=e.value;
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
+if(tab==null){
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+if(this.size()!=0){
 rehash();
+}
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+if(this.size()!=0){
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+if(this.size()!=0){
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(this.size()!=0){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 06:59:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+if(this.size()!=0){
 count++;
+}
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+count++;
 }
 if(count>=threshold){
 rehash();
 tab=table;
+count++;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
-count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+count++;
 }
 if(count>=threshold){
 rehash();
+count++;
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
-count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+count++;
 e.value=value;
 return old;
 }
+count++;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
-count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+count++;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+count++;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
-count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 2, DEL : 2
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
-rehash();
+if(tab!=null){
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab[index]!=null){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 3, INS : 0, DEL : 1
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+assert (value!=null);
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+assert (value!=null);
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+assert (value!=null);
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(tab.equals(null)){
+return null;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(tab.equals(null)){
+return null;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.awt.List;
+
+import java.util.*;
+
+import java.awt.geom.Arc2D;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(tab.equals(null)){
+return null;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2100/pattern-ver1-serial/ExpressionCalculator.ExpressionCalculator.java-recursiveReduce.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(tab.equals("655")){
+System.out.println();
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(tab.equals("655")){
+System.out.println();
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(tab.equals("655")){
+System.out.println();
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+if((Thread.currentThread().interrupted())){
+return null;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+if((Thread.currentThread().interrupted())){
+return null;
+}
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if((Thread.currentThread().interrupted())){
+return null;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold||"查看红包".equals(count)){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold||count==3){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count<0||count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
+index=hash;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/1236/pattern-ver1-serial/providers.dynect.src.main.java.org.jclouds.dynect.v3.domain.Zone.java-Zone.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+tab[index]=e;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold||count==0){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold||count>9){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold&&count<4000000){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index];null!=e&&e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V43/1691/pattern-ver1-serial/src.main.java.net.imadz.lifecycle.meta.builder.impl.helpers.CallbackMethodConfigureScanner.java-evaluateObserverMethod.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold&&count!=9999){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(threshold>0&&count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+assert (key>=0):"Receive a negative tratment";
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+assert (hash>=0):"Receive a negative tratment";
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+assert (hash>=0):"Receive a negative tratment";
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+assert (hash>=0):"Receive a negative tratment";
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+assert (index>=0):"Receive a negative tratment";
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
+index=index+(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+tab=table;
 }
 if(count>=threshold){
 rehash();
+tab=table;
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+tab=table;
 e.value=value;
 return old;
 }
+tab=table;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+assert (tab!=null):"Appointments day is not allowed to be null!";
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+assert (value!=null):"Appointments day is not allowed to be null!";
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+assert (value!=null):"Appointments day is not allowed to be null!";
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+assert (value!=null):"Appointments day is not allowed to be null!";
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Object put(int key,Object value){
+assert (key!=0):"Receive a size tratment";
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+assert (hash!=0):"Receive a size tratment";
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+assert (hash!=0):"Receive a size tratment";
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+assert (hash!=0):"Receive a size tratment";
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+assert (index!=0):"Receive a size tratment";
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold||count=='"'){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(value!=null&&(count>=threshold)){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/4868/pattern-ver1-serial/src.java.com.mosedb.dao.AbstractDao.java-executeUpdate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(key>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(key>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(hash>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+if(index<0){
+index=0;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:01:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(index<0){
+index=0;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+if(tab!=table){
 rehash();
-tab=table;
+}
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
-tab=table;
+if(tab!=table){
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e.value!=value){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(hash<=0){
+hash=1;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(hash<=0){
+hash=1;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean haveBreadCrumbs=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold&&haveBreadCrumbs){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean haveBreadCrumbs=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(e.hash==hash&&haveBreadCrumbs){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab.getClass().getSimpleName().startsWith("SystemException")){
+return true;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+if(value.getClass().getSimpleName().startsWith("SystemException")){
+return true;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(value.getClass().getSimpleName().startsWith("SystemException")){
+return true;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
+if(value.getClass().getSimpleName().startsWith("SystemException")){
+return true;
+}
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab!=table){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/568/pattern-ver1-serial/src.net.skycraftmc.SkyQuest.utilitygui.ObjectiveEditPanel.java-clear.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index-1];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
+Entry e=new Entry(hash,key,value,tab[index-1]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
-for(Entry e=tab[index];e!=null;e=e.next){
+for(Entry e=tab[index-1];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+tab[index-1]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
-Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
+Entry e=new Entry(hash,key,value,tab[index-1]);
+tab[index-1]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V11/6266/pattern-ver1-serial/src.uz.unicon.clg.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab[index]==null){
 tab[index]=e;
-count++;
+}
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4209/pattern-ver1-serial/app.src.main.java.com.example.sdp11.wmd.DataFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+if(value==null){
+value=e.value;
+}else {
 e.value=value;
+}
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3590/pattern-ver1-serial/src.main.java.ch.bfh.btx8081.w2015.blue.HealthVisApp.View.PatientDetailView.java-refreshView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+e=tab[index];
+}else {
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3590/pattern-ver1-serial/src.main.java.ch.bfh.btx8081.w2015.blue.HealthVisApp.View.PatientDetailView.java-refreshView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+throw new IllegalStateException("User isn't registered! "+tab);
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+throw new IllegalStateException("User isn't registered! "+hash);
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+throw new IllegalStateException("User isn't registered! "+value);
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+throw new IllegalStateException("User isn't registered! "+index);
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+throw new IllegalStateException("User isn't registered! "+key);
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+index=(hash&0x7fffffff)%tab.length;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+index=(hash&0x7fffffff)%tab.length;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+index=(hash&0x7fffffff)%tab.length;
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+index=(hash&0x7fffffff)%tab.length;
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+index=(hash&0x7fffffff)%tab.length;
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:02:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
+index=(hash&0x7fffffff)%tab.length;
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+index=(hash&0x7fffffff)%tab.length;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab==null||e==null){
+return e;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab==null||e==null){
+return index;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab==null||e==null){
+return hash;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3334/pattern-ver1-serial/src.org.nschmidt.ldparteditor.data.VM03Adjacency.java-linkedCommonFaces.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
+index=(hash&0x7fffffff)%tab.length;
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(value==null){
+return "";
+}
 Entry tab[]=table;
+if(tab==null){
+return value;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
+if(tab==null){
+return "";
+}
+if(value==null){
+return tab;
+}
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null){
+return "";
+}
+if(tab==null){
+return e;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+try{
 rehash();
-tab=table;
+}finally{
 index=(hash&0x7fffffff)%tab.length;
+}
+tab=table;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 1, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
+index=(hash&0x7fffffff)%tab.length;
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
 }
+index=(hash&0x7fffffff)%tab.length;
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V22/810/pattern-ver1-serial/src.main.java.org.gooru.nucleus.handlers.courses.processors.repositories.activejdbc.dbhandlers.MoveCollectionToLessonHandler.java-validateRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean haveBreadCrumbs=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(e.hash==hash&&haveBreadCrumbs){
 Object old=e.value;
 e.value=value;
 return old;
 }
+haveBreadCrumbs=true;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean haveBreadCrumbs=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+haveBreadCrumbs=true;
 }
-if(count>=threshold){
+if(count>=threshold&&haveBreadCrumbs){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean haveBreadCrumbs=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
-if(e.hash==hash){
+if(e.hash==hash&&haveBreadCrumbs){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
+haveBreadCrumbs=true;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean haveBreadCrumbs=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
+haveBreadCrumbs=true;
 return old;
 }
 }
-if(count>=threshold){
+if(count>=threshold&&haveBreadCrumbs){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(value==null||tab==null){
+throw new NullPointerException();
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(e==null||tab==null){
+throw new NullPointerException();
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/1218/pattern-ver1-serial/app.src.main.java.net.danielpalma.lineupshaker.DefaultSportDataListener.java-DefaultSportDataListener.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(value==null||tab==null){
+throw new NullPointerException();
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
+if(tab==null||value==null){
+throw new NullPointerException();
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean succeeded=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+succeeded=true;
 }
+if(!succeeded){
+return null;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+boolean succeeded=false;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
 }
+if(!succeeded){
+return null;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+succeeded=true;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(hash<0){
+return 0;
+}
+if(hash>=key){
+return key-1;
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+if(index!=(hash&0x7fffffff)%tab.length){
 rehash();
+}
 tab=table;
-index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 3, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(key==3){
+System.out.println("debug");
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+if(key==3){
+System.out.println("debug");
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+if(key==3){
+System.out.println("debug");
+}
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+if(key==3){
+System.out.println("debug");
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(key==3){
+System.out.println("debug");
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(key==3){
+System.out.println("debug");
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+if(hash==3){
+System.out.println("debug");
+}
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+if(hash==3){
+System.out.println("debug");
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(hash==3){
+System.out.println("debug");
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
+}
+if(hash==3){
+System.out.println("debug");
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(index!=(hash&0x7fffffff)%tab.length){
 tab[index]=e;
+}
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/878/pattern-ver1-serial/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.EnvManagerPropertiesPage.java-cfgChanged.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 3, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
+if(index!=(hash&0x7fffffff)%tab.length){
 count++;
+}
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/878/pattern-ver1-serial/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.EnvManagerPropertiesPage.java-cfgChanged.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 3, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
-count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 8, INS : 0, DEL : 2
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+synchronized(this){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+}
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
+if(null==value||value.equals("")){
+e.value="null";
+}else {
 e.value=value;
+}
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/3929/pattern-ver1-serial/modules.andes-core.broker.src.main.java.org.wso2.andes.kernel.disruptor.inbound.QueueInfo.java-QueueInfo.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
+if(tab==null||e==null||value==null){
+return null;
+}
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(hash<3){
+hash=3;
+}
 int index=(hash&0x7fffffff)%tab.length;
+if(index<3){
+index=3;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
-tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 8, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
+if(hash<0){
+hash=0;
+}
 int index=(hash&0x7fffffff)%tab.length;
+if(index<0){
+index=0;
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
+long startTime=System.currentTimeMillis();
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+long startTime=System.currentTimeMillis();
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+long startTime=System.currentTimeMillis();
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(key>this.size()){
+throw new IllegalArgumentException("oldIndex doesn't exist");
+}
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
+if(index>this.size()){
+throw new IllegalArgumentException("newIndex doesn't exist");
+}
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3674/pattern-ver1-serial/src.Kubaner.Logic.TimeLine.java-moveMember.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
+if(key>this.size()){
+throw new IllegalArgumentException("oldIndex doesn't exist");
+}
 Entry tab[]=table;
 int hash=key;
+if(hash>this.size()){
+throw new IllegalArgumentException("newIndex doesn't exist");
+}
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
 }
 }
 if(count>=threshold){
 rehash();
 tab=table;
 index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3674/pattern-ver1-serial/src.Kubaner.Logic.TimeLine.java-moveMember.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 14, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[279,320]
------------Candidate---------------
 public Object put(int key,Object value){
 Entry tab[]=table;
 int hash=key;
 int index=(hash&0x7fffffff)%tab.length;
 for(Entry e=tab[index];e!=null;e=e.next){
+if(count>=threshold){
+rehash();
+tab=table;
+index=(hash&0x7fffffff)%tab.length;
+}
 if(e.hash==hash){
 Object old=e.value;
 e.value=value;
 return old;
-}
 }
-if(count>=threshold){
-rehash();
-tab=table;
-index=(hash&0x7fffffff)%tab.length;
 }
 Entry e=new Entry(hash,key,value,tab[index]);
 tab[index]=e;
 count++;
 return null;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 0, INS : 1, DEL : 14
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:04:41 CDT
--------------- END -----------------
Location : org.apache.commons.lang.Entities.addEntity:[713, 714]#0.21320071635561041
Compute Candidate : 2019.09.08 AD at 07:04:58 CDT - 2019.09.08 AD at 07:09:17 CDT , PNumber : 11186, CandNumber : 68 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
-map.add(name,value);
+this.map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.isEmpty()){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/3286/pattern-ver1-serial/DatabaseMSCore.src.DatabaseMSCore.dbTypeInteger.java-canBeInitializedWith.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+value++;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+value--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+synchronized(map){
 map.add(name,value);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V17/90/pattern-ver1-serial/PolibudaRun.src.HorizontalMove.java-down.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+synchronized(this){
 map.add(name,value);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(equals(name)){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(equals(value)){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name==null){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name==null){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(map!=null){
 map.add(name,value);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6555/pattern-ver1-serial/app.src.main.java.com.example.uaharoni.tourdeplace.view.MapFragment.java-addPlaceMarker.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(map==null){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if("index".equals(name)){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if("index".equals(value)){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.equals("TIME")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if("&null".equals(value)){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if("&null".equals(name)){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:11:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name.equals("DATETIME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+name=name;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+value=value;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(value<0){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name!=null){
 map.add(name,value);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/991/pattern-ver1-serial/CEO.src.cs2103.CommandParser.java-separateParameters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name.contains("deviantart.com")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4166/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.ContentType.java-getImageType.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+int a=0;
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.equals(value)){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+String OUTSTRING="";
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+int map=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void addEntity(String name,int value){
+if(name.equals(InputStream.class)){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.startsWith("-")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/3084/pattern-ver1-serial/src.cdio.shared.FieldVerifier.java-isValidRbId.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.startsWith("extern ")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/100/pattern-ver1-serial/plugins.org.nitlanguage.ndt.src.org.nitlanguage.ndt.ui.docmodel.Declaration.java-removeModificatorKeyword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.startsWith("https")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/6342/pattern-ver1-serial/src.main.java.org.spo.fw.web.Lib_Utils.java-alterGotoUrl.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+int a=1;
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.equalsIgnoreCase("/")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/3102/pattern-ver1-serial/src.main.java.com.github.kongchen.swagger.docgen.reader.AbstractReader.java-parseOperationPath.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+boolean map=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+boolean b=true;
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.equalsIgnoreCase("")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/3403/pattern-ver1-serial/src.Primitives.Stemmer.java-step4.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.matches("[0-9]*")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5036/pattern-ver1-serial/src.engine.PrinterServerTask1After.java-checkIfInputMatchStored.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(value>0){
 map.add(name,value);
+}
 }

PATTERN : /home/jiajun/GithubData/2011/V3/464/pattern-ver1-serial/src.com.nhksos.jjfs85.BetterShop.BSCommand.java-listAlias.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+throw new RuntimeException(name);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/2341/pattern-ver1-serial/OSA.addon.linux.fermat-osa-addon-linux-database-system-bitdubai.src.main.java.com.bitdubai.fermat_osa_addon.layer.linux.database_system.developer.bitdubai.version_1.desktop.database.bridge.DesktopDatabaseBridge.java-rawQuery.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+assert (name!=null);
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:12:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+assert (!name.isEmpty());
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name!=null){
+map.add(name,value);
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void addEntity(String name,int value){
+if(name.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.isEmpty()){
+System.out.println("Team has to have a name");
+return ;
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+assert (name!=null);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name.isEmpty()){
+name=null;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void addEntity(String name,int value){
 map.add(name,value);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+assert (value>=0):"Receive a negative tratment";
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void addEntity(String name,int value){
 map.add(name,value);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+assert (name!=null):"Appointments day is not allowed to be null!";
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public void addEntity(String name,int value){
+assert (value!=0):"Receive a size tratment";
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(map==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(value>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.equals("CALL_RECEIVED_AT")){
+return ;
+}
 map.add(name,value);
+if(name.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name.equals("INFO")){
+return ;
+}
+if(name.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(name.startsWith("\r\n")){
+name=name.substring(2);
+}
 map.add(name,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name.startsWith("/")){
+name=name.substring(1);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+if(value==3){
+System.out.println("debug");
+}
 map.add(name,value);
+if(value==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
 map.add(name,value);
+if(name.endsWith("/")==false){
+name=name+"/";
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+for(int i=0;i<24;i++){
 map.add(name,value);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/Entities.java[706,714]
------------Candidate---------------
 public void addEntity(String name,int value){
+long startTime=System.currentTimeMillis();
 map.add(name,value);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:13:50 CDT
--------------- END -----------------
Location : org.apache.commons.lang.IntHashMap.IntHashMap:[96, 97]#0.21320071635561041
Compute Candidate : 2019.09.08 AD at 07:14:06 CDT - 2019.09.08 AD at 07:16:41 CDT , PNumber : 11265, CandNumber : 0 
Location : org.apache.commons.lang.IntHashMap.IntHashMap:[121, 122, 125, 128, 132, 133, 134, 135]#0.21320071635561041
Compute Candidate : 2019.09.08 AD at 07:16:56 CDT - 2019.09.08 AD at 07:26:49 CDT , PNumber : 11340, CandNumber : 280 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=1;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:26:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+return ;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(threshold<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:26:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(loadFactor<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:26:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(this.loadFactor<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=0;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V28/6188/pattern-ver1-serial/GravityGame.GravityGameApplet.java-onEditLocX1.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<=0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=2){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/3732/pattern-ver1-serial/reformulation-core.src.main.java.org.semanticweb.ontop.owlrefplatform.core.unfolding.TypeLift.java-f.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity>0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=2;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity<=0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=3;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+throw new IllegalArgumentException("Illegal Capacity: "+table);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+throw new IllegalArgumentException("Illegal Load: "+table);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+throw new IllegalArgumentException("Illegal Capacity: "+threshold);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+throw new IllegalArgumentException("Illegal Load: "+threshold);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+throw new IllegalArgumentException("Illegal Load: "+initialCapacity);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+throw new IllegalArgumentException("Illegal Capacity: "+loadFactor);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(loadFactor==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity>=0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity!=0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float i){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1206/pattern-ver1-serial/mobile.src.main.java.sketchagram.chalmers.com.sketchagram.MainActivity.java-onConnectionSuspended.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=initialCapacity;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:27:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=initialCapacity;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=10;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity>0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=100;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor>=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6682/pattern-ver1-serial/src.Geometry.Graham_Scan.java-leftTurn.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+table=new Entry[(initialCapacity)];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)(threshold*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)(this.loadFactor*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V34/4880/pattern-ver1-serial/src.main.java.ch.trq.carrera.javapilot.akka.trackanalyzer.TrackAnalyzer.java-calculateDistance.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+table=null;
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/2637/pattern-ver1-serial/de.bund.bfr.knime.openkrise.views.src.de.bund.bfr.knime.openkrise.views.gisgraphview.GraphSettings.java-GraphSettings.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(threshold==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(this.loadFactor==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=threshold;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/6978/pattern-ver1-serial/UnionByRankPathCompression.java-union.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor==0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/870/pattern-ver1-serial/src.com.orange.game.zjh.statemachine.ZjhGameStateMachineBuilder.java-decideNextState.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+throw new IllegalArgumentException("Illegal Capacity: "+this.loadFactor);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+throw new IllegalArgumentException("Illegal Load: "+this.loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=-1;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float newState){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=newState;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4595/pattern-ver1-serial/src.main.java.com.sparta.is.armor.ArmorIS.java-setState.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float authoredForumsAmt){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=authoredForumsAmt;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7435/pattern-ver1-serial/msgcntr.messageforums-app.src.java.org.sakaiproject.tool.messageforums.ui.MessageForumStatisticsBean.java-setAuthoredForumsAmt.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
+import java.util.Iterator;
+
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==-1){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
+initialCapacity++;
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
+loadFactor++;
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
+initialCapacity++;
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
+loadFactor++;
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+initialCapacity++;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
+initialCapacity--;
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
+loadFactor--;
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+synchronized(this){
 this.loadFactor=loadFactor;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float bindingModes){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=bindingModes;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float collectorManager){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=collectorManager;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float parentFileShare){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=parentFileShare;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float pIssued){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=pIssued;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float Pin){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=Pin;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+synchronized(this){
 threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+synchronized(this){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float newY){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=newY;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/827/pattern-ver1-serial/src.indigo.Entity.Entity.java-setY.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float graphdbInput){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=graphdbInput;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+initialCapacity++;
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+loadFactor++;
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float thePrescribeMedicationCntl){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=thePrescribeMedicationCntl;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity<0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+while(true){
+
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float pScore){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=pScore;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float pterm){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=pterm;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
+synchronized(this){
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+}
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:29:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
+synchronized(this){
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+}
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
+synchronized(this){
 if(initialCapacity==0){
 initialCapacity=1;
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float boid){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=boid;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float animationStyle){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=animationStyle;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3883/pattern-ver1-serial/app.src.main.java.com.shockn745.workoutmotivationaltool.motivation.recyclerview.animation.CardAnimator.java-setAnimationStyle.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+synchronized(this){
 initialCapacity=1;
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+if(loadFactor!=0){
 this.loadFactor=loadFactor;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+if(1!=0){
 initialCapacity=1;
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+if((int)(initialCapacity*loadFactor)!=0){
 threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
+initialCapacity=initialCapacity;
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity+initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity+loadFactor==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(true){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(true){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(true){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=loadFactor*initialCapacity;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=loadFactor*loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=1*initialCapacity;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(table==null){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V53/4035/pattern-ver1-serial/whois-client.src.main.java.net.ripe.db.whois.common.rpsl.RpslAttribute.java-extractCleanValueAndComment.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+int a=0;
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+int a=0;
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+int a=0;
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+String OUTSTRING="";
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+String OUTSTRING="";
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+String OUTSTRING="";
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+int threshold=5;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(Double.isNaN(initialCapacity)){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(Double.isNaN(loadFactor)){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(Double.isNaN(initialCapacity)){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)initialCapacity;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/2671/pattern-ver1-serial/Project.EncryptaBackend.src.Converter.java-binaryStringToString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)(1.0*initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V46/7751/pattern-ver1-serial/src.main.java.info.debatty.java.stringsimilarity.Cosine.java-norm.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+loadFactor=initialCapacity;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)Math.floor(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)Math.floor(initialCapacity);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)Math.floor(loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
+if(equals(initialCapacity)){
+return ;
+}
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+}
+if(equals(loadFactor)){
+return ;
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+}
+if(equals(initialCapacity)){
+return ;
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+}
+if(equals(loadFactor)){
+return ;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+if(equals(initialCapacity)){
+return ;
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+if(equals(loadFactor)){
+return ;
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+int indexSelection=0;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
+int indexSelection=0;
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=0;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+this.threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/4372/pattern-ver1-serial/src.DataStructures.PriorityQueue.MinPQ.java-MinPQ.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=0;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+this.table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/4372/pattern-ver1-serial/src.DataStructures.PriorityQueue.MinPQ.java-MinPQ.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=0;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+this.threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/4372/pattern-ver1-serial/src.DataStructures.PriorityQueue.MinPQ.java-MinPQ.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:31:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+this.loadFactor=0;
+this.table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/4372/pattern-ver1-serial/src.DataStructures.PriorityQueue.MinPQ.java-MinPQ.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=initialCapacity+1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=(loadFactor/1000);
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+int a=1;
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+int a=1;
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+int a=1;
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+boolean b=true;
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+boolean b=true;
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+boolean b=true;
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+this.loadFactor=loadFactor;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
+this.loadFactor=loadFactor;
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=1;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+synchronized(this){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+}
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+synchronized(this){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+}
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=2;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=3;
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
+initialCapacity=1;
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+initialCapacity=1;
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+initialCapacity=1;
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+table=new Entry[initialCapacity];
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:32:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+initialCapacity=1;
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+initialCapacity=1;
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+table=new Entry[initialCapacity];
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+initialCapacity=1;
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+table=new Entry[initialCapacity];
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
+initialCapacity=1;
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)(initialCapacity*loadFactor)*initialCapacity;
 }

PATTERN : /home/jiajun/GithubData/2015/V29/276/pattern-ver1-serial/src.Body.java-move.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
+if(initialCapacity<0){
+return ;
+}
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+}
+if(initialCapacity<0){
+return ;
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+}
+if(loadFactor<0){
+return ;
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+if(initialCapacity<0){
+return ;
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(initialCapacity<0){
+return ;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0||initialCapacity==Long.MIN_VALUE){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0||initialCapacity==Long.MIN_VALUE){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=0||loadFactor==Long.MIN_VALUE){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
+initialCapacity=1;
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=0xEfffffff&((int)(initialCapacity*loadFactor));
 }

PATTERN : /home/jiajun/GithubData/2015/V1/1711/pattern-ver1-serial/src.main.java.com.ociweb.pronghorn.ring.RingWriter.java-writeBytes.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=10;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
 }
+initialCapacity=1;
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=100;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)Math.max((initialCapacity*loadFactor),1);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)Math.max(initialCapacity*loadFactor,1);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)Math.max(initialCapacity,1);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)Math.max(loadFactor,1);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float yy){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+loadFactor=yy;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6317/pattern-ver1-serial/core.src.com.nnldev.fartlek.sprites.Obstacle.java-setY.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float perrCode){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+loadFactor=perrCode;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/6417/pattern-ver1-serial/src.main.java.com.bill.team02.week4.IORuntimeException.java-IORuntimeException.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+try{
 this.loadFactor=loadFactor;
+}finally{
+initialCapacity=1;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+try{
 this.loadFactor=loadFactor;
+}finally{
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+try{
 threshold=(int)(initialCapacity*loadFactor);
+}finally{
+table=new Entry[initialCapacity];
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+try{
 threshold=(int)(initialCapacity*loadFactor);
+}finally{
+initialCapacity=1;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+if(initialCapacity==0){
+return ;
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
+if(threshold==0){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+}
+if(initialCapacity==0){
+return ;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(this.loadFactor==0){
+return ;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)((double)initialCapacity*(double)loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/2453/pattern-ver1-serial/GURPS.src.Character.java-getMovementSpeed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
-public IntHashMap(int initialCapacity,float loadFactor){
+public IntHashMap(int initialCapacity,float r){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+loadFactor=r;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+if(this.size()!=0){
 threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+if(this.size()!=0){
 initialCapacity=1;
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+if(this.size()!=0){
 this.loadFactor=loadFactor;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(this.size()!=0){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/3420/pattern-ver1-serial/PP4Is.src.main.java.com.pss.pp4is.layout.content.tables.InspectionDetailTable.java-refreshTable.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=-1;
+initialCapacity++;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=-1;
 }
+initialCapacity++;
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=((int)(initialCapacity*loadFactor)/1000);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4121/pattern-ver1-serial/app.src.main.java.followmeapp.followme.Route.java-add_point.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0||"查看红包".equals(initialCapacity)){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0||"查看红包".equals(initialCapacity)){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=0||"查看红包".equals(loadFactor)){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0||initialCapacity==3){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0||initialCapacity==3){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=0||loadFactor==3){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0||initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<0||loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity<0||initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+this.loadFactor=loadFactor;
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+this.loadFactor=loadFactor;
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+this.loadFactor=loadFactor;
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=((int)(initialCapacity*loadFactor)+initialCapacity)%initialCapacity;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=(loadFactor+loadFactor)%loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=loadFactor<0?0:loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0||initialCapacity==0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=0||loadFactor==0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0||initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0||initialCapacity>9){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0||initialCapacity>9){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=0||loadFactor>9){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity+" -u "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity+" -u "+loadFactor);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+throw new IllegalArgumentException("Illegal Load: "+loadFactor+" -u "+initialCapacity);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+throw new IllegalArgumentException("Illegal Load: "+loadFactor+" -u "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+try{
 threshold=(int)(initialCapacity*loadFactor);
+}finally{
+this.loadFactor=loadFactor;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+try{
 table=new Entry[initialCapacity];
+}finally{
+this.loadFactor=loadFactor;
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0&&initialCapacity<4000000){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=0&&loadFactor<4000000){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0&&initialCapacity<4000000){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(initialCapacity<0&&initialCapacity!=9999){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(loadFactor<=0&&loadFactor!=9999){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0&&initialCapacity!=9999){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
+if(0>0&&initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+if(0>0&&loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(0>0&&initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+assert (initialCapacity>=0):"Receive a negative tratment";
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+assert (loadFactor>=0):"Receive a negative tratment";
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+assert (initialCapacity!=0):"Receive a size tratment";
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+assert (loadFactor!=0):"Receive a size tratment";
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+if(initialCapacity>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
+if(initialCapacity>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+if(loadFactor>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+}
+if(initialCapacity>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+}
+if(loadFactor>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(initialCapacity>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+if(initialCapacity<0){
+initialCapacity=0;
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
+if(threshold<0){
+threshold=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+}
+if(initialCapacity<0){
+initialCapacity=0;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(this.loadFactor<0){
+this.loadFactor=0;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+if(initialCapacity!=1){
 this.loadFactor=loadFactor;
+}
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+if(table!=new Entry[initialCapacity]){
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+if(table!=new Entry[initialCapacity]){
 threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+if(initialCapacity!=1){
 threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(initialCapacity!=1){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+boolean haveBreadCrumbs=false;
+if(loadFactor<=0&&haveBreadCrumbs){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
+boolean haveBreadCrumbs=false;
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
-if(initialCapacity==0){
+if(initialCapacity==0&&haveBreadCrumbs){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+ final String dropStatement="Illegal Capacity: "+initialCapacity;
+throw new IllegalArgumentException(dropStatement);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+ final String dropStatement="Illegal Load: "+loadFactor;
+throw new IllegalArgumentException(dropStatement);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=1*2;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=loadFactor*2;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
+String loc="Illegal Capacity: "+initialCapacity;
+throw new IllegalArgumentException(loc);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
+String loc="Illegal Load: "+loadFactor;
+throw new IllegalArgumentException(loc);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+this.table=new Entry[initialCapacity];
+threshold=0;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/4372/pattern-ver1-serial/src.DataStructures.PriorityQueue.MinPQ.java-MinPQ.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+threshold++;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=-1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=-1;
+threshold++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 4, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(table!=null){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:37:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
+threshold=(int)(initialCapacity*loadFactor);
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
+threshold=(int)(initialCapacity*loadFactor);
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
+if(this.loadFactor!=loadFactor){
 threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+if(this.loadFactor!=loadFactor){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+threshold=(int)(initialCapacity*loadFactor);
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+threshold=(int)(initialCapacity*loadFactor);
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 1, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+this.loadFactor=loadFactor*2;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)(initialCapacity*loadFactor)*2;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
-initialCapacity=1;
+initialCapacity=1*2;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+threshold=(int)(initialCapacity*loadFactor)*2;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/1126/pattern-ver1-serial/src.game.renderer.Position.java-translate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+try{
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
+}finally{
 threshold=(int)(initialCapacity*loadFactor);
+}
+table=new Entry[initialCapacity];
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+try{
 table=new Entry[initialCapacity];
+}finally{
 threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 1, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+if(table==null){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+if(table!=null){
 table=new Entry[initialCapacity];
+}
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
+if(threshold!=(int)(initialCapacity*loadFactor)){
 this.loadFactor=loadFactor;
+}
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(threshold!=(int)(initialCapacity*loadFactor)){
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/878/pattern-ver1-serial/rdt.org.eclipse.ptp.rdt.sync.ui.src.org.eclipse.ptp.rdt.sync.ui.properties.EnvManagerPropertiesPage.java-cfgChanged.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
-if(loadFactor<=0){
+boolean haveBreadCrumbs=false;
+if(loadFactor<=0&&haveBreadCrumbs){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
+haveBreadCrumbs=true;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(table==null){
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V17/2963/pattern-ver1-serial/src.in.tamchow.fractal.fractals.complex.ComplexFractalGenerator.java-initFractal.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
+if(table!=null){
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V24/3931/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java-fetchCollectionRidMap.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+if(initialCapacity==3){
+System.out.println("debug");
+}
 initialCapacity=1;
+if(initialCapacity==3){
+System.out.println("debug");
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+if(loadFactor==3){
+System.out.println("debug");
+}
 initialCapacity=1;
+if(loadFactor==3){
+System.out.println("debug");
+}
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
-table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 0, DEL : 3
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:39:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 8, INS : 0, DEL : 4
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:39:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
+long startTime=System.currentTimeMillis();
 initialCapacity=1;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
+if(table==null){
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V32/4209/pattern-ver1-serial/app.src.main.java.com.example.sdp11.wmd.DataFragment.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 3, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/5667/pattern-ver1-serial/src.AccessorBean.java-onPageLoaded.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 8, INS : 0, DEL : 6
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
-if(initialCapacity<0){
-throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
-}
-if(loadFactor<=0){
-throw new IllegalArgumentException("Illegal Load: "+loadFactor);
-}
-if(initialCapacity==0){
-initialCapacity=1;
-}
 this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
 threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1030/pattern-ver1-serial/components.scifio.src.loci.formats.in.AVIReader.java-readChunk.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 3, INS : 0, DEL : 20
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:39:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_62_buggy/src/java/org/apache/commons/lang/IntHashMap.java[111,135]
------------Candidate---------------
 public IntHashMap(int initialCapacity,float loadFactor){
 super();
 if(initialCapacity<0){
 throw new IllegalArgumentException("Illegal Capacity: "+initialCapacity);
 }
 if(loadFactor<=0){
 throw new IllegalArgumentException("Illegal Load: "+loadFactor);
 }
 if(initialCapacity==0){
 initialCapacity=1;
 }
-this.loadFactor=loadFactor;
 table=new Entry[initialCapacity];
-threshold=(int)(initialCapacity*loadFactor);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/2912/pattern-ver1-serial/Source.ch.zhaw.necarex.src.model.pieces.Pawn.java-getPossibleFields.pattern
MATCHLEVEL : ALL
ALL : 25, UPD : 15, INS : 0, DEL : 10
Failing Tests:[org.apache.commons.lang.EntitiesTest::testNumberOverflow]
---------START : 2019.09.08 AD at 03:21:38 CDT
---------TIME : 2019.09.08 AD at 07:39:39 CDT
--------------- END -----------------
Finish : lang-62 > patch : 0 | Start : Sun Sep 08 03:21:38 CDT 2019 | End : 2019.09.08 AD at 07:39:39 CDT
