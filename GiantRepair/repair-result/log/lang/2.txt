Repair : lang_2
Current failed test : org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales | 2019.09.04 AD at 14:08:29 CDT
Location : org.apache.commons.lang3.LocaleUtils.toLocale:[122, 139, 141, 144, 147, 134, 135, 138, 127, 130, 131, 117, 118, 121, 124, 89, 92, 93, 96, 97]#0.7071067811865475
Compute Candidate : 2019.09.04 AD at 14:09:12 CDT - 2019.09.04 AD at 15:39:49 CDT , PNumber : 11364, CandNumber : 585 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==8){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/7671/pattern-ver1-serial/vipr-portal.portal.app.controllers.resources.FileSystems.java-extractTypeFromId.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==8){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/7671/pattern-ver1-serial/vipr-portal.portal.app.controllers.resources.FileSystems.java-extractTypeFromId.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:39:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3==8){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/7671/pattern-ver1-serial/vipr-portal.portal.app.controllers.resources.FileSystems.java-extractTypeFromId.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0==8){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/7671/pattern-ver1-serial/vipr-portal.portal.app.controllers.resources.FileSystems.java-extractTypeFromId.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5),str);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7601/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.discovery.smis.DataCollectionJobUtil.java-getAccessProfile.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
-return new Locale("",str.substring(1,3));
+return new Locale("",str.substring(1,3),str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7601/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.discovery.smis.DataCollectionJobUtil.java-getAccessProfile.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
- final char ch4=str.charAt(4);
+ char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
- final char ch3=str.charAt(3);
+ char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
- final char ch1=str.charAt(1);
+ char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
- final int len=str.length();
+ int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
- final char ch0=str.charAt(0);
+ char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)&&!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch0)&&!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==0){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==0){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3==0){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0==0){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/4568/pattern-ver1-serial/src.client.game.GameFrame.java-received.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str!=null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
- final int len=str.length();
+ final long len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/3496/pattern-ver1-serial/teavm-classlib.src.main.java.org.teavm.classlib.java.lang.TAbstractStringBuilder.java-append.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(str,str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/1763/pattern-ver1-serial/MyApplication.app.src.main.java.com.gcode.notes.controllers.BaseController.java-setNewContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<=7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<=5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<=2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str,str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5063/pattern-ver1-serial/odemapster-core-querytranslator.src.main.java.es.upm.fi.dia.oeg.obdi.core.querytranslator.AbstractCondSQLGenerator.java-genCondSQLSubject.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
-if(len<3){
+if(len<=3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/1247/pattern-ver1-serial/src.connect4.HumanPlayer.java-drop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
-if(len<5){
+if(len<=5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/1247/pattern-ver1-serial/src.connect4.HumanPlayer.java-drop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6,0));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/3557/pattern-ver1-serial/src.main.java.com.jetbrains.jetpad.vclang.term.expr.sort.Level.java-prettyPrint.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len>7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len>5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len>2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)=='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)=='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len<=5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len<=2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3<='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0<='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
- final int len=str.length();
+ final float len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6860/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.map.impl.eviction.MaxSizeChecker.java-isEvictablePerPartition.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(ch4==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(ch3==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(ch1==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(ch0==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<4){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/1764/pattern-ver1-serial/src.main.java.ua.com.ecotep.debtprevention.MainController.java-handleArchiveAction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<4){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/1764/pattern-ver1-serial/src.main.java.ua.com.ecotep.debtprevention.MainController.java-handleArchiveAction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<4){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/1764/pattern-ver1-serial/src.main.java.ua.com.ecotep.debtprevention.MainController.java-handleArchiveAction.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len>=5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len>=2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3>='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0>='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale("",str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/1081/pattern-ver1-serial/src.main.java.edu.kit.ipd.crowdcontrol.objectservice.moneytransfer.MoneyTransferManager.java-sendNotification.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len!=5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len!=2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:41:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3!='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0!='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5),"");
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V10/4137/pattern-ver1-serial/src.main.java.com.quix.aia.cn.imo.mapper.EopAttendanceMaintenance.java-eopAttendanceListing.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
- final int len=str.length();
+ final Integer len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring(1,6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositories.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/3819/pattern-ver1-serial/BootPrepWeb.src.controllers.UserController.java-validInputs.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/3819/pattern-ver1-serial/BootPrepWeb.src.controllers.UserController.java-validInputs.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/3819/pattern-ver1-serial/BootPrepWeb.src.controllers.UserController.java-validInputs.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+if(len<7){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+if(len==5){
+return new Locale(str.substring(0,2),str.substring(3,5));
+}
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+if(len==2){
+return new Locale(str);
+}
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+if(len==3){
+return new Locale("",str.substring(1,3));
+}
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+if(len<5){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+if(len<3){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+ch1);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/1763/pattern-ver1-serial/lealone-common.src.main.java.org.lealone.db.ConnectionInfo.java-setBaseDir.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+len);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V2/1763/pattern-ver1-serial/lealone-common.src.main.java.org.lealone.db.ConnectionInfo.java-setBaseDir.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!=6){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1679/pattern-ver1-serial/src.main.java.net.sf.cram.index.CramIndex.java-Entry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!=6){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V33/1679/pattern-ver1-serial/src.main.java.net.sf.cram.index.CramIndex.java-Entry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!=7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5258/pattern-ver1-serial/GeoRecon.src.main.java.com.ontotext.ehri.georecon.Reconciler.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!=7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/5258/pattern-ver1-serial/GeoRecon.src.main.java.com.ontotext.ehri.georecon.Reconciler.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6,ch4));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/6746/pattern-ver1-serial/controllersvc.src.main.java.com.emc.storageos.vplexcontroller.VPlexDeviceController.java-deleteStorageView.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)<'_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)<'_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len>5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len>2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3>'_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:42:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0>'_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==4){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==4){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3==4){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0==4){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5287/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.SubredditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)>'_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)>'_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(str,"UTF-8");
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1349/pattern-ver1-serial/eu.scasefp7.eclipse.reqeditor.src.eu.scasefp7.eclipse.reqeditor.wizards.ImportRqsWizardPage.java-execute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7269/pattern-ver1-serial/src.infovis.piechart.Data.java-Data.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7269/pattern-ver1-serial/src.infovis.piechart.Data.java-Data.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==5){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3==5){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0==5){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/2942/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6,2));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2170/pattern-ver1-serial/tool.jtag.src.main.java.nl.lxtreme.ols.tool.jtag.JTAGDataSet.java-reportJTAGTdiData.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==3){
+if(len>=3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2968/pattern-ver1-serial/src.project4.Critter.java-wrapX.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==2){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/1084/pattern-ver1-serial/app.src.main.java.com.example.jimmyle.pacmanandroid.InteractiveView.java-move.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3==2){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/1084/pattern-ver1-serial/app.src.main.java.com.example.jimmyle.pacmanandroid.InteractiveView.java-move.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0==2){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/1084/pattern-ver1-serial/app.src.main.java.com.example.jimmyle.pacmanandroid.InteractiveView.java-move.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<6){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6996/pattern-ver1-serial/app.src.main.java.in.vaksys.vivekpk.activities.ResetPasswordActivity.java-validatePassword.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<6){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6996/pattern-ver1-serial/app.src.main.java.in.vaksys.vivekpk.activities.ResetPasswordActivity.java-validatePassword.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<6){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6996/pattern-ver1-serial/app.src.main.java.in.vaksys.vivekpk.activities.ResetPasswordActivity.java-validatePassword.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return null;
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(str.trim());
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7877/pattern-ver1-serial/src.com.genomen.ui.cli.ArgumentProcessor.java-parseRequiredSamples.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==-1){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==-1){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:43:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3==-1){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import java.util.Iterator;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0==-1){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<=5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<=7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<=2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<=7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
-if(len<3){
+if(len<=3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<=7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
-if(len<5){
+if(len<=5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<=7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<=2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<=5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
-if(len<3){
+if(len<=3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<=5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4679/pattern-ver1-serial/src.course.Grass.java-render.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch0)&&!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)&&!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/3665/pattern-ver1-serial/org.bridgedb.uri.ws.server.src.org.bridgedb.ws.uri.WSUriInterfaceService.java-map.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
-if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
+if(!Character.isUpperCase(ch1)&&!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)&&!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/3665/pattern-ver1-serial/org.bridgedb.uri.ws.server.src.org.bridgedb.ws.uri.WSUriInterfaceService.java-map.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
-if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
+if(!Character.isUpperCase(ch1)&&!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch0)&&!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/3665/pattern-ver1-serial/org.bridgedb.uri.ws.server.src.org.bridgedb.ws.uri.WSUriInterfaceService.java-map.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len!=0){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len!=0){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==3){
+if(len!=0){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3!=0){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0!=0){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/5558/pattern-ver1-serial/app.src.main.java.in.attreya.dailylist.MainActivity.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
-return new Locale("",str.substring(1,3));
+return new Locale("",str.substring(1,3),null);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5),null);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V10/6571/pattern-ver1-serial/src.ijordan.matrixonator.MainApp.java-MainApp.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt((int)(5))!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring((int)(6)));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
- final char ch4=str.charAt(4);
+ final char ch4=str.charAt((int)(4));
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase((int)(ch3))||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase((int)(ch4))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt((int)(2))!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
- final char ch3=str.charAt(3);
+ final char ch3=str.charAt((int)(3));
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
- final char ch1=str.charAt(1);
+ final char ch1=str.charAt((int)(1));
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase((int)(ch0))||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(null,str,null);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/483/pattern-ver1-serial/app.src.main.java.com.ekeitho.shake.map.FriendsMapAreaFragment.java-onConnected.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale((str).toLowerCase());
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2032/pattern-ver1-serial/src.main.ContaminationDialog.java-onOK.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
-if(len<5){
+if(len<1){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<1){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6177/pattern-ver1-serial/src.Hapi.SQLMethods.Methods.java-setCustomerDiscount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(str,null,null);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/2082/pattern-ver1-serial/interview_questions.trees_and_graphs.ValidateBST.java-checkBST.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return (Locale)(new Locale(str));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len<0){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len<0){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==3){
+if(len<0){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3<0){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0<0){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len>0){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len>0){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3>0){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0>0){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V23/2696/pattern-ver1-serial/src.main.java.br.com.provaServer.infrastructure.deserialization.gson.GsonDeserialization.java-isWithoutRoot.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.toString());
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/7313/pattern-ver1-serial/Core.astra.interpreter.src.astra.reasoner.util.ContentCodec.java-test_predicate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(StringUtils.isEmpty(str)){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/130/pattern-ver1-serial/yamj3-core.src.main.java.org.yamj.core.web.HTMLTools.java-replaceHtmlTags.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str.equals(null)){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(30-(0),2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,30-(2)),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(30-(3),5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,30-(5)));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(30-(0),2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,30-(2)),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str.isEmpty()){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/7829/pattern-ver1-serial/app.src.main.java.de.tum.in.tumcampusapp.activities.TransportationDetailsActivity.java-onLoadInBackground.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+if(str!=null){
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+if(str!=null){
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4155/pattern-ver1-serial/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.AddEventPanel.java-populateEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
+str=str;
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len+ch4==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len+ch3==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len+ch1==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len+len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len+ch0==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(true){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(true){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(true){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:46:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(true){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(true){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
+if(str!=null){
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+int a=0;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+int a=0;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+int a=0;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+int a=0;
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+int a=0;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+int a=0;
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+int a=0;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+int a=0;
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
+int a=0;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
+int a=0;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+String OUTSTRING="";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+String OUTSTRING="";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+String OUTSTRING="";
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
+String OUTSTRING="";
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+String OUTSTRING="";
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+String OUTSTRING="";
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+String OUTSTRING="";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+String OUTSTRING="";
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+String OUTSTRING="";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+String OUTSTRING="";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+if(str.isEmpty()){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+if(str.isEmpty()){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(str.isEmpty()){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+if(str.isEmpty()){
+return null;
+}
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+if(str.isEmpty()){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+if(str.isEmpty()){
+return null;
+}
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+if(str.isEmpty()){
+return null;
+}
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
+if(str.isEmpty()){
+return null;
+}
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+if(str.isEmpty()){
+return null;
+}
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5856/pattern-ver1-serial/src.main.java.io.aif.associations.builder.ExperimentsConnectionsGraphReducer.java-normalize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(Math.round(0),2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,Math.round(2)),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(Math.round(3),5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,Math.round(5)));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(Math.round(0),2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,Math.round(2)),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(Double.isNaN(len)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(Double.isNaN(len)){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(Double.isNaN(len)){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(Double.isNaN(ch3)){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(Double.isNaN(len)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(Double.isNaN(len)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str.equalsIgnoreCase(null)){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V35/409/pattern-ver1-serial/src.com.wasteofplastic.askyblock.ASkyBlock.java-loadPluginConfig.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(Math.abs(5))!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring(Math.abs(6)));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
- final char ch4=str.charAt(4);
+ final char ch4=str.charAt(Math.abs(4));
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(Math.abs(ch3))||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase(Math.abs(ch4))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(Math.abs(2))!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
- final char ch3=str.charAt(3);
+ final char ch3=str.charAt(Math.abs(3));
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
- final char ch1=str.charAt(1);
+ final char ch1=str.charAt(Math.abs(1));
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(Math.abs(ch0))||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
+int indexSelection=0;
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
+int indexSelection=0;
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+int indexSelection=0;
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(Math.max(0,2),2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,Math.max(0,2)),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(Math.max(3,5),5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,Math.max(3,5)));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(Math.max(0,2),2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,Math.max(0,2)),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V11/4531/pattern-ver1-serial/rsen.src.main.java.com.rsen.github.common.L.java-i.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(ch4!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(ch3!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(ch1!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(len!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(ch0!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(str+1,str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6767/pattern-ver1-serial/src.main.java.org.gedcom4j.writer.GedcomWriter.java-emitRepositoryCitation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:49:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+int a=1;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+int a=1;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+int a=1;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+int a=1;
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+int a=1;
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+int a=1;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+int a=1;
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+int a=1;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
+int a=1;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
+int a=1;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+boolean b=true;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+boolean b=true;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+boolean b=true;
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+boolean b=true;
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+boolean b=true;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+boolean b=true;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+boolean b=true;
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+boolean b=true;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
+boolean b=true;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
+boolean b=true;
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+if(str==null){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+if(str==null){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+if(str==null){
+return null;
+}
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(str==null){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+if(str==null){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+if(str==null){
+return null;
+}
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:50:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(str==null){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+if(str==null){
+return null;
+}
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
+if(str==null){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
+if(str==null){
+return null;
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str==null||str.isEmpty()){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/354/pattern-ver1-serial/hapi-fhir-base.src.main.java.ca.uhn.fhir.parser.XmlParser.java-encodeCompositeElementChildrenToStreamWriter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str==null){
+return null;
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+if(str==null){
+return null;
+}
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str==null){
+return null;
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str==null){
+return null;
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+if("&null".equals(str)){
+return null;
+}
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
+return null;
+}
+if("&null".equals(str)){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if("&null".equals(str)){
+return null;
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
+if("&null".equals(ch4)){
+return null;
+}
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
+if("&null".equals(ch3)){
+return null;
+}
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)||!!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch0)||!!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/6688/pattern-ver1-serial/src.MineralOre.java-update.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<7||len==Long.MIN_VALUE){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==5||len==Long.MIN_VALUE){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==2||len==Long.MIN_VALUE){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<5||len==Long.MIN_VALUE){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<2||len==Long.MIN_VALUE){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3=='_'||ch3==Long.MIN_VALUE){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0=='_'||ch0==Long.MIN_VALUE){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2)+"\n",str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3324/pattern-ver1-serial/src.main.java.edu.clemson.cs.rsrg.init.Controller.java-compileTargetFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:51:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5)+"\n");
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/3324/pattern-ver1-serial/src.main.java.edu.clemson.cs.rsrg.init.Controller.java-compileTargetFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replaceAll("[^\\w\\s]",""));
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/547/pattern-ver1-serial/src.main.java.com.driver.locator.pageobject.PageObjectGenerator.java-formatWebElement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:52:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str.replace("Invalid locale format: ",""));
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/2038/pattern-ver1-serial/LabPal.app.src.main.java.danandzach.labpal.LabCalculations.java-setErrorDisplay.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+assert (str!=null);
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+assert (str!=null);
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+assert (str!=null);
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+assert (str!=null);
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+assert (str!=null);
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+assert (str!=null);
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+assert (str!=null);
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+assert (str!=null);
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
+assert (str!=null);
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+assert (str!=null);
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+assert (!str.isEmpty());
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+assert (!str.isEmpty());
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
+assert (!str.isEmpty());
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/3866/pattern-ver1-serial/src.SigmaEC.util.Parameters.java-getBooleanParameter.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+if(str.contains(str)){
+return null;
+}
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+if(str.contains(str)){
+return null;
+}
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
+return new Locale(str.substring(0,2),str.substring(3,5),schemaLocation);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5),schemaLocation);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+ final String schemaLocation="http://www.modaclouds.eu/xsd/1.0/monitoring_rules_schema https://raw.githubusercontent.com/deib-polimi/tower4clouds/master/rules/metamodels/monitoring_rules_schema.xsd";
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5),schemaLocation);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/5423/pattern-ver1-serial/src.main.java.it.polimi.modaclouds.recedingHorizonScaling4Cloud.monitoringPlatformConnector.MonitoringConnector.java-saveRulesToFile.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.contains(str)){
+return null;
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+if(str.contains(str)){
+return null;
+}
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.contains(str)){
+return null;
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/5787/pattern-ver1-serial/modules.web.web-impl.src.main.java.com.enonic.xp.web.impl.WebHandlerRegistry.java-add.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
+if(str!=null){
+ final char ch1=str.charAt(1);
+if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len==2){
+return new Locale(str);
+}
+if(len<5){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.charAt(2)!='_'){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+ final char ch3=str.charAt(3);
+if(ch3=='_'){
+return new Locale(str.substring(0,2),"",str.substring(4));
+}
+ final char ch4=str.charAt(4);
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len==5){
+return new Locale(str.substring(0,2),str.substring(3,5));
+}
+if(len<7){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.charAt(5)!='_'){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+}
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+if(str!=null){
+if(str==null){
+return null;
+}
+ final int len=str.length();
+if(len<2){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+ final char ch0=str.charAt(0);
+if(ch0=='_'){
+if(len<3){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+ final char ch1=str.charAt(1);
+ final char ch2=str.charAt(2);
+if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len==3){
+return new Locale("",str.substring(1,3));
+}
+if(len<5){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.charAt(3)!='_'){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+return new Locale("",str.substring(1,3),str.substring(4));
+}else {
+ final char ch1=str.charAt(1);
+if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len==2){
+return new Locale(str);
+}
+if(len<5){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.charAt(2)!='_'){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+ final char ch3=str.charAt(3);
+if(ch3=='_'){
+return new Locale(str.substring(0,2),"",str.substring(4));
+}
+ final char ch4=str.charAt(4);
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len==5){
+return new Locale(str.substring(0,2),str.substring(3,5));
+}
+if(len<7){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.charAt(5)!='_'){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+}
+}
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
-if(len<5){
+if(len<-1){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<-1){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V21/2863/pattern-ver1-serial/app.src.main.java.alex.com.box2ddemo.gift2dview.Box2dSenserLogic.java-onSensorChanged.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
+assert (ch4!=str.charAt(4));
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
+assert (ch3!=str.charAt(3));
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+assert (ch1!=str.charAt(1));
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+assert (len!=str.length());
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
+assert (ch1!=str.charAt(1));
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
+assert (ch2!=str.charAt(2));
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+assert (ch0!=str.charAt(0));
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+String noneMessageKey="members.speakers.none";
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5),noneMessageKey);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/3917/pattern-ver1-serial/app.controllers.Application.java-speakersOn.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
+String noneMessageKey="members.speakers.none";
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5),noneMessageKey);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/3917/pattern-ver1-serial/app.controllers.Application.java-speakersOn.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
+assert (str!=null);
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
+assert (str!=null);
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2).toString(),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/5021/pattern-ver1-serial/src.main.java.com.infinityraider.agricraft.tileentity.TileEntityCustomWood.java-getMaterialTag.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5).toString());
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V9/5021/pattern-ver1-serial/src.main.java.com.infinityraider.agricraft.tileentity.TileEntityCustomWood.java-getMaterialTag.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2)+1,str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7285/pattern-ver1-serial/jm-prta-parser.src.main.java.org.meyerlab.nopence.jm_prta_parser.attributes.NumericAttribute.java-getBinByValue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),str.substring(3,5)+1);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/7285/pattern-ver1-serial/jm-prta-parser.src.main.java.org.meyerlab.nopence.jm_prta_parser.attributes.NumericAttribute.java-getBinByValue.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str==null||"查看红包".equals(str)){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<7||"查看红包".equals(len)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==2||"查看红包".equals(len)){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==5||"查看红包".equals(len)){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3=='_'||"查看红包".equals(ch3)){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'||"查看红包".equals(str.charAt(5))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:54:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<5||"查看红包".equals(len)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<2||"查看红包".equals(len)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0=='_'||"查看红包".equals(ch0)){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<7||len==3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==2||len==3){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'||str.charAt(5)==3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<2||len==3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==5||len==3){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!='_'||str.charAt(2)==3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<5||len==3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3=='_'||ch3==3){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.isEmpty()){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.isEmpty()){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/7675/pattern-ver1-serial/libsrc.ffdec_lib.src.com.jpexs.decompiler.flash.action.swf4.ActionGotoFrame2.java-execute.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str!=null&&str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str!=null&&str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V15/6389/pattern-ver1-serial/src.org.ohmage.conditionevaluator.comparator.SingleChoiceDataPointComparator.java-lessThan.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.isEmpty()){
+str=null;
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+if(str.isEmpty()){
+str=null;
+}
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/4117/pattern-ver1-serial/src.main.java.es.uvigo.esei.compi.gui.SwingDemo.java-compiExecution.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str==null||str==""){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V38/7341/pattern-ver1-serial/log210_webproject_BDD.src.RechercheLivre.java-RechercheLivre.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<0||len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len<0||len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len<0||len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<0||len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<0||len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)<0||str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:55:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3<0||ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)<0||str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'==false){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!='_'==false){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'||str.charAt(5)==Long.MIN_VALUE){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.matches("/+[\\w\\.\\d/]+.*")){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5089/pattern-ver1-serial/exportLibraries.cimadapter.src.main.java.com.emc.storageos.cimadapter.processors.CimIndicationSet.java-processProperty.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.matches("/+[\\w\\.\\d/]+.*")){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V20/5089/pattern-ver1-serial/exportLibraries.cimadapter.src.main.java.com.emc.storageos.cimadapter.processors.CimIndicationSet.java-processProperty.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<7||len==0){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==5||len==0){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==2||len==0){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3=='_'||ch3==0){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'||str.charAt(5)==0){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<5||len==0){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<2||len==0){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
+if(ch0=='_'||ch0==0){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:56:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<7||len>9){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:57:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==5||len>9){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:57:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<5||len>9){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:57:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<2||len>9){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==2||len>9){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'||str.charAt(5)>9){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3=='_'||ch3>9){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!='_'||str.charAt(2)>9){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str+" -u "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str+" -u "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+str+" -u "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'&&str.charAt(5)<4000000){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<7&&len<4000000){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!='_'&&str.charAt(2)<4000000){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==5&&len<4000000){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==2&&len<4000000){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<5&&len<4000000){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<2&&len<4000000){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3=='_'&&ch3<4000000){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str==null||str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str==null||str.trim().isEmpty()){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1097/pattern-ver1-serial/src.bakatxt.core.BakaProcessor.java-editEndTime.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(Double.isNaN(str.charAt(5))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.contains(".")){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2868/pattern-ver1-serial/src.main.java.play.templates.GroovyTemplate.java-invokeTag.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.contains(".")){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V9/2868/pattern-ver1-serial/src.main.java.play.templates.GroovyTemplate.java-invokeTag.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'==true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!='_'==true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(len<7&&len!=9999){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:58:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(len==5&&len!=9999){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(len<5&&len!=9999){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(len<2&&len!=9999){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(len==2&&len!=9999){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str.charAt(5)!='_'&&str.charAt(5)!=9999){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if(ch3=='_'&&ch3!=9999){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str.charAt(2)!='_'&&str.charAt(2)!=9999){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if('_'>0&&str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if('_'>0&&str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
-if(len<7){
+if(7>0&&len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
-if(len<5){
+if(5>0&&len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
-if(len<2){
+if(2>0&&len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
+if(5>0&&len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==2){
+if(2>0&&len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
+if('_'>0&&ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str==null||str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str==null||str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V31/1012/pattern-ver1-serial/common.buildcraft.robotics.StationIndex.java-equals.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
+}
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 15:59:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.isEmpty()){
+System.out.println("Team has to have a name");
+return null;
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/1672/pattern-ver1-serial/cli.src.main.java.cz.muni.fi.pa165.fast.cli.TeamCreateCommand.java-argument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+assert (str!=null):"Appointments day is not allowed to be null!";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+assert (str!=null):"Appointments day is not allowed to be null!";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+assert (str!=null):"Appointments day is not allowed to be null!";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+assert (str!=null):"Appointments day is not allowed to be null!";
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+assert (str!=null):"Appointments day is not allowed to be null!";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+assert (str!=null):"Appointments day is not allowed to be null!";
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+assert (str!=null):"Appointments day is not allowed to be null!";
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+assert (str!=null):"Appointments day is not allowed to be null!";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
+assert (str!=null):"Appointments day is not allowed to be null!";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
+assert (str!=null):"Appointments day is not allowed to be null!";
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
+import java.util.HashSet;
+
+import java.util.Collections;
+
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
+}
+if(str.isEmpty()){
+str=null;
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/6949/pattern-ver1-serial/app.src.main.java.com.peprally.jeremy.peprally.db_models.DBUserProfile.java-removeConversationId.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+if(str.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+if(str.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+if(str.isEmpty()){
+throw new IllegalArgumentException("Title must not be empty!");
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/1109/pattern-ver1-serial/eclipse.src.stoberry.dataManagement.Management.java-sendMessage.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+if(str==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+if(str==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
+if(ch4>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len==2){
+return new Locale(str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+if(len==2){
+return new Locale(str);
+}
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+ final char ch4=str.charAt(4);
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
- final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+ final char ch3=str.charAt(3);
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
- final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:00:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+ final char ch2=str.charAt(2);
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
- final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException("Invalid locale format: "+"\""+str+"\"");
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4748/pattern-ver1-serial/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.requests.FileSystemListRequest.java-getByFSName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+ final String dropStatement="Invalid locale format: "+str;
+throw new IllegalArgumentException(dropStatement);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+ final String dropStatement="Invalid locale format: "+str;
+throw new IllegalArgumentException(dropStatement);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+ final String dropStatement="Invalid locale format: "+str;
+throw new IllegalArgumentException(dropStatement);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+ final String dropStatement="Invalid locale format: "+str;
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(dropStatement);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+ final String dropStatement="Invalid locale format: "+str;
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(dropStatement);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+ final String dropStatement="Invalid locale format: "+str;
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(dropStatement);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+ final String dropStatement="Invalid locale format: "+str;
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(dropStatement);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
+ final String dropStatement="Invalid locale format: "+str;
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(dropStatement);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
+ final String dropStatement="Invalid locale format: "+str;
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(dropStatement);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+ final String dropStatement="Invalid locale format: "+str;
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(dropStatement);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+String loc="Invalid locale format: "+str;
+throw new IllegalArgumentException(loc);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+String loc="Invalid locale format: "+str;
+throw new IllegalArgumentException(loc);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+String loc="Invalid locale format: "+str;
+throw new IllegalArgumentException(loc);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+String loc="Invalid locale format: "+str;
+throw new IllegalArgumentException(loc);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+String loc="Invalid locale format: "+str;
+throw new IllegalArgumentException(loc);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+String loc="Invalid locale format: "+str;
+throw new IllegalArgumentException(loc);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+String loc="Invalid locale format: "+str;
 if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(loc);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+String loc="Invalid locale format: "+str;
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(loc);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+String loc="Invalid locale format: "+str;
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(loc);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
+String loc="Invalid locale format: "+str;
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
+throw new IllegalArgumentException(loc);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 3, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3-1,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3,5-1));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0-1,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2-1),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3-1,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return new Locale(str.substring(0,2),str.substring(3,5-1),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
-return new Locale("",str.substring(1,3));
+return new Locale("",str.substring(1-1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0-1,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2-1),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7554/pattern-ver1-serial/src.rush.hour.Board.java-getGoalTiles.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
-if(str==null){
+if(str==null&&!str.equals("")){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(len==2){
-return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+if(len<7){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:02:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
+if(str.startsWith("\r\n")){
+str=str.substring(2);
+}
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V41/7437/pattern-ver1-serial/distributed.src.main.java.com.orientechnologies.orient.server.distributed.impl.task.OSyncDatabaseTask.java-onMessage.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
-if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+if(ch0=='_'){
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+if(len<5){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
-}
-if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
+}
+if(str.startsWith("/")){
+str=str.substring(1);
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(str.startsWith("/")){
+str=str.substring(1);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/2604/pattern-ver1-serial/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.DBDeployer.java-createAxisOperation.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
-return new Locale("",str.substring(1,3));
+return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)||"查看红包".equals(!Character.isUpperCase(ch3))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return null;
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V12/6908/pattern-ver1-serial/mainModule.src.backend.building.ProductionBuilding.java-canBuild.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/3312/pattern-ver1-serial/WWIDesigner.src.main.com.wwidesigner.note.view.FingeringPatternPanel.java-getData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/3312/pattern-ver1-serial/WWIDesigner.src.main.com.wwidesigner.note.view.FingeringPatternPanel.java-getData.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)==false){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)==false){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3764/pattern-ver1-serial/uDig.org.locationtech.udig.processingtoolbox.src.org.locationtech.udig.processingtoolbox.tools.TextfileToPointDialog.java-getTextColumns.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return (Locale)new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/947/pattern-ver1-serial/advinst-server.src.main.java.jetbrains.buildServer.advinst.server.AdvinstRunTypePropertiesProcessor.java-process.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch0)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/947/pattern-ver1-serial/advinst-server.src.main.java.jetbrains.buildServer.advinst.server.AdvinstRunTypePropertiesProcessor.java-process.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)==true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)==true){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/1922/pattern-ver1-serial/app.src.main.java.ch.hsr.edu.sinv_56082.gastroginiapp.ui.activities.menu.ProductListListEditView.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return (Locale)(new Locale(str.substring(0,2),str.substring(3,5)));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
+if(str.charAt(5)!='_'){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str!=null&&str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str!=null&&str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/3141/pattern-ver1-serial/src.main.java.com.bsg.pcms.balance.BalanceExcelController.java-checkEmpty.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(3)!='_'){
+if(str!=null&&str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str!=null&&str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/3141/pattern-ver1-serial/src.main.java.com.bsg.pcms.balance.BalanceExcelController.java-checkEmpty.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
-}
-if(len<7){
-throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 3, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
-}
-if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 3, INS : 0, DEL : 7
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+if(str.charAt(3)!='_'){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
+if(len==3){
+return new Locale("",str.substring(1,3));
+}
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(len==3){
-return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str==null||str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str==null||str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7782/pattern-ver1-serial/mt.mshub.src.main.java.com.spartansoftwareinc.ws.okapi.mt.mshub.WSMTAdapterConfigurationUI.java-save.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(3)!='_'){
+if(str==null||str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(5)!='_'){
+if(str==null||str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/7782/pattern-ver1-serial/mt.mshub.src.main.java.com.spartansoftwareinc.ws.okapi.mt.mshub.WSMTAdapterConfigurationUI.java-save.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
+if(str.endsWith("/")==false){
+str=str+"/";
+}
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/627/pattern-ver1-serial/src.main.java.com.thunder.util.Util.java-restMap.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(3)!='_'){
+if(str!=null&&str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(str.charAt(2)!='_'){
+if(str!=null&&str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/2789/pattern-ver1-serial/lulu.QL.src.ql.ast.expr.operation.andor.And.java-checkType.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str);
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
-return new Locale(str);
+return new Locale(str.substring(0,2),"",str.substring(4));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
-return new Locale(str.substring(0,2),"",str.substring(4));
+return new Locale(str);
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:04:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return null;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 3, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 3, INS : 0, DEL : 9
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return (Locale)new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
+return (Locale)(new Locale(str.substring(0,2),str.substring(3,5),str.substring(6)));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
+if(len==5){
+return new Locale(str.substring(0,2),str.substring(3,5));
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 1, DEL : 12
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+if(len==5){
+return new Locale(str.substring(0,2),str.substring(3,5));
+}
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 1, DEL : 12
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
+if(ch3=='_'){
+return new Locale(str.substring(0,2),"",str.substring(4));
+}
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 1, DEL : 12
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
+if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
+if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
+if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
+throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 14, UPD : 0, INS : 1, DEL : 13
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
-if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 3, INS : 0, DEL : 12
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
-if(ch3=='_'){
-return new Locale(str.substring(0,2),"",str.substring(4));
-}
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 3, INS : 0, DEL : 12
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
-return new Locale("",str.substring(1,3));
+return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale("",str.substring(1,3));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
+if(str!=null){
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
+}
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/258/pattern-ver1-serial/web.src.main.java.com.epam.freelancer.web.controller.UserController.java-addIsComplaintInOrderings.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 3, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+if(str!=null){
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
- final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+ final char ch4=str.charAt(4);
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 3, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+if(str!=null){
  final char ch1=str.charAt(1);
- final char ch2=str.charAt(2);
-if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
 }
+ final char ch2=str.charAt(2);
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 3, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if((!Character.isLowerCase(ch0))||(!Character.isLowerCase(ch1))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if((!Character.isUpperCase(ch3))||(!Character.isUpperCase(ch4))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
-if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
+if((!Character.isUpperCase(ch1))||(!Character.isUpperCase(ch2))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
-if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
+if((!Character.isUpperCase(ch3))||(!Character.isUpperCase(ch4))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
-if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
+if((!Character.isUpperCase(ch1))||(!Character.isUpperCase(ch2))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
-if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
+if((!Character.isLowerCase(ch0))||(!Character.isLowerCase(ch1))){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
 if(len<3){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch1=str.charAt(1);
  final char ch2=str.charAt(2);
 if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==3){
 return new Locale("",str.substring(1,3));
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(3)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
-return new Locale(str.substring(0,2),"",str.substring(4));
+return new Locale(str.substring(0,2),str.substring(3,5));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
-return new Locale(str.substring(0,2),str.substring(3,5));
+return new Locale(str.substring(0,2),"",str.substring(4));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/606/pattern-ver1-serial/aws-java-sdk-s3.src.main.java.com.amazonaws.services.s3.internal.BucketNameUtils.java-isValidV2BucketName.pattern
MATCHLEVEL : ALL
ALL : 18, UPD : 18, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[61,149]
------------Candidate---------------
 public static Locale toLocale(String str){
 if(str==null){
 return null;
 }
  final int len=str.length();
 if(len<2){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch0=str.charAt(0);
 if(ch0=='_'){
-if(len<3){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
- final char ch1=str.charAt(1);
- final char ch2=str.charAt(2);
-if(!Character.isUpperCase(ch1)||!Character.isUpperCase(ch2)){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(len==3){
 return new Locale("",str.substring(1,3));
-}
-if(len<5){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-if(str.charAt(3)!='_'){
-throw new IllegalArgumentException("Invalid locale format: "+str);
-}
-return new Locale("",str.substring(1,3),str.substring(4));
 }else {
  final char ch1=str.charAt(1);
 if(!Character.isLowerCase(ch0)||!Character.isLowerCase(ch1)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==2){
 return new Locale(str);
 }
 if(len<5){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(2)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
  final char ch3=str.charAt(3);
 if(ch3=='_'){
 return new Locale(str.substring(0,2),"",str.substring(4));
 }
  final char ch4=str.charAt(4);
 if(!Character.isUpperCase(ch3)||!Character.isUpperCase(ch4)){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(len==5){
 return new Locale(str.substring(0,2),str.substring(3,5));
 }
 if(len<7){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 if(str.charAt(5)!='_'){
 throw new IllegalArgumentException("Invalid locale format: "+str);
 }
 return new Locale(str.substring(0,2),str.substring(3,5),str.substring(6));
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V25/5275/pattern-ver1-serial/src.wgutask4.LookupDialog.java-getStudentTypeEntered.pattern
MATCHLEVEL : ALL
ALL : 64, UPD : 64, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:05:56 CDT
--------------- END -----------------
Location : org.apache.commons.lang3.LocaleUtils.availableLocaleList:[214]#0.2672612419124244
Compute Candidate : 2019.09.04 AD at 16:06:23 CDT - 2019.09.04 AD at 16:10:51 CDT , PNumber : 11270, CandNumber : 10 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
-return SyncAvoid.AVAILABLE_LOCALE_LIST;
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:10:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
+import java.util.ArrayList;
+
 public static List<Locale> availableLocaleList(){
-return SyncAvoid.AVAILABLE_LOCALE_LIST;
+return new ArrayList<>(SyncAvoid.AVAILABLE_LOCALE_LIST);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/2266/pattern-ver1-serial/src.com.homework.parts.Sentence.java-getNumbers.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:10:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
-return SyncAvoid.AVAILABLE_LOCALE_LIST;
+return Collections.emptyList();
 }

PATTERN : /home/jiajun/GithubData/2016/V5/4700/pattern-ver1-serial/host-controller.src.main.java.org.jboss.as.host.controller.DomainModelControllerService.java-suspendServers.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:10:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
-return SyncAvoid.AVAILABLE_LOCALE_LIST;
+return (List<Locale>)(SyncAvoid.AVAILABLE_LOCALE_LIST);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:10:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
+import java.util.Collections;
+
 public static List<Locale> availableLocaleList(){
-return SyncAvoid.AVAILABLE_LOCALE_LIST;
+return Collections.unmodifiableList(SyncAvoid.AVAILABLE_LOCALE_LIST);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/6159/pattern-ver1-serial/src.main.java.cz.muni.fi.xml.pools.UserXmlPool.java-getUsers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
+int a=0;
 return SyncAvoid.AVAILABLE_LOCALE_LIST;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:11:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
+String OUTSTRING="";
 return SyncAvoid.AVAILABLE_LOCALE_LIST;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:11:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
+int a=1;
 return SyncAvoid.AVAILABLE_LOCALE_LIST;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:11:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
+String AVAILABLE_LOCALE_LIST="%#.&f";
 return SyncAvoid.AVAILABLE_LOCALE_LIST;
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:11:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[204,215]
------------Candidate---------------
 public static List<Locale> availableLocaleList(){
+boolean b=true;
 return SyncAvoid.AVAILABLE_LOCALE_LIST;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:11:13 CDT
--------------- END -----------------
Location : org.apache.commons.lang3.LocaleUtils.isAvailableLocale:[239]#0.2672612419124244
Compute Candidate : 2019.09.04 AD at 16:11:39 CDT - 2019.09.04 AD at 16:16:06 CDT , PNumber : 11425, CandNumber : 26 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
+import java.util.ArrayList;
+
+import java.awt.event.FocusEvent;
+
+import java.awt.event.FocusAdapter;
+
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return availableLocaleList().add(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/615/pattern-ver1-serial/bundle.jsky.util.gui.src.main.java.jsky.util.gui.TextBoxWidget.java-addWatcher.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return availableLocaleList().remove(locale);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/4998/pattern-ver1-serial/app.src.main.java.me.ccrama.redditslide.Adapters.CommentAdapter.java-doInBackground.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return availableLocaleList().equals(locale);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/3866/pattern-ver1-serial/Common.src.common.Mathematics.PostfixConverter.java-convertToPostfix.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return false;
 }

PATTERN : /home/jiajun/GithubData/2011/V2/2886/pattern-ver1-serial/src.freenet.node.CHKInsertSender.java-shouldTimeout.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
+import java.util.Collections;
+
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return true;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4457/pattern-ver1-serial/library.src.main.java.com.gh.bmd.jrt.core.DefaultResultChannel.java-isOutputChannelOpen.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return (boolean)availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+int a=0;
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+String OUTSTRING="";
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return !availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/4293/pattern-ver1-serial/aparcaba-simulator.src.main.java.ar.org.aparcaba.simulator.SensorManager.java-isFree.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return (boolean)(availableLocaleList().contains(locale));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+int a=1;
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+boolean b=true;
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+if(availableLocaleList()==null){
+return false;
+}
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+assert (locale!=null);
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+if(availableLocaleList().contains(locale)){
+return false;
+}
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V43/6402/pattern-ver1-serial/src.edu.calpoly.android.imfree.DataStore.java-trueAddParseFriend.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+if(locale!=null){
+return availableLocaleList().contains(locale);
+}
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return availableLocaleList()==null?null:availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4320/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.githubissues.GitHubIssueNotifier.java-getRepoForJob.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return availableLocaleList().contains(locale)||availableLocaleList().contains("dldungeonsjbg");
 }

PATTERN : /home/jiajun/GithubData/2016/V16/3700/pattern-ver1-serial/java.jaredbgreat.dldungeons.api.DLDungeonsAPI.java-isLoaded.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:16:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return locale==null?null:availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4622/pattern-ver1-serial/src.soot.shimple.ShimpleMethodSource.java-getBody.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return availableLocaleList()!=null&&availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/4433/pattern-ver1-serial/app.src.main.java.it.jaschke.alexandria.NetworkUtility.java-isNetworkConnected.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return availableLocaleList()!=null?availableLocaleList().contains(locale):null;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/997/pattern-ver1-serial/src.main.java.bammerbom.ultimatecore.bukkit.r.java-getPermission.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
-return availableLocaleList().contains(locale);
+return (availableLocaleList()==null)?false:availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/4091/pattern-ver1-serial/src.main.java.org.jenkinsci.plugins.p4.credentials.P4TicketImpl.java-isTicketValueSet.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+assert (locale!=null):"Appointments day is not allowed to be null!";
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+if(availableLocaleList()==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+if(locale==null){
+throw new IllegalStateException("Cannot instantiate Page whitout String url constructor parameter or @PageURL class annotation");
+}
 return availableLocaleList().contains(locale);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4732/pattern-ver1-serial/src.main.java.com.mgiorda.page.AbstractPage.java-AbstractPage.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_2_buggy/src/main/java/org/apache/commons/lang3/LocaleUtils.java[232,240]
------------Candidate---------------
 public static boolean isAvailableLocale(Locale locale){
+if(availableLocaleList()!=null){
 return availableLocaleList().contains(locale);
+}
+return false;
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4555/pattern-ver1-serial/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.pipeline.transfer.ImportService.java-hasUserPermission.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.LocaleUtilsTest::testParseAllLocales]
---------START : 2019.09.04 AD at 14:08:29 CDT
---------TIME : 2019.09.04 AD at 16:17:18 CDT
--------------- END -----------------
Finish : lang-2 > patch : 0 | Start : Wed Sep 04 14:08:29 CDT 2019 | End : 2019.09.04 AD at 16:17:18 CDT
