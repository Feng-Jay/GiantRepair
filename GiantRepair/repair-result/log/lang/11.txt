Repair : lang_11
Current failed test : org.apache.commons.lang3.RandomStringUtilsTest::testLANG807 | 2019.09.05 AD at 07:25:02 CDT
Location : org.apache.commons.lang3.RandomStringUtils.random:[253, 234, 247, 248, 250, 252, 225, 227, 230]#0.5773502691896258
Compute Candidate : 2019.09.05 AD at 07:25:41 CDT - 2019.09.05 AD at 08:27:46 CDT , PNumber : 11381, CandNumber : 619 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+continue;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:27:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+continue;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/7570/pattern-ver1-serial/src.main.java.com.rayn.jflask.framework.mvc.MultipartHelper.java-parseMultipartParamList.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:27:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+continue;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/5856/pattern-ver1-serial/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.DbBackupHandler.java-dumpBackup.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:27:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
+ char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:27:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+ int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:27:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars==null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
-if(chars!=null){
+if(chars==null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V40/1240/pattern-ver1-serial/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.FlexoConceptInstanceRole.java-applyValidation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+return null;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+return null;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+return null;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
+if(chars!=null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4111/pattern-ver1-serial/tephra-core.src.main.java.co.cask.tephra.snapshot.SnapshotCodecV4.java-encodeInProgress.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(start<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(end<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<=0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count>0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+break;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+break;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+break;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3005/pattern-ver1-serial/LifeOnLine.src.lol.DateParser.java-getUserInputWithoutDueDate.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(count--==0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/6722/pattern-ver1-serial/collections.queue.IntArrayQueue.java-peek.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+int gap=count-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+int gap=start-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V27/6021/pattern-ver1-serial/src.org.andengine.util.algorithm.path.astar.ManhattanHeuristic.java-getExpectedRestCost.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start<=0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end<=0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null&&chars.length<=0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count<=0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/4307/pattern-ver1-serial/core.src.com.arkanoid.stm.gameStates.ArkanoidGdx.java-block.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)-start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/163/pattern-ver1-serial/app.src.main.java.th.zirata.Blocks.EnemyBlocks.Hydra.java-createHydra.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)+gap);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:28:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)+end);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(count==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(end==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&count==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&start==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5778/pattern-ver1-serial/src.main.java.cn.momia.mapi.api.AbstractIndexApi.java-getBanners.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)+count);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start>=0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end>=0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count>=0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null&&chars.length>=0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/848/pattern-ver1-serial/src.com.mojang.ld22.entity.Slime.java-render.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start!=0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end!=0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null&&chars.length!=0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count!=0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/565/pattern-ver1-serial/src.main.java.cloudservices.brokerage.policy.policycommons.model.entities.Policy.java-isValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+Integer gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7237/pattern-ver1-serial/Project.src.main.java.util.AdjacencyList.java-kruskal.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
+}
 }
+if(chars!=null){
+end=chars.length;
+}else {
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
 }
+if(count<0){
+throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1324/pattern-ver1-serial/cspi-schema.src.main.java.org.collectionspace.chain.csp.schema.Record.java-getServicesTenantDoctype.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+int gap=end-2;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/1120/pattern-ver1-serial/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java-updatePratilipiStats.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(count--<0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/1616/pattern-ver1-serial/src.PileRPL.java-sub.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start>0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end>0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null&&chars.length>0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count>0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/5819/pattern-ver1-serial/FlawlessEssenceMiner.java-active.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:29:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+int gap=end-end;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+int gap=end-count;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V52/5364/pattern-ver1-serial/src.beast.core.MCMC.java-doLoop.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(count-->0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3765/pattern-ver1-serial/app.src.main.java.com.xlythe.sms.MessageActivity.java-onGlobalLayout.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
+char[] buffer=new char[(count)];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/4580/pattern-ver1-serial/src.sort.MergeTask.java-call.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(count++!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/12/pattern-ver1-serial/src.main.java.com.quadcoder.coinpet.page.signup.SignupFormFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(gap--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(start--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(end--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4470/pattern-ver1-serial/core.src.com.esbjon.inventories.Inventory.java-commandTransferTo.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
-if(count==0){
+if(ch==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
-if(count==0){
+if(ch==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/4897/pattern-ver1-serial/src.main.java.de.axxepta.oxygen.utils.WorkspaceUtils.java-newResourceOrOverwrite.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(random!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/5499/pattern-ver1-serial/src.dao.PublicationDAO.java-listComents.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)+3);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4478/pattern-ver1-serial/src.holdem.HoldemGame.java-run.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return "An arena doesn't seem to be built yet.";
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+return "An arena doesn't seem to be built yet.";
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+return "An arena doesn't seem to be built yet.";
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/1665/pattern-ver1-serial/src.me.dalton.capturethepoints.CaptureThePoints.java-checkMainArena.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return "";
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+return "";
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+return "";
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+return "";
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6074/pattern-ver1-serial/RXTXRobot.src.rxtxrobot.RXTXRobot.java-sendRaw.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
+count--;
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+count--;
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
+count--;
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
+count--;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
+count--;
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:30:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
+count--;
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
+count--;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
+count--;
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+count--;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/6189/pattern-ver1-serial/src.Connection.java-discoverIP.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
-ch=chars[random.nextInt(gap)+start];
+ch=chars[random.nextInt(gap)-start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/3195/pattern-ver1-serial/src.org.compevol.ssgd.HKYSkylineIntegrator.java-transversionH.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
+ final char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
-char ch;
+ final char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
+ final char[] buffer=new char[count];
+ final int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+ final int gap=end-start;
 while(count--!=0){
-char ch;
+ final char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
+ char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
-char ch;
+ char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
+ int gap=end-start;
 while(count--!=0){
-char ch;
+ char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
+ char[] buffer=new char[count];
+ int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Iterator;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==-1&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Iterator;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end==-1){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Iterator;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null&&chars.length==-1){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Iterator;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==-1){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V12/7863/pattern-ver1-serial/src.main.java.util.ListTools.java-call.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+gap++;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+gap++;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+gap++;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
+gap++;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+gap++;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
+count++;
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
+gap++;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
+gap++;
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/868/pattern-ver1-serial/src.main.java.gcommon.objects.NumberFormatter.java-format.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+gap--;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+gap--;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+gap--;
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
+gap--;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
+gap--;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
+gap--;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
+return null;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
+return null;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
+return null;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+return null;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+return null;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+return null;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+random(count);
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+random(start);
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+random(end);
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+random(count);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+random(start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt((int)(gap))+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/6653/pattern-ver1-serial/Character.java-setCharstat.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
+return null;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/3053/pattern-ver1-serial/src.UI.ReservationUI.java-reserveTableOption.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)+(int)(start));
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/4690/pattern-ver1-serial/33_CDIO3.src.controller.DecisionController.java-askForDecision.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+return null;
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
+return null;
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/1404/pattern-ver1-serial/src.controllers.AnimatedBorderPane.java-setRightAnimated.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
+return null;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V2/4018/pattern-ver1-serial/src.client.net.Clientsocket.java-Sender.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+start++;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2119/pattern-ver1-serial/src.field.initial.FieldConstructor.java-execute.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:32:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)+-1);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V12/4243/pattern-ver1-serial/app.src.main.java.com.ryanwedoff.senor.naoservercontroller.WalkFragment.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start<0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end<0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count<0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/6790/pattern-ver1-serial/Minigames.src.au.com.mineauz.minigames.menu.MenuItemList.java-updateDescription.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+return null;
 }
 }
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+while(true){
+
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+}
+while(true){
+
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+while(true){
+
+}
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+while(true){
+
+}
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+count++;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/7680/pattern-ver1-serial/src.BSChecker.GUIController.java-previousError.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
+count--;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
+count--;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
+count--;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+count--;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
+count--;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
+count--;
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2847/pattern-ver1-serial/core.src.com.mygdx.game.GameScreen.java-updateBossBullet.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
+if(chars.equals(null)){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V1/343/pattern-ver1-serial/src.gui.batches.ItemBatchView.java-selectProduct.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
+ final char[] buffer=new char[count];
+ final int gap=end-start;
 while(count--!=0){
-char ch;
+ final char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
+ @SuppressWarnings("UnusedAssignment") char[] buffer=new char[count];
+ @SuppressWarnings("UnusedAssignment") int gap=end-start;
 while(count--!=0){
-char ch;
+ @SuppressWarnings("UnusedAssignment") char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3416/pattern-ver1-serial/mobile.src.main.java.com.harlie.radiotheater.radiomysterytheater.data_helper.LoadRadioTheaterTablesAsyncTask.java-loadEpisodes.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(gap)+1+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/2703/pattern-ver1-serial/src.main.java.net.minecraftforge.common.interpreter.AST.java-apply.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+start=start;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start+count==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start+start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start+end==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end+count==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end+start==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end+end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3750/pattern-ver1-serial/src.main.java.de.tudarmstadt.awesome.erclaerung.precomputation.LevenshteinStep.java-getAdjustedString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+count--;
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+count--;
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/1950/pattern-ver1-serial/Node.java-eventDelete.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+if(count==4){
+continue;
+}
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+if(count==4){
+continue;
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
+if(count==4){
+continue;
+}
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(count==4){
+continue;
+}
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+if(count==4){
+continue;
+}
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+}
+if(count==4){
+continue;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+if(count==4){
+continue;
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/5508/pattern-ver1-serial/common.enhancedportals.item.ItemPortalModifierUpgrade.java-getSubItems.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+count++;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+count--;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+ch=1000;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
+if(true){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(true){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(true){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Arrays;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+Arrays.sort(buffer);
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/405/pattern-ver1-serial/twitter-topic-strand-core.src.main.java.twittertopicstrand.util.FileOperations.java-getFiles.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+char ch;
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
-char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+int a=0;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+int a=0;
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+int a=0;
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
+int a=0;
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
+int a=0;
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:34:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+int a=0;
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
+int a=0;
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+int a=0;
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+int a=0;
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(gap+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/2928/pattern-ver1-serial/src.offensive.Communicator.JsonMessage.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
-ch=chars[random.nextInt(gap)+start];
+ch=chars[gap+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/2928/pattern-ver1-serial/src.offensive.Communicator.JsonMessage.java-toString.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(count+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(start+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(end+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+}
+if(ch==0.0){
+continue;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4118/pattern-ver1-serial/src.behavior.irl.TabularIRL.java-getBehaviorLogProbabilityHelper.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+String OUTSTRING="";
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+String OUTSTRING="";
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+String OUTSTRING="";
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+String OUTSTRING="";
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+String OUTSTRING="";
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+String OUTSTRING="";
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
+String OUTSTRING="";
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
+String OUTSTRING="";
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
+String OUTSTRING="";
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+int length=5;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+int Integer=5;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(Double.isNaN(count)){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(Double.isNaN(count)){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:35:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)(random.nextInt(Math.abs(gap))+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1979/pattern-ver1-serial/h2o-algos.src.main.java.hex.tree.gbm.GBM.java-map.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.floor(gap);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+int indexSelection=0;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+int indexSelection=0;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+int indexSelection=0;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+int indexSelection=0;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
+int indexSelection=0;
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
+int indexSelection=0;
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+if(random.equals("sounds")){
+continue;
+}
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/2569/pattern-ver1-serial/src.main.java.net.dirtydeeds.discordsoundboard.chat.ListCategoriesProcessor.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
-end=chars.length;
+end=end+chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
+end=end+Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
-end='z'+1;
+end=end+'z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
-start=' ';
+start=start+' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2052/pattern-ver1-serial/cg.cg.GTSurferMove.java-drawFactor.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+int a=1;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+int a=1;
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+int a=1;
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
+int a=1;
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:36:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
+int a=1;
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
+int a=1;
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+int a=1;
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+int a=1;
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+int a=1;
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+String length="%#.&f";
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+String MAX_VALUE="%#.&f";
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+boolean MAX_VALUE=true;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+boolean Integer=true;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+boolean length=true;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+char ch;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V45/7341/pattern-ver1-serial/src.datamanagement.UnitManager.java-createUnit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 1, DEL : 2
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+boolean b=true;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+boolean b=true;
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+boolean b=true;
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+boolean b=true;
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
+boolean b=true;
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
+boolean b=true;
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+boolean b=true;
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
+boolean b=true;
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+boolean b=true;
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+if(random==null){
+continue;
+}
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+if(random==null){
+continue;
+}
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+if(random==null){
+continue;
+}
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+if(random==null){
+continue;
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7058/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.manager.FileManager.java-getExternalSDCardDirectory.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:37:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+if(random==null){
+return "";
+}
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+if(random==null){
+return "";
+}
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+if(random==null){
+return "";
+}
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
+if(random==null){
+return "";
+}
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+if(random==null){
+return "";
+}
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+if(random==null){
+return null;
+}
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+if(random==null){
+return null;
+}
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+if(random==null){
+return null;
+}
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+if(random==null){
+return null;
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5906/pattern-ver1-serial/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java-buildImageFromInput.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+if(buffer==null){
+return null;
+}
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/2822/pattern-ver1-serial/grib.src.main.java.ucar.nc2.grib.grib1.tables.NcepHtmlScraper.java-parseTable2.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if(random==null){
+return null;
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
+if(random==null){
+return null;
+}
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+if(chars==null){
+return null;
+}
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V60/886/pattern-ver1-serial/src.com.inovex.zabbixmobile.activities.BaseSeverityFilterActivity.java-onSeveritySelected.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if("&null".equals(letters)){
+return null;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if("&null".equals(numbers)){
+return null;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if("&null".equals(chars)){
+return null;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if("&null".equals(random)){
+return null;
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if("&null".equals(start)){
+return null;
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if("&null".equals(letters)){
+return null;
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if("&null".equals(numbers)){
+return null;
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if("&null".equals(chars)){
+return null;
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+}
 }
+if("&null".equals(random)){
+return null;
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:38:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+}
 }
+if("&null".equals(count)){
+return null;
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
+start=' ';
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+start=' ';
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+start=' ';
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+start=' ';
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+start=' ';
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
+end=chars.length;
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+end=chars.length;
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+end=chars.length;
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+if(buffer.equals("")){
+return "";
+}
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+start=' ';
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+end=chars.length;
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+end=Integer.MAX_VALUE;
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+end=chars.length;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+end=Integer.MAX_VALUE;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
+start=' ';
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+start=' ';
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
+end=chars.length;
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
-start=' ';
 }
 }
+start=' ';
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+if(start<0){
+return null;
+}
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if(start<0){
+return null;
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
+if(start<0){
+return null;
+}
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+if(buffer.equals("-1")){
+return null;
+}
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==0||count==Long.MIN_VALUE){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0||count==Long.MIN_VALUE){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
+end=chars.length;
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
+end=Integer.MAX_VALUE;
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
+start=' ';
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
-end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+end=chars.length;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+end=Integer.MAX_VALUE;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+end=Integer.MAX_VALUE;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.max(random.nextInt(gap),1);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.max(gap,1);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.max(start,1);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+assert (random!=null);
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+assert (random!=null);
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+assert (random!=null);
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+assert (random!=null);
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+assert (random!=null);
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+if(random!=null){
+ch=(char)(random.nextInt(gap)+start);
+}
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+if(random!=null){
+char ch;
+if(chars==null){
+ch=(char)(random.nextInt(gap)+start);
+}else {
+ch=chars[random.nextInt(gap)+start];
+}
+if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
+}
+}else {
+count++;
+}
+}
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+if(random!=null){
+if(count==0){
+return "";
+}else {
+if(count<0){
+throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+}
+}
+if(chars!=null&&chars.length==0){
+throw new IllegalArgumentException("The chars array must not be empty");
+}
+if(start==0&&end==0){
+if(chars!=null){
+end=chars.length;
+}else {
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
+}
+}
+char[] buffer=new char[count];
+int gap=end-start;
+while(count--!=0){
+char ch;
+if(chars==null){
+ch=(char)(random.nextInt(gap)+start);
+}else {
+ch=chars[random.nextInt(gap)+start];
+}
+if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
+}
+}else {
+count++;
+}
+}
+return new String(buffer);
+}
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+if(ch==0){
+return null;
+}
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+}
+if(ch==0){
+return null;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if(end==0){
+return null;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:40:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if(start==0){
+return null;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+if(ch==0){
+return null;
+}
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
 }
+if(end==0){
+return null;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+assert (buffer!=new char[count]);
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
+assert (gap!=end-start);
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+assert (buffer!=null);
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
+assert (buffer!=null);
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
+assert (buffer!=null);
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
+assert (buffer!=null);
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+assert (buffer!=null);
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+assert (buffer!=null);
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
+assert (buffer!=null);
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/4564/pattern-ver1-serial/app.src.main.java.com.squirrel.justrread.api.RedditAPI.java-checkIfSubscribed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
-end=chars.length;
+end=-1;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+end++;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
+end=-1;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+end++;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
-start=' ';
+start=-1;
 }
 }
+start++;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
-end=chars.length;
+end=-1;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+end++;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
+end=-1;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+end++;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+assert (chars!=null);
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+assert (chars!=null);
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/126/pattern-ver1-serial/main.table.org.gamegineer.table.core.src.org.gamegineer.table.core.ComponentPath.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+assert (random!=null);
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+assert (random!=null);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+assert (random!=null);
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
+if(chars==null||"查看红包".equals(chars)){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:41:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==0||"查看红包".equals(count)){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0||"查看红包".equals(count)){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==0||count==3){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0||count==3){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count<0||count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0||count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
-if(!letters&&!numbers){
+if(!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/2329/pattern-ver1-serial/src.main.java.com.shootoff.gui.controller.ShootOFFController.java-setFullScreenStatus.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&start>=0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1272/pattern-ver1-serial/rest-provider.src.main.java.org.jboss.pressgang.ccms.proxy.RESTCSRelatedNodeV1ProxyHandler.java-internalInvoke.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if((start==0||start=='\'')&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6625/pattern-ver1-serial/src.com.google.javascript.jscomp.CodeConsumer.java-add.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
-buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+buffer[count]=ch;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==0||count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0||count==0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0||count>9){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==0||count>9){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.max(random.nextInt(gap)+start,1);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.max((random.nextInt(gap)+start),1);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:42:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+buffer[count]=ch;
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+buffer[count]=ch;
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
+buffer[count]=ch;
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+buffer[count]=ch;
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/1831/pattern-ver1-serial/bitrepository-audit-trail-service.src.main.java.org.bitrepository.audittrails.collector.IncrementalCollector.java-handleEvent.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==0&&count<4000000){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0&&count<4000000){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
+if(chars==null||chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/4704/pattern-ver1-serial/src.main.java.com.alibaba.fastjson.parser.ParserConfig.java-createJavaBeanDeserializer.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(count<0&&count!=9999){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(count==0&&count!=9999){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
-if(count<0){
+if(0>0&&count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
+if(0>0&&count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/960/pattern-ver1-serial/src.main.java.cz.zcu.kiv.eegdatabase.wui.ui.lists.components.ResearchGroupSelectForm.java-ResearchGroupSelectForm.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.floor(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.floor(random.nextInt(gap));
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=(char)Math.floor(start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/3597/pattern-ver1-serial/src.burlap.behavior.singleagent.vfa.cmac.Tiling.java-ObjectTile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+assert (start>=0):"Receive a negative tratment";
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+assert (start>=0):"Receive a negative tratment";
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+assert (start>=0):"Receive a negative tratment";
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+assert (count>=0):"Receive a negative tratment";
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
+assert (count>=0):"Receive a negative tratment";
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+assert (count>=0):"Receive a negative tratment";
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
+start=' ';
 }else {
 end='z'+1;
 start=' ';
 }
+start=' ';
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
+start=' ';
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
+start=' ';
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
+start=' ';
 start=' ';
 }
+start=' ';
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
+end=chars.length;
 }else {
 end='z'+1;
 start=' ';
 }
+end=chars.length;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
+end=chars.length;
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
+end=chars.length;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
+end=chars.length;
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
+end=chars.length;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 2, DEL : 3
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
-end='z'+1;
+end=-1;
 start=' ';
 }
 }
+end++;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
-end='z'+1;
+end=-1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+end++;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 3, INS : 2, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+assert (random!=null):"Appointments day is not allowed to be null!";
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+assert (random!=null):"Appointments day is not allowed to be null!";
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+assert (random!=null):"Appointments day is not allowed to be null!";
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+assert (start!=0):"Receive a size tratment";
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+assert (start!=0):"Receive a size tratment";
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
+assert (count!=0):"Receive a size tratment";
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+assert (count!=0):"Receive a size tratment";
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+assert (start!=0):"Receive a size tratment";
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+assert (count!=0):"Receive a size tratment";
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=1;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=0;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V64/1097/pattern-ver1-serial/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.signature.javadoc.AJavaDocCommentMerger.java-parseTags.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if(start>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+if(gap>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=2;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/4298/pattern-ver1-serial/anglewyrm.src.BlockHouse.java-addBlockToTown.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=3;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3200/pattern-ver1-serial/app.src.main.java.com.example.jarvus.tummybuddy.DisplayMenuActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
+end='z'+1;
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+end='z'+1;
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+if(ch<0){
+ch=0;
+}
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+}
+if(ch<0){
+ch=0;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if(end<0){
+end=0;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if(start<0){
+start=0;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+if(ch<0){
+ch=0;
+}
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+end='z'+1;
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
+end='z'+1;
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+end='z'+1;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
-end='z'+1;
 start=' ';
 }
 }
+end='z'+1;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+}
+if(ch<=0){
+ch=1;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
+end='z'+1;
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=10;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.SlarkDarkPact.java-SlarkDarkPact.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
-int gap=end-start;
 while(count--!=0){
+int gap=end-start;
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/2943/pattern-ver1-serial/hadoop.order_inversion.src.main.java.org.mdp.learn.hadoop.order_inversion.pairs.CoOccurrenceMatrixMapperWithPairs.java-map.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=100;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/6884/pattern-ver1-serial/src.main.java.us.sharknet.dota.model.ability.TemplarAssassinRefraction.java-TemplarAssassinRefraction.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
-if(chars!=null){
+if(chars.equals(null)){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
+if(chars.equals(null)){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V33/3794/pattern-ver1-serial/java.src.jmri.jmrit.operations.rollingstock.cars.CarAttributeEditFrame.java-checkItemName.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:45:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
+if(chars==null&&!chars.equals("")){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/6260/pattern-ver1-serial/Client.src.com.way.chat.activity.ChatActivity.java-onItemClick.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end==0||"查看红包".equals(start==0)){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null&&chars.length==0||"查看红包".equals(chars!=null)){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V13/4605/pattern-ver1-serial/app.src.main.java.xyz.monkeytong.hongbao.utils.HongbaoSignature.java-generateSignature.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0&&end==0||end=='%'){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null&&chars.length==0||chars.length=='%'){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/6049/pattern-ver1-serial/src.main.java.org.wltea.analyzer.core.LaTeXSegmenter.java-addOperatorFormula.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start<0L||(start==0&&end==0)){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/110/pattern-ver1-serial/src.com.firebirdberlin.nightdream.ui.NightDreamUI.java-updateWeatherData.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
-while(count--!=0){
+while(count--!=0||count-->>>3>0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/6215/pattern-ver1-serial/java.src.Bin.java-pack_integer.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(chars!=null){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/2886/pattern-ver1-serial/BackChina.src.com.android.backchina.fragment.TabSubscribeFragment.java-handleMySubscribeResponse.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(true){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if(true){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5898/pattern-ver1-serial/eSecureBox.src.main.java.com.volcano.esecurebox.widget.FieldCell.java-setListAction.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
+end='z'+1;
 }else {
 end='z'+1;
 start=' ';
 }
+end='z'+1;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
+end='z'+1;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
+end='z'+1;
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 0, INS : 2, DEL : 5
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+if(buffer==null){
+throw new IllegalStateException("User isn't registered! "+count);
+}
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+ final String dropStatement="Requested random string length "+count+" is less than 0.";
 if(count<0){
-throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+throw new IllegalArgumentException(dropStatement);
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
-throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+ final String dropStatement="Requested random string length "+count+" is less than 0.";
+throw new IllegalArgumentException(dropStatement);
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+ final String dropStatement="Requested random string length "+count+" is less than 0.";
 if(count==0){
 return "";
 }else {
 if(count<0){
-throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+throw new IllegalArgumentException(dropStatement);
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+String loc="Requested random string length "+count+" is less than 0.";
 if(count<0){
-throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+throw new IllegalArgumentException(loc);
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
-throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+String loc="Requested random string length "+count+" is less than 0.";
+throw new IllegalArgumentException(loc);
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+ch=(char)(random.nextInt(gap)+start);
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+ch=(char)(random.nextInt(gap)+start);
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+ch=(char)(random.nextInt(gap)+start);
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
+ch=(char)(random.nextInt(gap)+start);
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:46:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+ch=(char)(random.nextInt(gap)+start);
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+ch=chars[random.nextInt(gap)+start];
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+ch=chars[random.nextInt(gap)+start];
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+ch=chars[random.nextInt(gap)+start];
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
+ch=chars[random.nextInt(gap)+start];
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
+ch=(char)(random.nextInt(gap)+start);
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
+ch=(char)(random.nextInt(gap)+start);
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
+ch=(char)(random.nextInt(gap)+start);
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+ch=(char)(random.nextInt(gap)+start);
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+ch=(char)(random.nextInt(gap)+start);
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
+ch=(char)(random.nextInt(gap)+start);
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
+ch=(char)(random.nextInt(gap)+start);
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
+ch=(char)(random.nextInt(gap)+start);
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
+ch=(char)(random.nextInt(gap)+start);
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/2049/pattern-ver1-serial/src.railwaystation.infrastructure.Train.java-informAboutExternalDelay.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
+ch=(char)(random.nextInt(gap)+start);
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
+ch=(char)(random.nextInt(gap)+start);
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+ch=(char)(random.nextInt(gap)+start);
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+ch=(char)(random.nextInt(gap)+start);
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
+ch=(char)(random.nextInt(gap)+start);
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V22/5555/pattern-ver1-serial/src.main.java.TeamRoots.Goetia.client.gui.GuiFocus.java-mouseReleased.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+ch=chars[random.nextInt(gap)+start];
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+ch=(char)(random.nextInt(gap)+start);
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
-ch=chars[random.nextInt(gap)+start];
 }
+ch=chars[random.nextInt(gap)+start];
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onError.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
-if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+if(chars==null){
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+ch=chars[random.nextInt(gap)+start];
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
-ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
+ch=(char)(random.nextInt(gap)+start);
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
+ch=(char)(random.nextInt(gap)+start);
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
+ch=(char)(random.nextInt(gap)+start);
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
+ch=(char)(random.nextInt(gap)+start);
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
+ch=(char)(random.nextInt(gap)+start);
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/6708/pattern-ver1-serial/src.next.i.view.widgets.XFlexTable.java-XFlexTable.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
+ch=(char)(random.nextInt(gap)+start);
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+ch=(char)(random.nextInt(gap)+start);
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+ch=(char)(random.nextInt(gap)+start);
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V22/2622/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeImageService.java-updateComputeImage.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
+ch=(char)(random.nextInt(gap)+start);
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+ch=chars[random.nextInt(gap)+start];
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
+ch=chars[random.nextInt(gap)+start];
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
+import java.io.File;
+
+import java.util.HashSet;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
+ch=chars[random.nextInt(gap)+start];
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/3878/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.jobs.backupscheduler.UploadExecutor.java-doUpload.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+ch=chars[random.nextInt(gap)+start];
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
+ch=chars[random.nextInt(gap)+start];
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+ch=(char)(random.nextInt(gap)+start);
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
+ch=(char)(random.nextInt(gap)+start);
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V5/5159/pattern-ver1-serial/ui-common.src.main.java.org.exoplatform.selenium.platform.ecms.ContextMenu.java-lockNode.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
+ch=(char)(random.nextInt(gap)+start);
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
+ch=chars[random.nextInt(gap)+start];
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/3854/pattern-ver1-serial/NewIntro4.java-act.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
+ch=(char)(random.nextInt(gap)+start);
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/1924/pattern-ver1-serial/src.gui.map.MapDrawerPanel.java-restoreSession.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
+ch=chars[random.nextInt(gap)+start];
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V25/1924/pattern-ver1-serial/src.gui.map.MapDrawerPanel.java-restoreSession.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
-if(chars!=null){
-end=chars.length;
+if(chars==null){
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V7/7842/pattern-ver1-serial/plugins.org.csstudio.saverestore.ui.src.org.csstudio.saverestore.ui.util.RepositoryTree.java-getValueFromComponent.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
+ch=chars[random.nextInt(gap)+start];
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:48:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
+ch=chars[random.nextInt(gap)+start];
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
+boolean succeeded=false;
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+succeeded=true;
 }
 char[] buffer=new char[count];
+if(!succeeded){
+return null;
+}
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+boolean succeeded=false;
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
+succeeded=true;
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+}
+if(!succeeded){
+return null;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+boolean succeeded=false;
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+succeeded=true;
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+}
+if(!succeeded){
+return null;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+boolean succeeded=false;
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
+succeeded=true;
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+}
+if(!succeeded){
+return null;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+boolean succeeded=false;
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
+succeeded=true;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+}
+if(!succeeded){
+return null;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
-return "";
-}else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
+if(count==0){
+return "";
+}else {
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+buffer[count]=(char)(55296+random.nextInt(128));
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/4414/pattern-ver1-serial/crawler.src.crawler.Crawler.java-onStatus.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+buffer[count]=(char)(55296+random.nextInt(128));
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/6741/pattern-ver1-serial/core.src.main.java.org.jahia.modules.external.ExternalSessionImpl.java-move.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+buffer[count]=(char)(56320+random.nextInt(128));
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+buffer[count]=(char)(56320+random.nextInt(128));
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
-buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
+buffer[count]=(char)(55296+random.nextInt(128));
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
-buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V20/6349/pattern-ver1-serial/src.com.example.smartphone.SelectECActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+buffer[count]=(char)(55296+random.nextInt(128));
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
-buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+buffer[count]=(char)(56320+random.nextInt(128));
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
-buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+buffer[count]=(char)(55296+random.nextInt(128));
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V2/3128/pattern-ver1-serial/src.cubicmadness.gamestates.GameStateManager.java-popCurrentState.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+buffer[count]=(char)(56320+random.nextInt(128));
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
-buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+buffer[count]=(char)(56320+random.nextInt(128));
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+buffer[count]=(char)(55296+random.nextInt(128));
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
-buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
+buffer[count]=(char)(55296+random.nextInt(128));
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V4/1884/pattern-ver1-serial/src.java.is.idega.idegaweb.pheidippides.presentation.ParticipantsReport.java-initializeComponent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
-buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:49:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
-buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/2665/pattern-ver1-serial/channel.src.main.java.com.github.dm.jrt.channel.ReplayChannel.java-onOutput.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+if(count==3){
+System.out.println("debug");
+}
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if(count==3){
+System.out.println("debug");
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+if(count==3){
+System.out.println("debug");
+}
 ch=(char)(random.nextInt(gap)+start);
+if(count==3){
+System.out.println("debug");
+}
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+if(count==3){
+System.out.println("debug");
+}
 ch=chars[random.nextInt(gap)+start];
+if(count==3){
+System.out.println("debug");
+}
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+if(count==3){
+System.out.println("debug");
+}
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
+}
+if(count==3){
+System.out.println("debug");
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+if(count==3){
+System.out.println("debug");
+}
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+}
+if(count==3){
+System.out.println("debug");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+if(count==3){
+System.out.println("debug");
+}
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
+if(count==3){
+System.out.println("debug");
+}
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+if(count==3){
+System.out.println("debug");
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
+}
+if(count==3){
+System.out.println("debug");
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+buffer[count]=(char)(56320+random.nextInt(128));
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V11/5250/pattern-ver1-serial/exportLibraries.vplex.src.main.java.com.emc.storageos.vplex.api.VPlexApiVirtualVolumeManager.java-updateVirtualVolumeInfoAfterExpansion.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
+buffer[count]=(char)(55296+random.nextInt(128));
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
+buffer[count]=(char)(56320+random.nextInt(128));
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
+buffer[count]=(char)(55296+random.nextInt(128));
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
+buffer[count]=(char)(55296+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
+buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+buffer[count]=(char)(56320+random.nextInt(128));
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/7429/pattern-ver1-serial/library.src.main.java.com.datatorrent.lib.appdata.qr.processor.AbstractWEQueryQueueManager.java-enqueueHelper.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/4025/pattern-ver1-serial/AZoCamSyncDesktop.src.de.quadrillenschule.azocamsyncd.gui.SwingBackgroundUpdater.java-run.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+buffer[count]=(char)(55296+random.nextInt(128));
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V28/3904/pattern-ver1-serial/src.heartbeat.TachySyringe.java-Use.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:50:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if((start==0)&&(end==0)){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if((letters)&&(Character.isLetter(ch))||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if((start==0)&&(end==0)){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters&&Character.isLetter(ch)||(numbers)&&(Character.isDigit(ch))||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if((start==0)&&(end==0)){
 if(chars!=null){
 end=chars.length;
 }else {
-if(!letters&&!numbers){
+if((!letters)&&(!numbers)){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if((start==0)&&(end==0)){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||(!letters)&&(!numbers)){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if((chars!=null)&&(chars.length==0)){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if((letters)&&(Character.isLetter(ch))||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
-if(chars!=null&&chars.length==0){
+if((chars!=null)&&(chars.length==0)){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters&&Character.isLetter(ch)||(numbers)&&(Character.isDigit(ch))||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V17/5331/pattern-ver1-serial/src.main.java.groupProject.twentyFortyEight.GameLogic.java-gameOver.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start!=0&&start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
-if(!letters&&!numbers){
+if(0!=0&&!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5825/pattern-ver1-serial/app.src.main.java.com.companyname.hearts.ai.HAL9000.java-computer1MakesMove.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start!=0&&start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||0!=0&&!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5825/pattern-ver1-serial/app.src.main.java.com.companyname.hearts.ai.HAL9000.java-computer1MakesMove.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start!=0&&start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(0!=0&&letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5825/pattern-ver1-serial/app.src.main.java.com.companyname.hearts.ai.HAL9000.java-computer1MakesMove.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start!=0&&start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters&&Character.isLetter(ch)||0!=0&&numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V18/5825/pattern-ver1-serial/app.src.main.java.com.companyname.hearts.ai.HAL9000.java-computer1MakesMove.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
+buffer[count]=(char)(55296+random.nextInt(128));
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
+buffer[count]=(char)(56320+random.nextInt(128));
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
+buffer[count]=(char)(55296+random.nextInt(128));
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
+buffer[count]=(char)(56320+random.nextInt(128));
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V18/6417/pattern-ver1-serial/Code.DoubleAuctionWithNetworks.src.doubleAuction.Auction.java-executeSingleTransaction.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+buffer[count]=(char)(55296+random.nextInt(128));
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/156/pattern-ver1-serial/ControlCenter.src.main.java.org.votingsystem.web.controlcenter.filter.FilterVS.java-doFilter.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+buffer[count]=(char)(56320+random.nextInt(128));
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V32/156/pattern-ver1-serial/ControlCenter.src.main.java.org.votingsystem.web.controlcenter.filter.FilterVS.java-doFilter.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
-buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+buffer[count]=(char)(55296+random.nextInt(128));
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
-buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+buffer[count]=(char)(56320+random.nextInt(128));
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V34/6314/pattern-ver1-serial/app.src.main.java.mobile.tiis.app.postman.SynchronisationService.java-onHandleIntent.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+buffer[count]=(char)(55296+random.nextInt(128));
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
+buffer[count]=(char)(55296+random.nextInt(128));
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
+buffer[count]=(char)(55296+random.nextInt(128));
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
+buffer[count]=(char)(55296+random.nextInt(128));
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
+buffer[count]=(char)(55296+random.nextInt(128));
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
+buffer[count]=(char)(55296+random.nextInt(128));
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
+buffer[count]=(char)(55296+random.nextInt(128));
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/7028/pattern-ver1-serial/src.main.java.lc.server.StargateConnection.java-thinkSpinUp.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 1, DEL : 9
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
-if(chars!=null){
+if(start==0){
+if(chars!=null&&end==0){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/960/pattern-ver1-serial/src.main.java.cz.zcu.kiv.eegdatabase.wui.ui.lists.components.ResearchGroupSelectForm.java-ResearchGroupSelectForm.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(numbers||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/960/pattern-ver1-serial/src.main.java.cz.zcu.kiv.eegdatabase.wui.ui.lists.components.ResearchGroupSelectForm.java-ResearchGroupSelectForm.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 11, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
-if(start==0&&end==0){
+if(start==0){
 if(chars!=null){
 end=chars.length;
 }else {
-if(!letters&&!numbers){
+if(!letters&&!numbers&&end==0){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/4076/pattern-ver1-serial/moho-impl.src.main.java.com.voxeo.moho.sip.DirectAI2NOJoinDelegate.java-doInviteResponse.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 12, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
-if(count==0){
-return "";
-}else {
-if(count<0){
-throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
-}
-}
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V32/2603/pattern-ver1-serial/Android.BarcodeScanner.2.0.0.src.com.phonegap.plugins.barcodescanner.BarcodeScanner.java-onActivityResult.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 0, DEL : 13
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+long startTime=System.currentTimeMillis();
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
+long startTime=System.currentTimeMillis();
 ch=(char)(random.nextInt(gap)+start);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
+long startTime=System.currentTimeMillis();
 ch=chars[random.nextInt(gap)+start];
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
+long startTime=System.currentTimeMillis();
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
+long startTime=System.currentTimeMillis();
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+long startTime=System.currentTimeMillis();
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
-}else {
 ch=chars[random.nextInt(gap)+start];
+}else {
+ch=(char)(random.nextInt(gap)+start);
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3134/pattern-ver1-serial/app.src.main.java.ru.vif2ne.ui.MainActivity.java-refreshBottomMenu.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
+ch=chars[random.nextInt(gap)+start];
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
-ch=chars[random.nextInt(gap)+start];
+ch=(char)(random.nextInt(gap)+start);
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/4615/pattern-ver1-serial/org.smartsnip.src.org.smartsnip.client.TagArea.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 16, UPD : 16, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 1, DEL : 16
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 1, DEL : 16
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/2329/pattern-ver1-serial/src.main.java.com.shootoff.gui.controller.ShootOFFController.java-setFullScreenStatus.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 1, DEL : 16
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 0, INS : 1, DEL : 16
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:52:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2011/V2/1420/pattern-ver1-serial/JREngage.src.com.janrain.android.engage.ui.JRProvidersActivity.java-onListItemClick.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(letters&&Character.isLetter(ch)){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(numbers&&Character.isDigit(ch)){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/1959/pattern-ver1-serial/LowcostAvia.src.main.java.com.epam.lowcost.command.RegisterCommand.java-action.pattern
MATCHLEVEL : ALL
ALL : 17, UPD : 17, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 0, INS : 1, DEL : 20
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
+buffer[count]=ch;
+}
+if(count==0){
+count++;
+}else {
 buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 0, INS : 1, DEL : 20
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 0, INS : 1, DEL : 20
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 21, UPD : 0, INS : 1, DEL : 20
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
-if(chars!=null){
-end=chars.length;
-}else {
-if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
-}else {
-end='z'+1;
-start=' ';
-}
-}
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 0, INS : 0, DEL : 22
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
 }
+}else {
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+}else {
+end='z'+1;
+start=' ';
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V54/1742/pattern-ver1-serial/obdalib-protege41.src.main.java.it.unibz.krdb.obda.protege4.gui.action.R2RMLImportAction.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+}else {
+end=Integer.MAX_VALUE;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
+}else {
+end=chars.length;
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/2602/pattern-ver1-serial/src.com.github.norbo11.game.poker.PokerPlayer.java-bet.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
-if(chars!=null){
-end=chars.length;
-}else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
-}
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/3408/pattern-ver1-serial/COMP90015ChatClient.src.tiredale.client.ChatClientSocketThread.java-IdentityChangeResponse.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
-if(chars!=null){
-end=chars.length;
-}else {
-if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
-}else {
 end='z'+1;
 start=' ';
-}
-}
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5622/pattern-ver1-serial/src.main.java.com.github.randoapp.adapter.RandoPairsAdapter.java-initData.pattern
MATCHLEVEL : ALL
ALL : 22, UPD : 22, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+if(chars!=null){
+end=chars.length;
+}else {
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
+}
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
-if(chars!=null){
-end=chars.length;
-}else {
-if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
-}else {
-end='z'+1;
-start=' ';
-}
-}
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V1/4240/pattern-ver1-serial/app.src.main.java.com.extenprise.mapp.service.activity.AppointmentDetailsActivity.java-gotResponse.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
+}
+char[] buffer=new char[count];
+int gap=end-start;
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
-}
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1562/pattern-ver1-serial/assignment6.src.assignment6.TicketClient.java-run.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 1, DEL : 22
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
-}
-if(start==0&&end==0){
-if(chars!=null){
-end=chars.length;
-}else {
-if(!letters&&!numbers){
-end=Integer.MAX_VALUE;
-}else {
-end='z'+1;
-start=' ';
-}
-}
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V5/3749/pattern-ver1-serial/src.main.java.me.chaopeng.utils.DirUtils.java-rm.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 0, INS : 0, DEL : 29
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
+if(count==0){
+return "";
+}else {
+if(count<0){
+throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
+}
+}
+if(chars!=null&&chars.length==0){
+throw new IllegalArgumentException("The chars array must not be empty");
+}
+if(start==end){
+if(chars!=null){
+end=chars.length;
+}else {
+if(!letters&&!numbers){
+end=Integer.MAX_VALUE;
+}else {
+end='z'+1;
+start=' ';
+}
+}
+}else {
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
+}
+}
+}
+char[] buffer=new char[count];
+int gap=end-start;
+while(count--!=0){
+char ch;
+if(chars==null){
+ch=(char)(random.nextInt(gap)+start);
+}else {
+ch=chars[random.nextInt(gap)+start];
+}
+if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
+}
+}else {
+count++;
 }
 }
+return new String(buffer);
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/1425/pattern-ver1-serial/ScalableStorageService.src.consistent_hashing.Range.java-isWithin.pattern
MATCHLEVEL : ALL
ALL : 29, UPD : 29, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
+char[] buffer=new char[count];
+int gap=end-start;
+while(count--!=0){
+char ch;
+if(chars==null){
+ch=(char)(random.nextInt(gap)+start);
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
-while(count--!=0){
-char ch;
-if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 1, DEL : 29
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
+char[] buffer=new char[count];
+int gap=end-start;
+while(count--!=0){
+char ch;
+if(chars==null){
+ch=(char)(random.nextInt(gap)+start);
+}else {
+ch=chars[random.nextInt(gap)+start];
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
-while(count--!=0){
-char ch;
-if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
-}else {
-ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 1, DEL : 29
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
+}
+char[] buffer=new char[count];
+int gap=end-start;
+while(count--!=0){
+char ch;
+if(chars==null){
+ch=(char)(random.nextInt(gap)+start);
+}else {
+ch=chars[random.nextInt(gap)+start];
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
-}
 }
 }
-char[] buffer=new char[count];
-int gap=end-start;
-while(count--!=0){
-char ch;
-if(chars==null){
-ch=(char)(random.nextInt(gap)+start);
-}else {
-ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 0, INS : 1, DEL : 29
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+if(ch>=55296&&ch<=56191){
 if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
 count++;
 }else {
+buffer[count]=ch;
+}
+}
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:53:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
 count++;
 }else {
+buffer[count]=ch;
+}
+}
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+if(ch>=55296&&ch<=56191){
 if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
+}
+}
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
 }else {
+buffer[count]=(char)(56320+random.nextInt(128));
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
 }
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
 }else {
+buffer[count]=ch;
+}
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
+}
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
 }
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
 }else {
+buffer[count]=ch;
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
+}
+}
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
+}
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V11/5689/pattern-ver1-serial/minecraft.net.minecraft.src.BlockCocoaSapling.java-blockActivated.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
+}
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
-}
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V38/926/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.FileVirtualPoolService.java-prepareVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
 }else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
+count--;
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
 count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
+}
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 68, UPD : 0, INS : 1, DEL : 67
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
 if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
 if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
 count++;
 }else {
+buffer[count]=ch;
+}
+}
+}
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 68, UPD : 0, INS : 1, DEL : 67
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
 count++;
 }else {
+buffer[count]=ch;
+}
+}
+}
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 68, UPD : 0, INS : 1, DEL : 67
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
 }
 if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
+if(ch>=56320&&ch<=57343){
+if(count==0){
+count++;
+}else {
+buffer[count]=ch;
+count--;
+buffer[count]=(char)(55296+random.nextInt(128));
+}
+}else {
+if(ch>=55296&&ch<=56191){
+if(count==0){
+count++;
+}else {
+buffer[count]=(char)(56320+random.nextInt(128));
+count--;
 if(ch>=56320&&ch<=57343){
 if(count==0){
 count++;
 }else {
 buffer[count]=ch;
 count--;
 buffer[count]=(char)(55296+random.nextInt(128));
 }
 }else {
 if(ch>=55296&&ch<=56191){
 if(count==0){
 count++;
 }else {
 buffer[count]=(char)(56320+random.nextInt(128));
 count--;
+buffer[count]=ch;
+}
+}else {
+if(ch>=56192&&ch<=56319){
+count++;
+}else {
+buffer[count]=ch;
+}
+}
+}
 buffer[count]=ch;
 }
 }else {
 if(ch>=56192&&ch<=56319){
 count++;
 }else {
 buffer[count]=ch;
 }
 }
 }
 }else {
 count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2016/V44/2878/pattern-ver1-serial/src.main.java.de.webfilesys.FileLinkSelector.java-selectFiles.pattern
MATCHLEVEL : ALL
ALL : 68, UPD : 0, INS : 1, DEL : 67
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[190,289]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers,char[] chars,Random random){
 if(count==0){
 return "";
 }else {
 if(count<0){
 throw new IllegalArgumentException("Requested random string length "+count+" is less than 0.");
 }
 }
 if(chars!=null&&chars.length==0){
 throw new IllegalArgumentException("The chars array must not be empty");
 }
 if(start==0&&end==0){
 if(chars!=null){
 end=chars.length;
 }else {
 if(!letters&&!numbers){
 end=Integer.MAX_VALUE;
 }else {
 end='z'+1;
 start=' ';
 }
 }
 }
 char[] buffer=new char[count];
 int gap=end-start;
 while(count--!=0){
 char ch;
 if(chars==null){
 ch=(char)(random.nextInt(gap)+start);
 }else {
 ch=chars[random.nextInt(gap)+start];
-}
-if(letters&&Character.isLetter(ch)||numbers&&Character.isDigit(ch)||!letters&&!numbers){
-if(ch>=56320&&ch<=57343){
-if(count==0){
-count++;
-}else {
-buffer[count]=ch;
-count--;
-buffer[count]=(char)(55296+random.nextInt(128));
-}
-}else {
-if(ch>=55296&&ch<=56191){
-if(count==0){
-count++;
-}else {
-buffer[count]=(char)(56320+random.nextInt(128));
-count--;
-buffer[count]=ch;
-}
-}else {
-if(ch>=56192&&ch<=56319){
-count++;
-}else {
-buffer[count]=ch;
-}
-}
-}
-}else {
-count++;
 }
 }
 return new String(buffer);
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 86, UPD : 0, INS : 0, DEL : 86
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 08:54:35 CDT
--------------- END -----------------
Location : org.apache.commons.lang3.RandomStringUtils.random:[163]#0.5
Compute Candidate : 2019.09.05 AD at 08:54:57 CDT - 2019.09.05 AD at 09:00:37 CDT , PNumber : 11312, CandNumber : 31 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+int a=0;
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+String OUTSTRING="";
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+int a=1;
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+boolean b=true;
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+if(count<0){
+return null;
+}
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+if(start<0){
+return null;
+}
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+if(end<0){
+return null;
+}
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+assert (count>=0):"Receive a negative tratment";
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:00:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+assert (start>=0):"Receive a negative tratment";
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+assert (end>=0):"Receive a negative tratment";
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+assert (count!=0):"Receive a size tratment";
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+assert (start!=0):"Receive a size tratment";
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+assert (end!=0):"Receive a size tratment";
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+if(count>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+if(start>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
+if(end>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 return random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(0);
 }

PATTERN : /home/jiajun/GithubData/2015/V40/1788/pattern-ver1-serial/src.org.expression.parser.ExpressionParser.java-expr.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return "";
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2133/pattern-ver1-serial/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereRequestImpl.java-getServletPath.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(count,start,end,letters,numbers,null,RANDOM)==null?"":random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V48/319/pattern-ver1-serial/Flattitude.app.src.main.java.com.aseupc.flattitude.Models.IDs.java-getUserToken.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(count,start,end,letters,numbers,null,RANDOM).trim();
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/1192/pattern-ver1-serial/NewsReader.src.com.example.net_ex04.SinaNewsParser.java-getTitle.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return new String(random(count,start,end,letters,numbers,null,RANDOM));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V50/2421/pattern-ver1-serial/src.uk.co.quartzcraft.kingdoms.features.kingdom.Kingdom.java-getKing.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return (String)random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2011/V1/5127/pattern-ver1-serial/com.buglabs.common.com.buglabs.bug.sysfs.BMIDevice.java-apply.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(count,start,end,letters,numbers,null,RANDOM)!=null?random(count,start,end,letters,numbers,null,RANDOM):new String();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(count,start,end,letters,numbers,null,RANDOM).toLowerCase();
 }

PATTERN : /home/jiajun/GithubData/2016/V31/301/pattern-ver1-serial/DODO.src.Parser.Parser.java-getUserCommand.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(count,start,end,letters,numbers,null,RANDOM)==null?new String():random(count,start,end,letters,numbers,null,RANDOM);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(count,start,end,letters,numbers,null,RANDOM).replaceAll("\r","");
 }

PATTERN : /home/jiajun/GithubData/2016/V17/6011/pattern-ver1-serial/NonHTTPProxy.src.josh.nonHttp.PythonMangler.java-getPyCode.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return (String)(random(count,start,end,letters,numbers,null,RANDOM));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return String.format("%s",random(count,start,end,letters,numbers,null,RANDOM));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4308/pattern-ver1-serial/src.com.github.danfickle.cpptojavasourceconverter.ExpressionModels.java-toStringRhOnly.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
+import java.util.regex.Matcher;
+
+import java.util.regex.Pattern;
+
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+return random(count,start,end,letters,numbers,null,RANDOM)+".*";
 }

PATTERN : /home/jiajun/GithubData/2015/V25/6165/pattern-ver1-serial/src.main.java.com.oneandone.network.snmpman.configuration.type.WildcardOID.java-toString.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 8, INS : 0, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/lang/lang_11_buggy/src/main/java/org/apache/commons/lang3/RandomStringUtils.java[146,164]
------------Candidate---------------
 public static String random(int count,int start,int end,boolean letters,boolean numbers){
-return random(count,start,end,letters,numbers,null,RANDOM);
+String taskList=random(count,start,end,letters,numbers,null,RANDOM);
+return taskList;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/3828/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.AbstractBlockServiceApiImpl.java-changeVolumeVirtualPool.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 8, INS : 3, DEL : 0
Failing Tests:[org.apache.commons.lang3.RandomStringUtilsTest::testLANG807]
---------START : 2019.09.05 AD at 07:25:02 CDT
---------TIME : 2019.09.05 AD at 09:01:56 CDT
--------------- END -----------------
Finish : lang-11 > patch : 0 | Start : Thu Sep 05 07:25:02 CDT 2019 | End : 2019.09.05 AD at 09:01:56 CDT
