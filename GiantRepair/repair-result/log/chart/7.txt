Repair : chart_7
Current failed test : org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex | 2019.09.04 AD at 15:23:00 CDT
Location : org.jfree.data.time.TimePeriodValues.getMaxMiddleIndex:[552]#0.7071067811865475
Compute Candidate : 2019.09.04 AD at 15:23:36 CDT - 2019.09.04 AD at 15:26:42 CDT , PNumber : 11259, CandNumber : 11 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
-return this.maxMiddleIndex;
+return this.getMaxMiddleIndex();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:26:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
+this.getMaxMiddleIndex();
 return this.maxMiddleIndex;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:26:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
-return this.maxMiddleIndex;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/5027/pattern-ver1-serial/java.code.core.src.org.specksensor.DataSample.java-compareTo.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:26:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
-return this.maxMiddleIndex;
+return Integer.MIN_VALUE;
 }

PATTERN : /home/jiajun/GithubData/2016/V4/4813/pattern-ver1-serial/src.main.java.net.openhft.chronicle.wire.BinaryWire.java-code.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:26:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
-return this.maxMiddleIndex;
+return (int)(this.maxMiddleIndex);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:26:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
-return this.maxMiddleIndex;
+return this.maxMiddleIndex&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:26:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
+int a=0;
 return this.maxMiddleIndex;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:27:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
+String OUTSTRING="";
 return this.maxMiddleIndex;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:27:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
+int a=1;
 return this.maxMiddleIndex;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:27:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
+boolean b=true;
 return this.maxMiddleIndex;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:27:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[545,553]
------------Candidate---------------
 public int getMaxMiddleIndex(){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 return this.maxMiddleIndex;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 15:27:13 CDT
--------------- END -----------------
Location : org.jfree.data.time.TimePeriodValues.updateBounds:[267, 292, 317, 259, 260, 261, 263, 264, 266, 269, 271, 274, 275, 277, 278, 280, 282, 285, 286, 288, 290, 291, 294, 296, 299, 300, 302, 304, 305, 306, 308, 310, 313, 314, 316, 319, 321, 324, 325, 327, 328, 330, 332, 335]#0.4472135954999579
Compute Candidate : 2019.09.04 AD at 15:27:34 CDT - 2019.09.04 AD at 16:58:24 CDT , PNumber : 11408, CandNumber : 922 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+return ;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
+return ;
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+return ;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
+return ;
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
+return ;
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+return ;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+return ;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+return ;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+return ;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+return ;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+return ;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:58:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+return ;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+return ;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V1/2057/pattern-ver1-serial/multiplication-game.Main.java-ollie.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
+return ;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/5432/pattern-ver1-serial/app.src.main.java.com.rrdevs.peerboard.DBCompare.java-authenticateLogin.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+return ;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+return ;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+return ;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+return ;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+return ;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+return ;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+return ;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+return ;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+return ;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
+return ;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/4557/pattern-ver1-serial/src.de.rincewind.api.gui.elements.ElementCounter.java-setCount.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+return ;
 }
 }else {
 this.maxStartIndex=index;
+return ;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2908/pattern-ver1-serial/edu.usc.cssl.tacit.topicmodel.lda.ui.src.edu.usc.cssl.tacit.topicmodel.lda.ui.LdaTopicModelView.java-run.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+return ;
 }
 }else {
 this.minMiddleIndex=index;
+return ;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2908/pattern-ver1-serial/edu.usc.cssl.tacit.topicmodel.lda.ui.src.edu.usc.cssl.tacit.topicmodel.lda.ui.LdaTopicModelView.java-run.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+return ;
 }
 }else {
 this.maxMiddleIndex=index;
+return ;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2908/pattern-ver1-serial/edu.usc.cssl.tacit.topicmodel.lda.ui.src.edu.usc.cssl.tacit.topicmodel.lda.ui.LdaTopicModelView.java-run.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+return ;
 }
 }else {
 this.minEndIndex=index;
+return ;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V27/2908/pattern-ver1-serial/edu.usc.cssl.tacit.topicmodel.lda.ui.src.edu.usc.cssl.tacit.topicmodel.lda.ui.LdaTopicModelView.java-run.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+return ;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+return ;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
+return ;
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+return ;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+return ;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 16:59:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+return ;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+return ;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+return ;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+return ;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+return ;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V46/144/pattern-ver1-serial/lettuce.src.main.java.com.lambdaworks.redis.Connections.java-close.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+ long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+ long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+ long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/7125/pattern-ver1-serial/src.fr.visian.vip.gateway.waspmote.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/7125/pattern-ver1-serial/src.fr.visian.vip.gateway.waspmote.Main.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V35/6248/pattern-ver1-serial/src.main.java.com.github.games647.scoreboardstats.pvpstats.StatsListener.java-onQuit.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:00:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=1;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=1;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=1;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=1;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=1;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Solution---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=1;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=1;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=1;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2320/pattern-ver1-serial/mp4.src.main.java.edu.illinois.cs.mapreduce.JobManager.java-updateJobStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=0;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=0;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=0;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:01:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=0;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=0;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=0;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=0;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=0;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=0;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=0;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex>0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex>0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V40/2013/pattern-ver1-serial/src.main.java.mousio.client.retry.RetryWithExponentialBackOff.java-shouldRetry.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=3;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=3;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=3;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=3;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=3;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=3;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=3;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=3;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:02:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=3;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=3;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/101/pattern-ver1-serial/PageRank.PageRank.java-PageRank.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start!=minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5117/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcManager.java-vdcPropertiesChanged.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(end!=minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5117/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcManager.java-vdcPropertiesChanged.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle!=minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5117/pattern-ver1-serial/syssvc.src.main.java.com.emc.storageos.systemservices.impl.vdc.VdcManager.java-vdcPropertiesChanged.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=2;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=2;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=2;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=2;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=2;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=2;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=2;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=2;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=2;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=2;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V2/2316/pattern-ver1-serial/TaskScheduler.src.ApplicationWindow.java-actionPerformed.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0.0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0.0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0.0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0.0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex>=0.0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex>=0.0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/3703/pattern-ver1-serial/Muehle_Master.src.de.dhbw.muehle.model.theme.Sound.java-fade.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex<=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:03:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex<=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex<=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex<=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex<=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex<=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/4156/pattern-ver1-serial/src.eduapp.level.quest.GroupingQuest.java-setResult.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>=maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/6592/pattern-ver1-serial/src.boards.Board.java-getTile.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle>=maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/6592/pattern-ver1-serial/src.boards.Board.java-getTile.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(end>=maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/6592/pattern-ver1-serial/src.boards.Board.java-getTile.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<=minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/5349/pattern-ver1-serial/Primes.java-isPrime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(end<=minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/5349/pattern-ver1-serial/Primes.java-isPrime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<=minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/5349/pattern-ver1-serial/Primes.java-isPrime.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=4;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=4;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=4;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=4;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=4;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=4;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=4;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=4;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=4;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=4;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/1083/pattern-ver1-serial/action-adventure.src.main.java.niellebeck.game.PlayerCharacter.java-PlayerCharacter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:04:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+double middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2627/pattern-ver1-serial/src.main.java.org.elasticsearch.search.aggregations.context.FieldDataSource.java-swap.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+double minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2627/pattern-ver1-serial/src.main.java.org.elasticsearch.search.aggregations.context.FieldDataSource.java-swap.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+double maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2627/pattern-ver1-serial/src.main.java.org.elasticsearch.search.aggregations.context.FieldDataSource.java-swap.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+double minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2627/pattern-ver1-serial/src.main.java.org.elasticsearch.search.aggregations.context.FieldDataSource.java-swap.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+double maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/2627/pattern-ver1-serial/src.main.java.org.elasticsearch.search.aggregations.context.FieldDataSource.java-swap.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start>minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/5868/pattern-ver1-serial/src.com.pandoroid.pandora.PandoraRadio.java-isGetPlaylistCallValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle>minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/5868/pattern-ver1-serial/src.com.pandoroid.pandora.PandoraRadio.java-isGetPlaylistCallValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(end>minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/5868/pattern-ver1-serial/src.com.pandoroid.pandora.PandoraRadio.java-isGetPlaylistCallValid.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start<maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3701/pattern-ver1-serial/lc57.java-insert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(end<maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3701/pattern-ver1-serial/lc57.java-insert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle<maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3701/pattern-ver1-serial/lc57.java-insert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=10;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=10;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=10;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=10;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=10;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=10;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=10;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=10;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=10;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=10;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/386/pattern-ver1-serial/GlassApp.HackathonPerseusGlass.src.com.github.barcodeeye.scan.ResultsActivity.java-onDetected.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:05:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long start=period.getStart().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+ final long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V3/7209/pattern-ver1-serial/bundles.org.eclipse.emf.emfstore.client.ui.src.org.eclipse.emf.emfstore.internal.client.ui.views.historybrowserview.graph.PlotCommitProvider.java-getColorsForBranch.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=-1;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=-1;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=-1;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=-1;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=-1;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=-1;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=-1;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=-1;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2043/pattern-ver1-serial/src.main.java.net.floodlightcontroller.firewall.FirewallRule.java-FirewallRule.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+ final long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.examples.ResourceListExample.java-printRecordings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+ final long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.examples.ResourceListExample.java-printRecordings.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:06:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5265/pattern-ver1-serial/src.main.java.org.lemming.modules.StoreLoader.java-addMetadata.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ long end=period.getEnd().getTime();
+ long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+ long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2615/pattern-ver1-serial/Android.src.org.droidplanner.android.proxy.mission.MissionProxy.java-getFirstWaypoint.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+start++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+start++;
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+end++;
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+end++;
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+start++;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+end++;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+middle++;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+middle++;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+minStart++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+middle++;
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:07:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+start++;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+start++;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+end++;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+middle++;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
+middle++;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+index++;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+maxStart++;
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+minMiddle++;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+index++;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+this.minStartIndex++;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+this.minStartIndex++;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+this.minStartIndex++;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+this.minStartIndex++;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+this.minStartIndex++;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+this.minStartIndex++;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+this.minStartIndex++;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+this.minStartIndex++;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+this.minStartIndex++;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+this.minStartIndex++;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+start--;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+start--;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+end--;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:08:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+middle--;
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+minStart--;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+index--;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+maxStart--;
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+index--;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+index--;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+minMiddle--;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+this.minStartIndex--;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+this.minStartIndex--;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+this.minStartIndex--;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+this.minStartIndex--;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+this.minStartIndex--;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+this.minStartIndex--;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+this.minStartIndex--;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:09:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+this.minStartIndex--;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+this.minStartIndex--;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+this.minStartIndex--;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+index++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+index++;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+index++;
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+index++;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+index++;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+index++;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+index++;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+index++;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+index++;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/3040/pattern-ver1-serial/src.main.java.edu.clemson.cs.r2jt.proving2.proofsteps.StrengthenConsequentStep.java-StrengthenConsequentStep.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+synchronized(this){
 this.minStartIndex=index;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+synchronized(this){
 this.maxStartIndex=index;
+}
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex>0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex>0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V47/3972/pattern-ver1-serial/src.org.apache.batik.utils.SimpleImageTranscoder.java-updateImage.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+if(equals(period)){
+return ;
+}
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:10:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if(equals(period)){
+return ;
+}
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:11:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=1;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:11:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=1;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:11:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:11:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=1;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:11:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=1;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:11:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=1;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:11:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=1;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:12:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=1;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:12:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=1;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:12:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
-this.maxEndIndex=index;
+this.maxEndIndex=1;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V4/3191/pattern-ver1-serial/core.src.incanshift.IncanShift.java-create.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:12:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+}
+while(true){
+
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:14:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+}
+while(true){
+
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:16:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+}
+while(true){
+
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:18:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+}
+while(true){
+
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:20:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+while(true){
+
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:22:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+}
+while(true){
+
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:24:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
+}
+while(true){
+
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:26:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+while(true){
+
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:28:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+while(true){
+
+}
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+synchronized(this){
 if(start<minStart){
 this.minStartIndex=index;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+synchronized(this){
 if(start>maxStart){
 this.maxStartIndex=index;
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+synchronized(this){
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+synchronized(this){
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
+synchronized(this){
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+}
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+synchronized(this){
 if(end<minEnd){
 this.minEndIndex=index;
+}
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+synchronized(this){
 if(end>maxEnd){
 this.maxEndIndex=index;
+}
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if(period==null){
+return ;
+}
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(start==index){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(index==start){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
+if(middle==index){
+return ;
+}
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
+if(index==middle){
+return ;
+}
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(minStart==index){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(index==minStart){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(minStart==start){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start==minStart){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if(s==index){
+return ;
+}
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(e==index){
+return ;
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:30:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+if(period==null){
+return ;
+}
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V19/3094/pattern-ver1-serial/scribengin.core.src.main.java.com.neverwinterdp.scribengin.storage.hdfs.sink.HDFSSinkPartitionStreamWriter.java-prepareCommit.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+if(end==period.getEnd().getTime()){
+return ;
+}
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(middle==start+((end-start)/2)){
+return ;
+}
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+if(start==period.getStart().getTime()){
+return ;
+}
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5920/pattern-ver1-serial/FileReaders.gff.GVFReader.java-get_detail.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+if(index!=0){
 this.minStartIndex=index;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+if(index!=0){
 this.minStartIndex=index;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+long minStart=this.getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/4298/pattern-ver1-serial/src.main.java.org.spongepowered.api.service.command.SimpleCommandService.java-getHelp.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if("&null".equals(period)){
+return ;
+}
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V33/1483/pattern-ver1-serial/core.src.de.homelab.madgaksha.lotsofbs.cutscenesystem.fancyscene.FancyZoom.java-readNextObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(getDataItem(this.minStartIndex)==null){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(getDataItem(this.minStartIndex).getPeriod()==null){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(getDataItem(this.minStartIndex).getPeriod().getStart()==null){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(getDataItem(this.maxStartIndex)==null){
+return ;
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(getDataItem(this.maxStartIndex).getPeriod()==null){
+return ;
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2437/pattern-ver1-serial/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java-addChapters.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+ final long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+ final long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+ final long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
+ final long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+ final long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
+ final long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3285/pattern-ver1-serial/project.core.src.se.computerscience.kelde.model.entities.EntityBat.java-getHeading.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long start=period.getStart().getTime();
+ final long end=period.getEnd().getTime();
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long start=period.getStart().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long start=period.getStart().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long start=period.getStart().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+ final long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long start=period.getStart().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+ final long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+ final long start=period.getStart().getTime();
+ final long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
-long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+ final long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6059/pattern-ver1-serial/src.main.java.com.bandwidth.sdk.model.Conference.java-getMembers.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+index=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+index=index;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+start=start;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+middle=middle;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+minStart=minStart;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+minStart=1000;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+minMiddle=1000;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+minEnd=1000;
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:32:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+maxStart=1000;
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+s=1000;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V4/3726/pattern-ver1-serial/WeatherService.src.weatherservice.StatisticsCalculator.java-MinWindSpeed.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(true){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(true){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(true){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(true){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(true){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(true){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(index<0){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+if(index<0){
+return ;
+}
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(index<0){
+return ;
+}
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+if(index<0){
+return ;
+}
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+if(index<0){
+return ;
+}
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(getDataItem(this.minStartIndex).getPeriod().getStart()!=null){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(getDataItem(this.maxStartIndex).getPeriod().getStart()!=null){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if(getDataItem(this.minMiddleIndex).getPeriod().getEnd()!=null){
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if(getDataItem(this.minMiddleIndex).getPeriod().getEnd()!=null){
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+}
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+if(getDataItem(this.minEndIndex).getPeriod().getEnd()!=null){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+}
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
+if(getDataItem(this.maxEndIndex).getPeriod().getEnd()!=null){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
+}
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/5761/pattern-ver1-serial/src.main.java.jp.sf.amateras.mirage.type.enumerate.EnumOneBasedOrdinalValueType.java-isSupport.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+ final long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V37/6206/pattern-ver1-serial/ColFusionServerBLL.src.main.java.edu.pitt.sis.exp.colfusion.bll.BasicTableBL.java-getAttachmentList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
+ final long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
-long middle=start+((end-start)/2);
+ final long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+ final long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V37/6206/pattern-ver1-serial/ColFusionServerBLL.src.main.java.edu.pitt.sis.exp.colfusion.bll.BasicTableBL.java-getAttachmentList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+int a=0;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+int a=0;
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+int a=0;
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+int a=0;
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+int a=0;
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+int a=0;
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+int a=0;
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+int a=0;
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
+int a=0;
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+int a=0;
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+String OUTSTRING="";
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
+String OUTSTRING="";
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+String OUTSTRING="";
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
+String OUTSTRING="";
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+String OUTSTRING="";
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+String OUTSTRING="";
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+String OUTSTRING="";
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+String OUTSTRING="";
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
+String OUTSTRING="";
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+String OUTSTRING="";
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:34:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(period.equals(InputStream.class)){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+if(period.equals(InputStream.class)){
+return ;
+}
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+if(period.equals(InputStream.class)){
+return ;
+}
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(period.equals(InputStream.class)){
+return ;
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+if(period.equals(InputStream.class)){
+return ;
+}
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
+if(period.equals(InputStream.class)){
+return ;
+}
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(Double.isNaN(start)){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(Double.isNaN(start)){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(Double.isNaN(middle)){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(Double.isNaN(middle)){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(Double.isNaN(end)){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(Double.isNaN(end)){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:35:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+index=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V14/697/pattern-ver1-serial/umldiag.java-setLineArrow.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+if(this.minStartIndex==0){
+return ;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+}
+if(this.minStartIndex==0){
+return ;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
+if(this.minStartIndex==0){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+if(this.minMiddleIndex==0){
+return ;
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+}
+if(this.minMiddleIndex==0){
+return ;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+if(this.minEndIndex==0){
+return ;
+}
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+}
+if(this.minEndIndex==0){
+return ;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+}
+if(this.minMiddleIndex==0){
+return ;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+}
+if(this.minEndIndex==0){
+return ;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+if(this.minStartIndex==0){
+return ;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+int indexSelection=0;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+int indexSelection=0;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+int indexSelection=0;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+int indexSelection=0;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
+int indexSelection=0;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+int indexSelection=0;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+int indexSelection=0;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+int indexSelection=0;
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+int indexSelection=0;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:36:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
+int indexSelection=0;
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+int a=1;
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+int a=1;
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+int a=1;
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+int a=1;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+int a=1;
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+int a=1;
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+int a=1;
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
+int a=1;
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+int a=1;
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+int a=1;
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
-private void updateBounds(TimePeriod period,int index){
-long start=period.getStart().getTime();
-long end=period.getEnd().getTime();
+private void updateBounds(TimePeriod parentPuzzleBoard,int index){
+long start=parentPuzzleBoard.getStart().getTime();
+long end=parentPuzzleBoard.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V12/3965/pattern-ver1-serial/src.model.algorithm.AStar.java-generateDescendants.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+boolean b=true;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+boolean b=true;
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+boolean b=true;
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+boolean b=true;
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+boolean b=true;
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+boolean b=true;
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
+boolean b=true;
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+boolean b=true;
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:37:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
+boolean b=true;
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
+boolean b=true;
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+long minStart=getDataItem(Math.abs(this.minStartIndex)).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+long maxStart=getDataItem(Math.abs(this.maxStartIndex)).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long s=getDataItem(Math.abs(this.minMiddleIndex)).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long e=getDataItem(Math.abs(this.minMiddleIndex)).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long s=getDataItem(Math.abs(this.minMiddleIndex)).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long e=getDataItem(Math.abs(this.minMiddleIndex)).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+long minEnd=getDataItem(Math.abs(this.minEndIndex)).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
-long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+long maxEnd=getDataItem(Math.abs(this.maxEndIndex)).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V31/6264/pattern-ver1-serial/src.main.java.com.metal.fetcher.fetcher.impl.WeiboFetcher.java-getRandomAccount.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+if((Thread.currentThread().interrupted())){
+return ;
+}
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+if((Thread.currentThread().interrupted())){
+return ;
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+synchronized(this){
 this.minStartIndex=index;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+synchronized(this){
 this.maxStartIndex=index;
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:38:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+synchronized(this){
 this.minMiddleIndex=index;
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+synchronized(this){
 this.maxMiddleIndex=index;
+}
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
+synchronized(this){
 this.minEndIndex=index;
+}
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
+synchronized(this){
 this.maxEndIndex=index;
+}
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(true){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(true){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(true){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(true){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<minStart||start==Long.MIN_VALUE){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0||this.minStartIndex==Long.MIN_VALUE){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>maxStart||start==Long.MIN_VALUE){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0||this.maxStartIndex==Long.MIN_VALUE){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<minMiddle||middle==Long.MIN_VALUE){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle>maxMiddle||middle==Long.MIN_VALUE){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(end<minEnd||end==Long.MIN_VALUE){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0||this.minMiddleIndex==Long.MIN_VALUE){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(end>maxEnd||end==Long.MIN_VALUE){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0||this.maxMiddleIndex==Long.MIN_VALUE){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:39:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+assert (period!=null);
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(Double.isNaN(this.minStartIndex)){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(Double.isNaN(this.maxStartIndex)){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(Double.isNaN(this.minMiddleIndex)){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(Double.isNaN(this.maxMiddleIndex)){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+if(period!=null){
+long start=period.getStart().getTime();
+long end=period.getEnd().getTime();
+long middle=start+((end-start)/2);
+if(this.minStartIndex>=0){
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
+}
+if(this.maxStartIndex>=0){
+long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start>maxStart){
+this.maxStartIndex=index;
+}
+}else {
+this.maxStartIndex=index;
+}
+if(this.minMiddleIndex>=0){
+long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long minMiddle=s+(e-s)/2;
+if(middle<minMiddle){
+this.minMiddleIndex=index;
+}
+}else {
+this.minMiddleIndex=index;
+}
+if(this.maxMiddleIndex>=0){
+long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long maxMiddle=s+(e-s)/2;
+if(middle>maxMiddle){
+this.maxMiddleIndex=index;
+}
+}else {
+this.maxMiddleIndex=index;
+}
+if(this.minEndIndex>=0){
+long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+if(end<minEnd){
+this.minEndIndex=index;
+}
+}else {
+this.minEndIndex=index;
+}
+if(this.maxEndIndex>=0){
+long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+if(end>maxEnd){
+this.maxEndIndex=index;
+}
+}else {
+this.maxEndIndex=index;
+}
+}
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=-1;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=-1;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=-1;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=-1;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=-1;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=-1;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=-1;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:40:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=-1;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
-this.maxEndIndex=index;
+this.maxEndIndex=-1;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/446/pattern-ver1-serial/core.src.game.MathAlgorithms.mathQCreator.java-getPathsArray.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+assert (start!=period.getStart().getTime());
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+assert (end!=period.getEnd().getTime());
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+assert (middle!=start+((end-start)/2));
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+assert (minStart!=getDataItem(this.minStartIndex).getPeriod().getStart().getTime());
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+assert (maxStart!=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime());
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+assert (minMiddle!=s+(e-s)/2);
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+assert (s!=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime());
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+assert (e!=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime());
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 private void updateBounds(TimePeriod period,int index){
+if(period.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+this.minStartIndex++;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
+this.minStartIndex++;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=-1;
 }
+this.minMiddleIndex++;
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+this.minMiddleIndex++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=-1;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+this.minEndIndex++;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=-1;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+this.minEndIndex++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=-1;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+this.minStartIndex++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=-1;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+this.maxStartIndex++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=-1;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+this.maxStartIndex++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=-1;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:41:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+this.minMiddleIndex++;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=-1;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V34/1212/pattern-ver1-serial/src.main.java.com.sk89q.mclauncher.update.Updater.java-downloadFiles.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 2, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:42:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=1;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=1;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:42:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=1;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:42:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=1;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:42:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=1;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:42:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=1;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:42:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=1;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=1;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=1;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index+1;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
-this.maxEndIndex=index;
+this.maxEndIndex=1;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V23/786/pattern-ver1-serial/core.src.com.desitum.castleWars.data.Resources.java-adjustPlayerWizards.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0||this.minStartIndex==3){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0||this.maxStartIndex==3){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0||this.minMiddleIndex==3){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0||this.maxMiddleIndex==3){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex>=0||this.minEndIndex==3){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex>=0||this.maxEndIndex==3){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<minStart||start==3){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>maxStart||start==3){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<minMiddle||middle==3){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle>maxMiddle||middle==3){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex<0||this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex<0||this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex<0||this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex<0||this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex<0||this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex<0||this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<0||start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start<0||start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<0||middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle<0||middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.minStartIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.minStartIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.minMiddleIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.minEndIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.minStartIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.maxStartIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.maxStartIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.maxMiddleIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+this.maxEndIndex=index;
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V27/1794/pattern-ver1-serial/src.com.olympicat.scheduleupdates.DataFactory.java-loadData.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+this.minStartIndex=index;
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+this.minStartIndex=index;
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+this.minStartIndex=index;
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+this.minStartIndex=index;
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:44:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+this.minStartIndex=index;
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+this.minStartIndex=index;
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
+this.minStartIndex=index;
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+this.minStartIndex=index;
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
+this.minStartIndex=index;
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
+this.minStartIndex=index;
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.minStartIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+this.minStartIndex=index;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.minStartIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
+this.minMiddleIndex=index;
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.minMiddleIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.minMiddleIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.minEndIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+this.minEndIndex=index;
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.minStartIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.maxStartIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V49/5647/pattern-ver1-serial/src.worms.model.statements.Print.java-executeStatement.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+this.minStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+this.minStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+this.minStartIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+this.minStartIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+this.minStartIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
+this.minStartIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+this.minStartIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/6753/pattern-ver1-serial/app.src.main.java.com.tbd.memory_game.GameActivity.java-onPause.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+this.minStartIndex=index;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+this.minStartIndex=index;
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+this.minMiddleIndex=index;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+this.minMiddleIndex=index;
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+this.minEndIndex=index;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+this.minEndIndex=index;
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+this.maxStartIndex=index;
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/1266/pattern-ver1-serial/catroid.src.org.catrobat.catroid.livewallpaper.LiveWallpaper.java-onCreate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=(index+index)%index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=(index+index)%index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=(index+index)%index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=(index+index)%index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=(index+index)%index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=(index+index)%index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=(index+index)%index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=(index+index)%index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=(index+index)%index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=(index+index)%index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6203/pattern-ver1-serial/src.unogame.peer.GamePeer.java-getNextInRing.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+this.minStartIndex=index;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:46:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+this.minStartIndex=index;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+this.minMiddleIndex=index;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+this.minMiddleIndex=index;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+this.minMiddleIndex=index;
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+this.minEndIndex=index;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+this.minEndIndex=index;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
 }
+this.minEndIndex=index;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+this.minStartIndex=index;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/2094/pattern-ver1-serial/src.main.java.com.dagobert_engine.core.service.UpdateService.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
 this.minStartIndex=index;
+if(start<minStart){
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.minStartIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.minStartIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+this.minMiddleIndex=index;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.minMiddleIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.minMiddleIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
 this.minEndIndex=index;
+if(end<minEnd){
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.minEndIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.minStartIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
 this.maxStartIndex=index;
+if(start>maxStart){
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/6301/pattern-ver1-serial/app.src.main.java.client.example.sj.pulltoscaleheaderlayout.PullToScaleHeaderLayout.java-computeScroll.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
+this.minStartIndex=index<0?0:index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
+this.minMiddleIndex=index<0?0:index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
+this.minEndIndex=index<0?0:index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:47:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
+this.minStartIndex=index<0?0:index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
-this.maxStartIndex=index;
+this.maxStartIndex=index<0?0:index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
-this.maxStartIndex=index;
+this.maxStartIndex=index<0?0:index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
-this.minMiddleIndex=index;
+this.minMiddleIndex=index<0?0:index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=index<0?0:index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
-this.maxMiddleIndex=index;
+this.maxMiddleIndex=index<0?0:index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
-this.minEndIndex=index;
+this.minEndIndex=index<0?0:index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/1445/pattern-ver1-serial/src.main.java.com.laudandjolynn.csvtools.CsvFile.java-CsvFile.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
+this.minMiddleIndex=index;
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+this.minMiddleIndex=index;
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
-this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+this.minMiddleIndex=index;
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+this.minEndIndex=index;
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+this.minEndIndex=index;
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
-this.minStartIndex=index;
 }
+this.minStartIndex=index;
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/1875/pattern-ver1-serial/TherapistApp.src.application.Main.java-handle.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<minStart||start==0){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>maxStart||start==0){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<minMiddle||middle==0){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle>maxMiddle||middle==0){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(end<minEnd||end==0){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(end>maxEnd||end==0){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:48:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0||this.minStartIndex==0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0||this.maxStartIndex==0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0||this.minMiddleIndex==0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0||this.maxMiddleIndex==0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0||this.minStartIndex>9){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0||this.maxStartIndex>9){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<minStart||start>9){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0||this.minMiddleIndex>9){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0||this.maxMiddleIndex>9){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex>=0||this.minEndIndex>9){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex>=0||this.maxEndIndex>9){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<minMiddle||middle>9){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>maxStart||start>9){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(end<minEnd||end>9){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:49:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.minEndIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V48/2335/pattern-ver1-serial/app.src.main.java.swampthings.dems.LoginActivity.java-onClick.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+this.maxStartIndex=index;
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5076/pattern-ver1-serial/src.main.java.org.jsweet.transpiler.StaticInitilializerAnalyzer.java-visitClassDef.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&this.minStartIndex<4000000){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0&&this.maxStartIndex<4000000){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0&&this.minMiddleIndex<4000000){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0&&this.maxMiddleIndex<4000000){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex>=0&&this.minEndIndex<4000000){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex>=0&&this.maxEndIndex<4000000){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<minStart&&start<4000000){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>maxStart&&start<4000000){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle>maxMiddle&&middle<4000000){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<minMiddle&&middle<4000000){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&this.minStartIndex!=9999){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<minStart&&start!=9999){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>maxStart&&start!=9999){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0&&this.maxStartIndex!=9999){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<minMiddle&&middle!=9999){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0&&this.minMiddleIndex!=9999){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle>maxMiddle&&middle!=9999){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:50:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(end<minEnd&&end!=9999){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(end>maxEnd&&end!=9999){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0&&this.maxMiddleIndex!=9999){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(minStart>0&&start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(maxStart>0&&start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(minMiddle>0&&middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(0>0&&this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
+if(minEnd>0&&end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(maxMiddle>0&&middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
+if(maxEnd>0&&end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(0>0&&this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(0>0&&this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(0>0&&this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+assert (index>=0):"Receive a negative tratment";
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+assert (index>=0):"Receive a negative tratment";
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+assert (index>=0):"Receive a negative tratment";
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+assert (index>=0):"Receive a negative tratment";
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+assert (index>=0):"Receive a negative tratment";
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+assert (index>=0):"Receive a negative tratment";
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+assert (index>=0):"Receive a negative tratment";
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
+assert (index>=0):"Receive a negative tratment";
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+assert (index>=0):"Receive a negative tratment";
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:51:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
+assert (index>=0):"Receive a negative tratment";
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(data!=null&&(this.minStartIndex>=0)){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(data!=null&&(this.maxStartIndex>=0)){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(data!=null&&(this.minMiddleIndex>=0)){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(data!=null&&(this.maxMiddleIndex>=0)){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(data!=null&&(this.minEndIndex>=0)){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(data!=null&&(this.maxEndIndex>=0)){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(data!=null&&(start<minStart)){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(data!=null&&(start>maxStart)){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(data!=null&&(middle<minMiddle)){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(data!=null&&(middle>maxMiddle)){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/4950/pattern-ver1-serial/src.org.mariotaku.gallery3d.ImageViewerGLActivity.java-onLoadFinished.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+this.minEndIndex=index;
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
-this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4769/pattern-ver1-serial/android.src.main.java.com.baebae.reactnativecamera.cameralib.ui.CameraPreviewLayout.java-setFlash.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:52:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+this.minStartIndex=index;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+this.minStartIndex=index;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+this.minStartIndex=index;
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+this.minStartIndex=index;
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+this.minStartIndex=index;
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+this.minStartIndex=index;
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V18/2625/pattern-ver1-serial/app.src.main.java.de.aw.cash.action.FragmentBuchungRegelm.java-bindView.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+assert (index!=0):"Receive a size tratment";
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+assert (index!=0):"Receive a size tratment";
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+assert (index!=0):"Receive a size tratment";
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+assert (index!=0):"Receive a size tratment";
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+assert (index!=0):"Receive a size tratment";
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+assert (index!=0):"Receive a size tratment";
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+assert (index!=0):"Receive a size tratment";
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+assert (index!=0):"Receive a size tratment";
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
+assert (index!=0):"Receive a size tratment";
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+assert (index!=0):"Receive a size tratment";
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0||this.minStartIndex=='"'){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex>=0||this.maxStartIndex=='"'){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex>=0||this.minMiddleIndex=='"'){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:53:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex>=0||this.maxMiddleIndex=='"'){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
-if(this.minEndIndex>=0){
+if(this.minEndIndex>=0||this.minEndIndex=='"'){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
+if(this.maxEndIndex>=0||this.maxEndIndex=='"'){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
+if(start<minStart||start=='"'){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
+if(start>maxStart||start=='"'){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
+if(middle<minMiddle||middle=='"'){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
+if(middle>maxMiddle||middle=='"'){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(getDataItem(this.minStartIndex)==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(getDataItem(this.minStartIndex).getPeriod()==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(getDataItem(this.minStartIndex).getPeriod().getStart()==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(getDataItem(this.maxStartIndex)==null){
+throw new IllegalStateException("player is not initialised, game might not be started");
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V47/378/pattern-ver1-serial/src.main.java.game.Game.java-extraLife.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(index>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+if(index>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+if(middle>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(minStart>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(s>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+if(this.minStartIndex<0){
+this.minStartIndex=0;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+}
+if(this.minStartIndex<0){
+this.minStartIndex=0;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
+if(this.minStartIndex<0){
+this.minStartIndex=0;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+if(this.minMiddleIndex<0){
+this.minMiddleIndex=0;
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+}
+if(this.minMiddleIndex<0){
+this.minMiddleIndex=0;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+}
+if(this.minMiddleIndex<0){
+this.minMiddleIndex=0;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+if(this.minEndIndex<0){
+this.minEndIndex=0;
+}
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+}
+if(this.minEndIndex<0){
+this.minEndIndex=0;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+}
+if(this.minEndIndex<0){
+this.minEndIndex=0;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+if(this.minStartIndex<0){
+this.minStartIndex=0;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(index<0){
+return ;
+}
+if(index>=start){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(index<0){
+return ;
+}
+if(index>=start){
+return ;
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(start<0){
+return ;
+}
+if(start>=index){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(start<0){
+return ;
+}
+if(start>=index){
+return ;
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+if(index<0){
+return ;
+}
+if(index>=end){
+return ;
+}
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
+if(index<0){
+return ;
+}
+if(index>=end){
+return ;
+}
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+if(end<0){
+return ;
+}
+if(end>=index){
+return ;
+}
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Solution---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(index<0){
+return ;
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(index>=minStart){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(minStart<0){
+return ;
+}
+if(minStart>=index){
+return ;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(index<0){
+return ;
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(index>=maxStart){
+return ;
+}
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/4307/pattern-ver1-serial/src.structures.MatrixUtilities.java-getColumnGroup.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:55:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(minStart<=0){
+minStart=1;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(maxStart<=0){
+maxStart=1;
+}
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(s<=0){
+s=1;
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(e<=0){
+e=1;
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V13/1761/pattern-ver1-serial/JazminServer.src.jazmin.core.monitor.DispatcherMonitorAgent.java-sample.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(e>s){
+e=s;
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(s>e){
+s=e;
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/5173/pattern-ver1-serial/src.com.sbar.rebudget.views.ChartView.java-addPiece.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long s=this.getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=this.getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long s=this.getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/3729/pattern-ver1-serial/src.main.java.org.opentosca.csarrepo.service.CreateOpenToscaServerService.java-CreateOpenToscaServerService.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long s=this.getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=this.getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long e=this.getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/3729/pattern-ver1-serial/src.main.java.org.opentosca.csarrepo.service.CreateOpenToscaServerService.java-CreateOpenToscaServerService.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long s=this.getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long s=this.getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=this.getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V22/3729/pattern-ver1-serial/src.main.java.org.opentosca.csarrepo.service.CreateOpenToscaServerService.java-CreateOpenToscaServerService.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+if(period.equals("CALL_RECEIVED_AT")){
+return ;
+}
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+}
+if(period.equals("NAME")){
+return ;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+this.minStartIndex=index;
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+this.minStartIndex=index;
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+this.minStartIndex=index;
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+this.minStartIndex=index;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+this.minStartIndex=index;
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
+this.minStartIndex=index;
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+this.minStartIndex=index;
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+this.minStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+this.minStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
+import java.util.LinkedList;
+
+import java.util.List;
+
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+this.minStartIndex=index;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+this.minStartIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V36/5/pattern-ver1-serial/week04.src.UCodeGeneratorListener.java-exitIf_stmt.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 2, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 4, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start==12){
+return ;
+}else {
 if(start<minStart){
 this.minStartIndex=index;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:56:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start==12){
+return ;
+}else {
 if(start>maxStart){
 this.maxStartIndex=index;
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start>maxStart){
+this.maxStartIndex=index;
+}
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+if(end<minEnd){
+this.minEndIndex=index;
+}
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+if(end>maxEnd){
+this.maxEndIndex=index;
+}
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V11/3655/pattern-ver1-serial/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.RecoverPointScheduler.java-scheduleStorageSourcePoolConstraint.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 1, DEL : 7
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean succeeded=false;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+succeeded=true;
 }else {
 this.minStartIndex=index;
+}
+if(!succeeded){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean succeeded=false;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
+if(!succeeded){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+succeeded=true;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean succeeded=false;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+succeeded=true;
+}
+if(!succeeded){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean succeeded=false;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+succeeded=true;
 }
 }else {
 this.minStartIndex=index;
+}
+if(!succeeded){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean succeeded=false;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
+if(!succeeded){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+succeeded=true;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean succeeded=false;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
+if(!succeeded){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
+succeeded=true;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+boolean succeeded=false;
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+succeeded=true;
+}
+if(!succeeded){
+return ;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean succeeded=false;
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
+if(!succeeded){
+return ;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+succeeded=true;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V58/1711/pattern-ver1-serial/code.mettle.app.org.mef.framework.utils.ResourceReader.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
+long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
-long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V36/2803/pattern-ver1-serial/core.src.main.java.com.orientechnologies.orient.core.index.hashindex.local.OHashTableDirectory.java-deleteWithoutOpen.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
+long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if(this.maxMiddleIndex>=0){
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
+long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2011/V5/1113/pattern-ver1-serial/src.main.java.org.encog.neural.neat.training.NEATTraining.java-crossover.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 1, DEL : 8
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start==-2){
 if(start<minStart){
+this.minStartIndex=0;
+}else {
 this.minStartIndex=index;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+if(middle==-2){
 if(middle<minMiddle){
+this.minMiddleIndex=0;
+}else {
 this.minMiddleIndex=index;
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:57:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+if(end==-2){
 if(end<minEnd){
+this.minEndIndex=0;
+}else {
 this.minEndIndex=index;
+}
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex==-2){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+}else {
+if(this.minStartIndex>=0){
+this.minStartIndex=0;
 }else {
 this.minStartIndex=index;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start==-2){
 if(start>maxStart){
+this.maxStartIndex=0;
+}else {
 this.maxStartIndex=index;
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
+if(this.maxStartIndex==-2){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+}else {
+if(this.maxStartIndex>=0){
+this.maxStartIndex=0;
 }else {
 this.maxStartIndex=index;
+}
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
-if(this.minMiddleIndex>=0){
+if(this.minMiddleIndex==-2){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
+}else {
+if(this.minMiddleIndex>=0){
+this.minMiddleIndex=0;
 }else {
 this.minMiddleIndex=index;
+}
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
+if(middle==-2){
 if(middle>maxMiddle){
+this.maxMiddleIndex=0;
+}else {
 this.maxMiddleIndex=index;
+}
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+if(end==-2){
 if(end>maxEnd){
+this.maxEndIndex=0;
+}else {
 this.maxEndIndex=index;
+}
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
+if(this.maxMiddleIndex==-2){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
+}else {
+if(this.maxMiddleIndex>=0){
+this.maxMiddleIndex=0;
 }else {
 this.maxMiddleIndex=index;
+}
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4193/pattern-ver1-serial/simple-comsumer.src.main.java.com.wxmimperio.simple.consumer.clients.SimpleConsumerAPI.java-init.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 9, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+if(index==3){
+System.out.println("debug");
+}
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+}
+if(index==3){
+System.out.println("debug");
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+if(index==3){
+System.out.println("debug");
+}
 this.minStartIndex=index;
+if(index==3){
+System.out.println("debug");
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+if(index==3){
+System.out.println("debug");
+}
 this.minStartIndex=index;
+if(index==3){
+System.out.println("debug");
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+if(index==3){
+System.out.println("debug");
+}
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+}
+if(index==3){
+System.out.println("debug");
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+if(index==3){
+System.out.println("debug");
+}
 this.maxStartIndex=index;
+if(index==3){
+System.out.println("debug");
+}
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+if(index==3){
+System.out.println("debug");
+}
 this.maxStartIndex=index;
+if(index==3){
+System.out.println("debug");
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
+if(index==3){
+System.out.println("debug");
+}
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+if(index==3){
+System.out.println("debug");
+}
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+if(index==3){
+System.out.println("debug");
+}
 this.minMiddleIndex=index;
+if(index==3){
+System.out.println("debug");
+}
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+if(index==3){
+System.out.println("debug");
+}
 this.minMiddleIndex=index;
+if(index==3){
+System.out.println("debug");
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+haveBreadCrumbs=true;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+haveBreadCrumbs=true;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
+haveBreadCrumbs=true;
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:58:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+haveBreadCrumbs=true;
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+haveBreadCrumbs=true;
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+haveBreadCrumbs=true;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+haveBreadCrumbs=true;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+haveBreadCrumbs=true;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+boolean haveBreadCrumbs=false;
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
+if(this.minStartIndex>=0&&haveBreadCrumbs){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+haveBreadCrumbs=true;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V25/2313/pattern-ver1-serial/src.main.java.org.ednovo.gooru.client.mvp.folder.toc.FolderTocView.java-setBreadCrumbs.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 4, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if(start<0){
+start--;
+}
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(middle<0){
+middle--;
+}
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
+if(end<0){
+end--;
+}
 long middle=start+((end-start)/2);
+if(middle<0){
+middle--;
+}
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/2288/pattern-ver1-serial/src.fr.jules_cesar.Loto.main.java-onEnable.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if(start<3){
+start=3;
+}
 long end=period.getEnd().getTime();
+if(end<3){
+end=3;
+}
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if(start<3){
+start=3;
+}
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(middle<3){
+middle=3;
+}
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if(s<3){
+s=3;
+}
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(e<3){
+e=3;
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V55/5504/pattern-ver1-serial/components.insight.SRC.org.openmicroscopy.shoola.util.image.geom.Factory.java-magnifyImage.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if(start<0){
+start=0;
+}
 long end=period.getEnd().getTime();
+if(end<0){
+end=0;
+}
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
+if(start<0){
+start=0;
+}
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(middle<0){
+middle=0;
+}
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+if(s<0){
+s=0;
+}
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
+if(minMiddle<0){
+minMiddle=0;
+}
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(e<0){
+e=0;
+}
 long minMiddle=s+(e-s)/2;
+if(minMiddle<0){
+minMiddle=0;
+}
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/399/pattern-ver1-serial/src.client.panel.FormEntryPanel.java-keyPressed.pattern
MATCHLEVEL : ALL
ALL : 12, UPD : 0, INS : 12, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+long startTime=System.currentTimeMillis();
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
+long startTime=System.currentTimeMillis();
 this.minStartIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+long startTime=System.currentTimeMillis();
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
+long startTime=System.currentTimeMillis();
 this.minStartIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
+long startTime=System.currentTimeMillis();
 this.maxStartIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
+long startTime=System.currentTimeMillis();
 this.maxStartIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 17:59:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
+long startTime=System.currentTimeMillis();
 this.minMiddleIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+long startTime=System.currentTimeMillis();
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
+long startTime=System.currentTimeMillis();
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
+long startTime=System.currentTimeMillis();
 this.minMiddleIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
+long startTime=System.currentTimeMillis();
 this.maxMiddleIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler21.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
+long startTime=System.currentTimeMillis();
 this.maxMiddleIndex=index;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler21.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
+synchronized(this){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
+}
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
+synchronized(this){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
+}
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
+synchronized(this){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+}
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
 this.minStartIndex=index;
-}
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
 this.minEndIndex=index;
-}
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
 this.maxStartIndex=index;
-}
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
-long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
 this.maxEndIndex=index;
-}
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 15, UPD : 15, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
-this.minStartIndex=index;
-}
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V32/4121/pattern-ver1-serial/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.ImageLib.java-getImageNameByRepositoryNode.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 0, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
-}
-if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
-this.maxStartIndex=index;
-}
-}else {
-this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V6/1889/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.internal.partition.impl.PartitionReplicaStateChecker.java-isReplicaInSyncState.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 0, INS : 0, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(this.minStartIndex==12){
+return ;
+}else {
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
+}
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 23, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
+if(this.maxStartIndex==12){
+return ;
+}else {
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+}
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 23, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+if(this.minEndIndex==12){
+return ;
+}else {
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
+}
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 23, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
+if(this.maxEndIndex==12){
+return ;
+}else {
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
+}
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 23, UPD : 23, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(this.maxStartIndex>=0){
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
-this.minStartIndex=index;
-}
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+}
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:00:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
+if(this.maxEndIndex>=0){
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
-if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
-this.minEndIndex=index;
-}
-}else {
-this.minEndIndex=index;
-}
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
+}
+long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+if(end<minEnd){
+this.minEndIndex=index;
+}
+}else {
+this.minEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(this.maxStartIndex>=0){
+long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start>maxStart){
+this.maxStartIndex=index;
+}
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
-}
-if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
-this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
-this.minStartIndex=index;
-}
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
+}
+if(this.minStartIndex>=0){
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
-this.minStartIndex=index;
-}
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
+}
+if(this.minStartIndex>=0){
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
-this.minStartIndex=index;
-}
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(this.minStartIndex>=0){
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
+}
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
-this.minStartIndex=index;
-}
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+if(this.minStartIndex>=0){
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
+}
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(this.maxStartIndex>=0){
+long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start>maxStart){
+this.maxStartIndex=index;
+}
+}else {
+this.maxStartIndex=index;
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
-}
-if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
-this.maxStartIndex=index;
 }
-}else {
-this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
+if(this.maxStartIndex>=0){
+long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start>maxStart){
+this.maxStartIndex=index;
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
-if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
-this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
-if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
-}
-}else {
-this.minStartIndex=index;
-}
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+if(this.minStartIndex>=0){
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
+}
+}else {
+this.minStartIndex=index;
+}
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V35/5429/pattern-ver1-serial/src.com.github.dreamrec.edf.EdfWriter.java-onDataReceived.pattern
MATCHLEVEL : ALL
ALL : 24, UPD : 0, INS : 1, DEL : 23
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
+long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start>maxStart){
+this.maxStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
-this.maxStartIndex=index;
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
+long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
+if(end>maxEnd){
+this.maxEndIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
-long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
-if(end>maxEnd){
-this.maxEndIndex=index;
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
+long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
+if(end<minEnd){
+this.minEndIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
-long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
-if(end<minEnd){
-this.minEndIndex=index;
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 30, UPD : 30, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
+synchronized(this){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+}
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 32, UPD : 32, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
 this.minMiddleIndex=index;
-}
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 32, UPD : 32, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
 this.maxMiddleIndex=index;
-}
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2729/pattern-ver1-serial/Spykes.CloudVision.app.src.main.java.inovation.lab.cloudvision.Speech.java-onInit.pattern
MATCHLEVEL : ALL
ALL : 32, UPD : 32, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
+if(this.minMiddleIndex==12){
+return ;
+}else {
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
+}
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 40, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
+if(this.maxMiddleIndex==12){
+return ;
+}else {
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+}
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4902/pattern-ver1-serial/app.src.main.java.com.cs180project.ucrclasses.BaseCalendarActivity.java-interpretTime.pattern
MATCHLEVEL : ALL
ALL : 40, UPD : 40, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
+if(this.maxMiddleIndex>=0){
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
-if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
-this.minMiddleIndex=index;
-}
-}else {
-this.minMiddleIndex=index;
-}
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
+}
+long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long minMiddle=s+(e-s)/2;
+if(middle<minMiddle){
+this.minMiddleIndex=index;
+}
+}else {
+this.minMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2015/V1/6937/pattern-ver1-serial/library.src.main.java.com.reginald.swiperefresh.CustomSwipeRefreshLayout.java-onLayout.pattern
MATCHLEVEL : ALL
ALL : 41, UPD : 0, INS : 1, DEL : 40
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:01:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
+long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long maxMiddle=s+(e-s)/2;
+if(middle>maxMiddle){
+this.maxMiddleIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long maxMiddle=s+(e-s)/2;
-if(middle>maxMiddle){
-this.maxMiddleIndex=index;
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:02:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
-long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
-if(start<minStart){
-this.minStartIndex=index;
+long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
+long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
+long minMiddle=s+(e-s)/2;
+if(middle<minMiddle){
+this.minMiddleIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
 long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
 if(start>maxStart){
 this.maxStartIndex=index;
 }
 }else {
 this.maxStartIndex=index;
 }
 if(this.minMiddleIndex>=0){
-long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
-long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
-long minMiddle=s+(e-s)/2;
-if(middle<minMiddle){
-this.minMiddleIndex=index;
+long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
+if(start<minStart){
+this.minStartIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:02:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[251,335]
------------Candidate---------------
 private void updateBounds(TimePeriod period,int index){
 long start=period.getStart().getTime();
 long end=period.getEnd().getTime();
 long middle=start+((end-start)/2);
 if(this.minStartIndex>=0){
 long minStart=getDataItem(this.minStartIndex).getPeriod().getStart().getTime();
 if(start<minStart){
 this.minStartIndex=index;
 }
 }else {
 this.minStartIndex=index;
 }
 if(this.maxStartIndex>=0){
-long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
-if(start>maxStart){
-this.maxStartIndex=index;
-}
-}else {
-this.maxStartIndex=index;
-}
-if(this.minMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long minMiddle=s+(e-s)/2;
 if(middle<minMiddle){
 this.minMiddleIndex=index;
+}
+}else {
+this.maxStartIndex=index;
+}
+if(this.minMiddleIndex>=0){
+long maxStart=getDataItem(this.maxStartIndex).getPeriod().getStart().getTime();
+if(start>maxStart){
+this.maxStartIndex=index;
 }
 }else {
 this.minMiddleIndex=index;
 }
 if(this.maxMiddleIndex>=0){
 long s=getDataItem(this.minMiddleIndex).getPeriod().getStart().getTime();
 long e=getDataItem(this.minMiddleIndex).getPeriod().getEnd().getTime();
 long maxMiddle=s+(e-s)/2;
 if(middle>maxMiddle){
 this.maxMiddleIndex=index;
 }
 }else {
 this.maxMiddleIndex=index;
 }
 if(this.minEndIndex>=0){
 long minEnd=getDataItem(this.minEndIndex).getPeriod().getEnd().getTime();
 if(end<minEnd){
 this.minEndIndex=index;
 }
 }else {
 this.minEndIndex=index;
 }
 if(this.maxEndIndex>=0){
 long maxEnd=getDataItem(this.maxEndIndex).getPeriod().getEnd().getTime();
 if(end>maxEnd){
 this.maxEndIndex=index;
 }
 }else {
 this.maxEndIndex=index;
 }
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V51/3709/pattern-ver1-serial/src.main.java.jfxtras.labs.scene.layout.GridPane.java-apply.pattern
MATCHLEVEL : ALL
ALL : 47, UPD : 47, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:02:06 CDT
--------------- END -----------------
Location : org.jfree.data.time.SimpleTimePeriod.SimpleTimePeriod:[76, 77, 80, 81, 82]#0.3779644730092272
Compute Candidate : 2019.09.04 AD at 18:02:28 CDT - 2019.09.04 AD at 18:07:55 CDT , PNumber : 11323, CandNumber : 117 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:07:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=end;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=start;
 }

PATTERN : /home/jiajun/GithubData/2016/V13/3010/pattern-ver1-serial/rakam-spi.src.main.java.com.facebook.presto.sql.RakamSqlFormatter.java-Formatter.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>=end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/6592/pattern-ver1-serial/src.boards.Board.java-getTile.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start<end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V19/3701/pattern-ver1-serial/lc57.java-insert.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=0;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2689/pattern-ver1-serial/wififixer.src.org.wahtod.wififixer.WFConnection.java-clearConnectedStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=0;
 }

PATTERN : /home/jiajun/GithubData/2011/V5/2689/pattern-ver1-serial/wififixer.src.org.wahtod.wififixer.WFConnection.java-clearConnectedStatus.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+start++;
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+end++;
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+start++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+end++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+this.start++;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+this.end++;
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+start--;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+end--;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+start--;
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+end--;
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+this.start--;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+this.end--;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+synchronized(this){
 this.end=end;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+synchronized(this){
 this.start=start;
+}
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V20/1267/pattern-ver1-serial/src.main.java.io.vertx.ext.shell.command.impl.ProcessImpl.java-endHandler.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long bindingModes,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=bindingModes;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long bindingModes){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=bindingModes;
 }

PATTERN : /home/jiajun/GithubData/2015/V15/912/pattern-ver1-serial/leshan-core.src.main.java.org.eclipse.leshan.core.request.RegisterRequest.java-RegisterRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:08:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long collectorManager,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=collectorManager;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long collectorManager){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=collectorManager;
 }

PATTERN : /home/jiajun/GithubData/2016/V3/328/pattern-ver1-serial/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-resourcemanager.src.main.java.org.apache.hadoop.yarn.server.resourcemanager.RMActiveServiceContext.java-setRMTimelineCollectorManager.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long parentFileShare,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=parentFileShare;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long parentFileShare){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=parentFileShare;
 }

PATTERN : /home/jiajun/GithubData/2016/V26/5246/pattern-ver1-serial/dbclient.src.main.java.com.emc.storageos.db.client.model.FileShare.java-setParentFileShare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long pIssued,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=pIssued;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long pIssued){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=pIssued;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long pIssued,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=pIssued;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long pIssued){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=pIssued;
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4702/pattern-ver1-serial/snp.core.src.main.java.com.github.jlgrock.snp.core.domain.Observation.java-setIssued.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long Pin,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=Pin;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long Pin){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=Pin;
 }

PATTERN : /home/jiajun/GithubData/2016/V18/3652/pattern-ver1-serial/CircuitSimulator.src.main.java.model.NotGate.java-setPin.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long shepherddDelayMs,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=shepherddDelayMs;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/2409/pattern-ver1-serial/server.src.main.java.io.tilt.minka.api.NewConfig.java-setDelayMs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long shepherddDelayMs){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=shepherddDelayMs;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/2409/pattern-ver1-serial/server.src.main.java.io.tilt.minka.api.NewConfig.java-setDelayMs.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long graphdbInput,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=graphdbInput;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long graphdbInput){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=graphdbInput;
 }

PATTERN : /home/jiajun/GithubData/2015/V2/6934/pattern-ver1-serial/src.main.java.graph.ItemGraph.java-ItemGraph.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long thePrescribeMedicationCntl,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=thePrescribeMedicationCntl;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long thePrescribeMedicationCntl){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=thePrescribeMedicationCntl;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long thePrescribeMedicationCntl,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=thePrescribeMedicationCntl;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long thePrescribeMedicationCntl){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=thePrescribeMedicationCntl;
 }

PATTERN : /home/jiajun/GithubData/2016/V2/1366/pattern-ver1-serial/src.healthhub.PrescribeMedicationUI_2.java-PrescribeMedicationUI_2.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:09:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:11:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long pScore,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=pScore;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:11:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long pScore){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=pScore;
 }

PATTERN : /home/jiajun/GithubData/2015/V31/2501/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESQuery.java-setScore.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:11:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long pterm,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=pterm;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:11:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long pterm){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=pterm;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/2712/pattern-ver1-serial/plugins.idea.betterdocsidea.src.main.java.com.imaginea.betterdocs.ESFileContent.java-setTerm.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:11:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+synchronized(this){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
+}
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long boid,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=boid;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long boid){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=boid;
 }

PATTERN : /home/jiajun/GithubData/2016/V11/6684/pattern-ver1-serial/src.veiw.BoidVeiwer.java-BoidVeiwer.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
+synchronized(this){
 throw new IllegalArgumentException("Requires start <= end.");
+}
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+if(start!=0){
 this.start=start;
+}
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+if(end!=0){
 this.end=end;
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+this.end=start;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+this.start=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+start=start;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(true){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+int a=0;
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
+int a=0;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+String OUTSTRING="";
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
+String OUTSTRING="";
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(Double.isNaN(start)){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/1622/pattern-ver1-serial/src.mckay.utilities.staticlibraries.StringMethods.java-getDoubleInScientificNotation.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+this.start=start+100;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V13/4057/pattern-ver1-serial/AgentWiseAGV.src.main.java.singlestage.delegatemas.VehicleAgent.java-notifyDelay.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+this.end=end+100;
 }

PATTERN : /home/jiajun/GithubData/2015/V13/4057/pattern-ver1-serial/AgentWiseAGV.src.main.java.singlestage.delegatemas.VehicleAgent.java-notifyDelay.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+int a=1;
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:12:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
+int a=1;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+boolean b=true;
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
+boolean b=true;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+this.start=start;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:08 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+this.end=end;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/1379/pattern-ver1-serial/src.java.com.strategicgains.hyperexpress.domain.Link.java-Link.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
+}
+if(start<0){
+return ;
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+if(end<0){
+return ;
+}
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+if(start<0){
+return ;
+}
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+if(end<0){
+return ;
+}
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>end||start==Long.MIN_VALUE){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V5/7087/pattern-ver1-serial/BDEBase.src.main.java.gr.demokritos.iit.base.util.Utils.java-extractYearMonthDayLiteral.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+if(this.end==0){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+if(this.start==0){
+return ;
+}
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long r,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+start=r;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long r){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
+end=r;
 }

PATTERN : /home/jiajun/GithubData/2016/V20/3960/pattern-ver1-serial/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java-setBounds.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
+}
+if((Thread.currentThread().interrupted())){
+return ;
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long sourceGtfsCache,long end){
+start=sourceGtfsCache;
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long sourceGtfsCache){
+end=sourceGtfsCache;
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long sourceGtfsCache,long end){
 if(start>end){
+start=sourceGtfsCache;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
-public SimpleTimePeriod(long start,long end){
+public SimpleTimePeriod(long start,long sourceGtfsCache){
 if(start>end){
+end=sourceGtfsCache;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V33/5628/pattern-ver1-serial/src.main.java.com.conveyal.gtfs.api.ApiMain.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>end||start==3){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V30/1380/pattern-ver1-serial/Cluedo.src.control.Player.java-validMove.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start<0||start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V7/1602/pattern-ver1-serial/src.engine.network.server.ServerClient.java-knowMap.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:13:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
+this.start=start;
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
+this.end=end;
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
-this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 1, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>end||start==0){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1056/pattern-ver1-serial/lts-admin.src.main.java.com.github.ltsopensource.admin.web.api.SuspendJobQueueApi.java-suspendJobRecovery.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>end||start>9){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V6/2964/pattern-ver1-serial/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.datamasking.FunctionApplier.java-generateDuplicate.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+try{
 this.end=end;
+}finally{
+this.start=start;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+try{
 this.start=start;
+}finally{
 this.end=end;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 1, INS : 0, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>end&&start<4000000){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V28/46/pattern-ver1-serial/raw.master.registryKit.registryKit.registryKit.src.main.java.com.registryKit.survey.surveyManager.java-saveSurveyDocument.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>end&&start!=9999){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5798/pattern-ver1-serial/SONPlugin.src.org.workcraft.plugins.son.granularity.HourMins.java-getHour.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(end>0&&start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V30/553/pattern-ver1-serial/src.main.java.edu.berkeley.cs.nlp.ocular.main.TrainFont.java-run.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+assert (start>=0):"Receive a negative tratment";
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+assert (end>=0):"Receive a negative tratment";
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public SimpleTimePeriod(long start,long end){
+assert (start!=0):"Receive a size tratment";
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public SimpleTimePeriod(long start,long end){
+assert (end!=0):"Receive a size tratment";
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
-if(start>end){
+if(start>end||start=='"'){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/1758/pattern-ver1-serial/modules.ImportPlugin.src.main.java.org.gephi.io.importer.plugin.file.ImporterDOT.java-edgeAttributes.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
+}
+if(start>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+if(end>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+if(start>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+if(end>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
+if(this.start<0){
+this.start=0;
+}
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+if(this.end<0){
+this.end=0;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:14:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
-this.start=start;
+if(this.start!=start){
 this.end=end;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:15:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+if(this.end!=end){
 this.start=start;
-this.end=end;
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 3, INS : 0, DEL : 4
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:15:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+this.end=end;
+this.start=start;
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:15:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
+this.start=start;
+this.end=end;
 this.start=start;
 this.end=end;
 }

PATTERN : /home/jiajun/GithubData/2016/V41/2359/pattern-ver1-serial/src.main.java.com.deanveloper.playtime.util.QuickSort.java-sort.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:15:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+if(start==3){
+System.out.println("debug");
+}
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+if(start==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:15:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+if(end==3){
+System.out.println("debug");
+}
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+if(end==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:15:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[70,82]
------------Candidate---------------
 public SimpleTimePeriod(long start,long end){
+long startTime=System.currentTimeMillis();
 if(start>end){
 throw new IllegalArgumentException("Requires start <= end.");
 }
 this.start=start;
 this.end=end;
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:15:15 CDT
--------------- END -----------------
Location : org.jfree.data.time.SimpleTimePeriod.getStart:[100]#0.3779644730092272
Compute Candidate : 2019.09.04 AD at 18:15:36 CDT - 2019.09.04 AD at 18:18:45 CDT , PNumber : 11287, CandNumber : 16 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
+this.getStart();
 return new Date(this.start);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:18:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return this.getStart();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:18:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:18:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
+int a=0;
 return new Date(this.start);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:18:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
+String OUTSTRING="";
 return new Date(this.start);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:18:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return (Date)(new Date(this.start));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return new Date(this.start/2);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/3673/pattern-ver1-serial/src.com.tomclaw.mandarin.mmp.MmpSession.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return new Date(new Date(this.start).getTime());
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4476/pattern-ver1-serial/osgp-domain-core.src.main.java.com.alliander.osgp.domain.core.valueobjects.smartmetering.ActualMeterReads.java-getLogTime.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
+int a=1;
 return new Date(this.start);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
+boolean b=true;
 return new Date(this.start);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return new Date(this.start&0xff);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/4742/pattern-ver1-serial/src.uk.ac.herts.SmartLab.XBee.Response.XBeeRx16Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return new Date(this.start+this.start);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/54/pattern-ver1-serial/language.runtime.com.redhat.ceylon.compiler.java.language.LongArray.java-take.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return new Date(this.start)!=null?new Date(this.start):new Date();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return new Date(this.start)==null?new Date():new Date(this.start);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+return new Date(this.start)==null?null:new Date(new Date(this.start).getTime());
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5201/pattern-ver1-serial/src.main.java.net.github.rtc.app.utils.datatable.search.CourseSearchFilter.java-getStartDate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[94,101]
------------Candidate---------------
 public Date getStart(){
-return new Date(this.start);
+if(new Date(this.start)!=null){
+return (Date)new Date(this.start).clone();
+}
+return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V22/2449/pattern-ver1-serial/api.src.main.java.org.everit.token.api.dto.Token.java-getCreationDate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:19:29 CDT
--------------- END -----------------
Location : org.jfree.data.time.SimpleTimePeriod.getEnd:[120]#0.3779644730092272
Compute Candidate : 2019.09.04 AD at 18:19:49 CDT - 2019.09.04 AD at 18:23:04 CDT , PNumber : 11284, CandNumber : 16 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
+this.getEnd();
 return new Date(this.end);
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return this.getEnd();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return null;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/2471/pattern-ver1-serial/src.com.widerwille.afterglow.AfterglowIconProvider.java-getIcon.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
+int a=0;
 return new Date(this.end);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
+String OUTSTRING="";
 return new Date(this.end);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return (Date)(new Date(this.end));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return new Date(this.end/2);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/3673/pattern-ver1-serial/src.com.tomclaw.mandarin.mmp.MmpSession.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return new Date(new Date(this.end).getTime());
 }

PATTERN : /home/jiajun/GithubData/2015/V31/4476/pattern-ver1-serial/osgp-domain-core.src.main.java.com.alliander.osgp.domain.core.valueobjects.smartmetering.ActualMeterReads.java-getLogTime.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
+int a=1;
 return new Date(this.end);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
+boolean b=true;
 return new Date(this.end);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return new Date(this.end&0xff);
 }

PATTERN : /home/jiajun/GithubData/2015/V4/4742/pattern-ver1-serial/src.uk.ac.herts.SmartLab.XBee.Response.XBeeRx16Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return new Date(this.start+this.end);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/54/pattern-ver1-serial/language.runtime.com.redhat.ceylon.compiler.java.language.LongArray.java-take.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return new Date(this.end)!=null?new Date(this.end):new Date();
 }

PATTERN : /home/jiajun/GithubData/2016/V23/4736/pattern-ver1-serial/server.src.main.java.com.paypal.selion.grid.SeLionStandaloneConfiguration.java-getStandaloneConfiguration.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return new Date(this.end)==null?new Date():new Date(this.end);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5999/pattern-ver1-serial/persistence.src.main.java.com.softserve.osbb.model.Bill.java-getApartment.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+return new Date(this.end)==null?null:new Date(new Date(this.end).getTime());
 }

PATTERN : /home/jiajun/GithubData/2015/V39/5201/pattern-ver1-serial/src.main.java.net.github.rtc.app.utils.datatable.search.CourseSearchFilter.java-getStartDate.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/SimpleTimePeriod.java[114,121]
------------Candidate---------------
 public Date getEnd(){
-return new Date(this.end);
+if(new Date(this.end)!=null){
+return (Date)new Date(this.end).clone();
+}
+return null;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V22/2449/pattern-ver1-serial/api.src.main.java.org.everit.token.api.dto.Token.java-getCreationDate.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 3, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:23:48 CDT
--------------- END -----------------
Location : org.jfree.data.time.TimePeriodValues.add:[363, 364, 365]#0.31622776601683794
Compute Candidate : 2019.09.04 AD at 18:24:08 CDT - 2019.09.04 AD at 18:29:01 CDT , PNumber : 11298, CandNumber : 78 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:03 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
-TimePeriodValue item=new TimePeriodValue(period,value);
+ TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+value++;
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+value++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+value--;
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+value--;
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+add(item);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+synchronized(this){
 add(item);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(equals(period)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:29:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
-TimePeriodValue item=new TimePeriodValue(period,value);
+ TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+item=new TimePeriodValue(period,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/829/pattern-ver1-serial/java.canvas_data_tools.src.main.java.edu.harvard.data.canvas.phase_1.PostVerifyRequestsJob.java-setup.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(period==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==period){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period==item){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if("index".equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if("index".equals(period)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("TIME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(period.equals("TIME")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if("&null".equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if("&null".equals(period)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:31:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("DATETIME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals("DATETIME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
-TimePeriodValue item=new TimePeriodValue(period,value);
+TimePeriodValue item=new TimePeriodValue(period,30-(value));
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V66/1792/pattern-ver1-serial/rangebar.src.com.appyvet.rangebar.RangeBar.java-onAnimationUpdate.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+period=period;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+value=value;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+item=item;
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(value<0){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("-1")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+int a=0;
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
-TimePeriodValue item=new TimePeriodValue(period,value);
+TimePeriodValue item=new TimePeriodValue(period,2.0*(value));
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V38/3214/pattern-ver1-serial/src.agents.manic.TransitionModel.java-anticipateNextBeliefsInPlace.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals(period)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+String OUTSTRING="";
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
-TimePeriodValue item=new TimePeriodValue(period,value);
+TimePeriodValue item=new TimePeriodValue(period,Math.round(value));
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V16/7706/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.ProjectedEnergyDensity.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals(InputStream.class)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals(InputStream.class)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,double value){
+if(period.equals(InputStream.class)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("setPackMode")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals("setPackMode")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:32:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+int a=1;
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+boolean b=true;
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (item!=null);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+assert (period!=null);
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(period!=null){
+TimePeriodValue item=new TimePeriodValue(period,value);
+add(item);
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (item!=new TimePeriodValue(period,value));
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void add(TimePeriod period,double value){
+if(period.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (period!=null);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("655")){
+System.out.println();
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(period.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+assert (value>=0):"Receive a negative tratment";
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (item!=null):"Appointments day is not allowed to be null!";
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+assert (period!=null):"Appointments day is not allowed to be null!";
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public void add(TimePeriod period,double value){
+assert (value!=0):"Receive a size tratment";
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(value>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:33:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(period==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
+if(period==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(item.equals("NAME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(period.equals("CALL_RECEIVED_AT")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(period.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("INFO")){
+return ;
+}
+if(item.equals("UNIT")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(period.equals("INFO")){
+return ;
+}
+if(period.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+throw new IllegalStateException("User isn't registered! "+period);
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+throw new IllegalStateException("User isn't registered! "+value);
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+if(value==3){
+System.out.println("debug");
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(value==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+for(int i=0;i<24;i++){
 add(item);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[353,365]
------------Candidate---------------
 public void add(TimePeriod period,double value){
+long startTime=System.currentTimeMillis();
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:34:27 CDT
--------------- END -----------------
Location : org.jfree.data.time.TimePeriodValues.add:[375, 376, 377]#0.31622776601683794
Compute Candidate : 2019.09.04 AD at 18:34:47 CDT - 2019.09.04 AD at 18:39:41 CDT , PNumber : 11284, CandNumber : 102 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:39:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
-TimePeriodValue item=new TimePeriodValue(period,value);
+ TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/2219/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.client.impl.MemberImpl.java-getBooleanAttribute.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:39:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+add(item);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/3252/pattern-ver1-serial/care-reporting.commcare-migration.src.main.java.org.motechproject.care.reporting.migration.task.MigrationTask.java-postToMotech.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:39:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+synchronized(this){
 add(item);
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:39:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:39:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(equals(value)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:39:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(equals(period)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/2535/pattern-ver1-serial/src.main.java.se.intem.web.taglib.combined.node.ResourceNode.java-addEdge.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:40:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
-TimePeriodValue item=new TimePeriodValue(period,value);
+ TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+item=new TimePeriodValue(period,value);
 }

PATTERN : /home/jiajun/GithubData/2016/V14/829/pattern-ver1-serial/java.canvas_data_tools.src.main.java.edu.harvard.data.canvas.phase_1.PostVerifyRequestsJob.java-setup.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 1, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:05 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(value==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V33/244/pattern-ver1-serial/app.src.main.java.net.pilpin.nanodegree_popularmovies.FetchMoviesTask.java-getDataFromJsonMovieList.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:13 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V21/5349/pattern-ver1-serial/drools-wb-screens.drools-wb-guided-dtable-editor.drools-wb-guided-dtable-editor-client.src.main.java.org.drools.workbench.screens.guided.dtable.client.widget.table2.columns.dom.textbox.TextBoxLongSingletonDOMElementFactory.java-convert.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:16 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==period){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:18 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period==item){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period==value){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value==period){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V3/2945/pattern-ver1-serial/code.src.ast.MinMaxRedundancy.java-checkRedundant.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if("index".equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if("index".equals(value)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if("index".equals(period)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V20/5660/pattern-ver1-serial/plugins.crawloverview-plugin.src.main.java.com.crawljax.plugins.crawloverview.StateWriter.java-getStateNumber.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("TIME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value.equals("TIME")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period.equals("TIME")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V3/4918/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MI.MIMobileMedicalResponseParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if("&null".equals(value)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if("&null".equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if("&null".equals(period)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V14/1018/pattern-ver1-serial/skuldsku-prod.src.main.java.no.steria.skuldsku.recorder.java.serializer.ClassSerializer.java-myAsObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("DATETIME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:52 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(value.equals("DATETIME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.util.regex.Matcher;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals("DATETIME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V40/6302/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.MO.MOWarrenCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:42:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+value=value;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+period=period;
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+item=item;
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V1/5893/pattern-ver1-serial/vipr-portal.portal.app.models.datatable.NfsACLDataTable.java-NfsAclInfo.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V28/6228/pattern-ver1-serial/src.engine.QueryEngine.java-slice.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("-1")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V10/4405/pattern-ver1-serial/src.edu.ucsb.cs.Main.java-editGuardianGivenName.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+int a=0;
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals(value)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(value.equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals(period)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals(item)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period.equals(value)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value.equals(period)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V2/5852/pattern-ver1-serial/ganttproject.src.net.sourceforge.ganttproject.TaskContainmentHierarchyFacadeImpl.java-areUnrelated.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+String OUTSTRING="";
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(value.equals(InputStream.class)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals(InputStream.class)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:38 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals(InputStream.class)){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,Number value){
+if(value.equals(InputStream.class)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.Reader;
+
+import java.io.InputStream;
+
+import java.io.InputStreamReader;
+
+import java.io.OutputStreamWriter;
+
+import java.io.IOException;
+
+import java.io.OutputStream;
+
+import java.io.Writer;
+
 public void add(TimePeriod period,Number value){
+if(period.equals(InputStream.class)){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V36/1916/pattern-ver1-serial/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java-readFrom.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(value.equals("setPackMode")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period.equals("setPackMode")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("setPackMode")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/2611/pattern-ver1-serial/app.src.main.java.com.example.kristian.ideacreator.IdeasContentProvider.java-call.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:43:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+int a=1;
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+boolean b=true;
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if((Thread.currentThread().interrupted())){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V16/2/pattern-ver1-serial/src.com.grishberg.data.api.MqServer.java-run.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+boolean loggingIn=false;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/2030/pattern-ver1-serial/src.client.gui.batchstate.BatchState.java-BatchState.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(isEmpty()){
+throw new IllegalStateException("Pop an empty stack.");
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/1296/pattern-ver1-serial/src.main.java.by.amushinsky.algorithms.basic.LinkedListStack.java-pop.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (item!=null);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+assert (value!=null);
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+assert (period!=null);
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V42/2471/pattern-ver1-serial/src.main.java.seedu.taskell.model.task.TaskDate.java-convertMonthIntoInteger.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value!=null){
+TimePeriodValue item=new TimePeriodValue(period,value);
+add(item);
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:23 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period!=null){
+TimePeriodValue item=new TimePeriodValue(period,value);
+add(item);
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V8/384/pattern-ver1-serial/app.src.main.java.com.farfromsober.ffs.activities.LoginActivity.java-onDataParsed.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (item!=new TimePeriodValue(period,value));
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/3232/pattern-ver1-serial/src.main.java.com.about.java.controllers.MainController.java-mainpage.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void add(TimePeriod period,Number value){
+if(value.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import java.io.File;
+
+import java.io.IOException;
+
+import java.io.InputStream;
+
+import java.io.FileOutputStream;
+
 public void add(TimePeriod period,Number value){
+if(period.toString().startsWith("content://com.ianhanniballake.localstorage")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V37/7703/pattern-ver1-serial/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java-getFileNameByUri.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (value!=null);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (period!=null);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V31/4812/pattern-ver1-serial/graal.com.oracle.graal.nodes.src.com.oracle.graal.nodes.calc.IsNullNode.java-IsNullNode.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("655")){
+System.out.println();
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V38/3726/pattern-ver1-serial/src.protosocket.client.WriteThread.java-run.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(value.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(period.getClass().getSimpleName().startsWith("SystemException")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V21/3872/pattern-ver1-serial/sdk.src.main.java.com.amazon.speech.speechlet.verifier.ApplicationIdSpeechletRequestVerifier.java-verify.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:44:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+assert (item!=null):"Appointments day is not allowed to be null!";
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+assert (value!=null):"Appointments day is not allowed to be null!";
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+assert (period!=null):"Appointments day is not allowed to be null!";
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V26/3408/pattern-ver1-serial/tutorfinder.src.main.java.ch.unibe.ese.Tutorfinder.model.Appointment.java-setDay.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
+if(value==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+return ;
+}
+if(period==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value==null){
+return ;
+}
+if(period==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period==null){
+return ;
+}
+if(value==null){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2011/V4/5645/pattern-ver1-serial/model.src.main.java.uk.ac.ebi.bioinvindex.utils.datasourceload.DataLocationManager.java-buildLocationFromRawParam.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("CALL_RECEIVED_AT")){
+return ;
+}
+if(item.equals("NAME")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value.equals("CALL_RECEIVED_AT")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(value.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period.equals("CALL_RECEIVED_AT")){
+return ;
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(period.equals("NAME")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V30/4139/pattern-ver1-serial/cadpage.src.net.anei.cadpage.parsers.IL.ILMadisonCountyParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item.equals("INFO")){
+return ;
+}
+if(item.equals("UNIT")){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(value.equals("INFO")){
+return ;
+}
+if(value.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+if(period.equals("INFO")){
+return ;
+}
+if(period.equals("UNIT")){
+return ;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V25/4313/pattern-ver1-serial/cadpage-parsers.src.main.java.net.anei.cadpage.parsers.VA.VAAlbemarleCountyCParser.java-getField.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+throw new IllegalStateException("User isn't registered! "+value);
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null){
+throw new IllegalStateException("User isn't registered! "+period);
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2015/V15/5393/pattern-ver1-serial/peergos.user.UserContext.java-sendFollowRequest.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 0, INS : 8, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(value==null||period==null){
+throw new NullPointerException();
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+if(period==null||value==null){
+throw new NullPointerException();
+}
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2177/pattern-ver1-serial/projects.core.src.main.java.org.quick.core.prop.DefaultExpressionContext.java-withFunction.pattern
MATCHLEVEL : ALL
ALL : 9, UPD : 0, INS : 9, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+for(int i=0;i<24;i++){
 add(item);
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V34/7063/pattern-ver1-serial/src.application.rmi.Serveur.java-initalisationMain.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 10, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period==null||item==null||value==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null||period==null||value==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:45:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(value==null||item==null||period==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:46:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(item==null||value==null||period==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:46:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(value==null||period==null||item==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:46:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
 TimePeriodValue item=new TimePeriodValue(period,value);
+if(period==null||value==null||item==null){
+return ;
+}
 add(item);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V16/1000/pattern-ver1-serial/common.crazypants.enderio.machine.crusher.CrusherRecipeManager.java-addRecipe.pattern
MATCHLEVEL : ALL
ALL : 11, UPD : 0, INS : 11, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:46:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/TimePeriodValues.java[367,377]
------------Candidate---------------
 public void add(TimePeriod period,Number value){
+long startTime=System.currentTimeMillis();
 TimePeriodValue item=new TimePeriodValue(period,value);
 add(item);
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:46:12 CDT
--------------- END -----------------
Location : org.jfree.data.time.Year.Year:[96, 97, 103, 104, 105]#0.31622776601683794
Compute Candidate : 2019.09.04 AD at 18:46:32 CDT - 2019.09.04 AD at 18:54:28 CDT , PNumber : 11349, CandNumber : 86 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
+import java.util.Locale;
+
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
-peg(Calendar.getInstance());
+peg(Calendar.getInstance(Locale.ENGLISH));
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V18/3320/pattern-ver1-serial/src.main.java.com.sk89q.craftbook.circuits.ic.ICMechanicFactory.java-hasSafePermissions.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
+import java.nio.charset.StandardCharsets;
+
+import java.util.Locale;
+
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
-peg(Calendar.getInstance());
+peg(Calendar.getInstance(Locale.UK));
 }

PATTERN : /home/jiajun/GithubData/2016/V15/4612/pattern-ver1-serial/plugins.org.csstudio.saverestore.git.src.org.csstudio.saverestore.git.GitManager.java-findSnapshotsByTag.pattern
MATCHLEVEL : ALL
ALL : 0, UPD : 0, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)&&(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V17/3484/pattern-ver1-serial/src.com.massivecraft.creativegates.MainListener.java-stabilizePortalContent.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>=SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V59/3225/pattern-ver1-serial/src.org.peg4d.ParserContext.java-beginPeformStat.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+return ;
 }

PATTERN : /home/jiajun/GithubData/2016/V24/2173/pattern-ver1-serial/hu.bme.mit.viatra.ttc.dse.src.hu.bme.mit.viatra.ttc.dse.DseSolverMain.java-main.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 0, INS : 1, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((this.year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V11/7268/pattern-ver1-serial/src.org.easypr.core.CharsSegment.java-SortRect.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<=SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V45/3857/pattern-ver1-serial/src.com.urverkspel.humancompanion.AttackData.java-roll.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year>SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V44/4500/pattern-ver1-serial/src.main.java.com.michael.e.liquislots.item.ItemLiquipack.java-addInformation.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+throw new IllegalArgumentException("Year constructor: year ("+this.year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V21/1162/pattern-ver1-serial/Android.C4.app.src.main.java.projectc4.c4.client.GameGridView.java-dropPowerup.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:54 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+throw new IllegalArgumentException("Year constructor: year ("+year+year);
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V35/174/pattern-ver1-serial/src.main.java.fr.novia.zaproxyplugin.ZAProxy.java-setUpAuthenticationMethod.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:54:57 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year<SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/3672/pattern-ver1-serial/src.edu.miamioh.cse283.htw.Room.java-shoot.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:00 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year!=SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V36/71/pattern-ver1-serial/src.edu.stanford.nlp.mt.decoder.feat.base.TranslationModelFeaturizer.java-ruleFeaturize.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:02 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
-public Year(int year){
+public Year(int i){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V33/1206/pattern-ver1-serial/mobile.src.main.java.sketchagram.chalmers.com.sketchagram.MainActivity.java-onConnectionSuspended.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+throw new IllegalArgumentException("Year constructor: year ("+year+this.year);
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V26/4130/pattern-ver1-serial/view.ProgramLoop.java-createNewUser.pattern
MATCHLEVEL : ALL
ALL : 1, UPD : 1, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
-this.year=(short)year;
+this.year=0;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V32/6155/pattern-ver1-serial/SideScroller.src.net.masterzach32.sidescroller.entity.enemy.Boss.java-Boss.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
-peg(Calendar.getInstance());
+peg(Calendar.getInstance().getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V39/4879/pattern-ver1-serial/app.src.main.java.org.votingsystem.service.PaymentService.java-currencyRequest.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
+year++;
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V14/297/pattern-ver1-serial/app.src.main.java.org.team2635.scoutnetclient.fragments.StrategyInfoFragment.java-getData.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+year++;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V29/6147/pattern-ver1-serial/src.system.ResultPathCompare.java-main.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
+this.year++;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V17/4356/pattern-ver1-serial/src.main.java.uk.ac.ebi.pride.spectracluster.cli.SpectraClusterCliMain.java-convertClusters.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
+year--;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V34/5173/pattern-ver1-serial/ejb_modules.EJB-timetable.src.main.java.be.vubrooster.ejb.managers.EHBActivityManager.java-loadActivitiesForClassRooms.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
+year--;
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
+this.year--;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V12/965/pattern-ver1-serial/src.Game.java-loop.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
+synchronized(this){
 this.year=(short)year;
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V27/3450/pattern-ver1-serial/hbase-server.src.main.java.org.apache.hadoop.hbase.security.visibility.VisibilityController.java-postOpen.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
-this.year=(short)year;
+this.year=1;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6053/pattern-ver1-serial/src.monopoly.Dice.java-throwIt.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
+synchronized(this){
 peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V19/6621/pattern-ver1-serial/src.com.qozix.tileview.tiles.TileCache.java-addBitmap.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:55:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+while(true){
+
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V61/177/pattern-ver1-serial/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.streamvertex.StreamVertex.java-invoke.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<=SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>=SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V21/1893/pattern-ver1-serial/com.eclipsesource.tabris.src.com.eclipsesource.tabris.internal.SwipeManager.java-isValidMove.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+synchronized(this){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+}
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V7/3100/pattern-ver1-serial/src.de.uni_koblenz.jgralab.greql.evaluator.GreqlQueryImpl.java-evaluate.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
+if((short)year!=0){
 this.year=(short)year;
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V25/7542/pattern-ver1-serial/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserSpecialization.java-populateAreaOfSpecialization.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+year=year;
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V31/432/pattern-ver1-serial/src.arcane_arcade_menus.MainMenuMenuCreator.java-MainMenuElement.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED/2)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/7651/pattern-ver1-serial/src.net.vicp.lylab.utils.cache.CacheContainer.java-exec.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+int a=0;
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+int a=0;
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+throw new IllegalArgumentException(year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V42/222/pattern-ver1-serial/src.com.yuval.aiconnotation.FileSystem.java-saveObject.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+String OUTSTRING="";
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:57:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+String OUTSTRING="";
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+int SerialDate=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+int MINIMUM_YEAR_SUPPORTED=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+int MAXIMUM_YEAR_SUPPORTED=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+int Calendar=5;
 }

PATTERN : /home/jiajun/GithubData/2016/V48/7018/pattern-ver1-serial/app.src.main.java.com.priteshjain.popularmovies.util.EndlessRecyclerOnScrollListener.java-onScrolled.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+ final String emailPattern="[a-zA-Z0-9._-]+@[a-z]+\\.+[a-z]+";
 }

PATTERN : /home/jiajun/GithubData/2016/V44/5976/pattern-ver1-serial/rhymecity.src.main.java.com.fly.firefly.ui.activity.Login.LoginFragment.java-forgotPassword.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+int MAXIMUM_YEAR_SUPPORTED=8;
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:17 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+int MINIMUM_YEAR_SUPPORTED=8;
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V32/2823/pattern-ver1-serial/app.src.main.java.com.scanner.cardreader.BradleyThreshold.java-getHalfOfFrame.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:20 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+int indexSelection=0;
 }

PATTERN : /home/jiajun/GithubData/2015/V28/7667/pattern-ver1-serial/Handyboy.src.com.vallverk.handyboy.view.HandyBoyViewFragment.java-updateJobsContainer.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:22 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+int a=1;
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:25 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+int a=1;
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:28 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+String MINIMUM_YEAR_SUPPORTED="%#.&f";
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:30 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+String MAXIMUM_YEAR_SUPPORTED="%#.&f";
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V9/4517/pattern-ver1-serial/src.com.amadeus.cmath.MatrixPrinter.java-printMatrix.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:33 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+boolean MINIMUM_YEAR_SUPPORTED=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+boolean MAXIMUM_YEAR_SUPPORTED=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+boolean Calendar=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:42 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+boolean SerialDate=true;
 }

PATTERN : /home/jiajun/GithubData/2016/V29/4636/pattern-ver1-serial/core.src.io.github.emergentorganization.cellrpg.input.player.MovementControls.PathDraw.java-process.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+boolean b=true;
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+boolean b=true;
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:50 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+peg(Calendar.getInstance());
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
-peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V14/6394/pattern-ver1-serial/src.com.withiter.frame.MainFrame.java-loadDatas.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 1, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if(year<0){
+return ;
+}
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:55 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+}
+if(year<0){
+return ;
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:58:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+if(year<0){
+return ;
+}
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V23/1167/pattern-ver1-serial/datakit.src.main.java.org.md2k.datakit.router.Publishers.java-receivedData.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
-this.year=(short)year;
+this.year=(short)Math.max(year,1);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V11/1206/pattern-ver1-serial/pixi.src.main.java.org.openpixi.pixi.diagnostics.methods.GaussConstraintRestoration.java-initialize.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 4, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
+try{
 this.year=(short)year;
+}finally{
 peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 1, INS : 0, DEL : 3
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
+if(this.year==0){
+return ;
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V47/331/pattern-ver1-serial/flink-runtime.src.main.java.org.apache.flink.runtime.operators.hash.ReduceHashTable.java-EntryIterator.pattern
MATCHLEVEL : ALL
ALL : 4, UPD : 0, INS : 4, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:10 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range."+" -u "+year);
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V38/5800/pattern-ver1-serial/tools.gsissh.src.main.java.org.apache.airavata.gsi.ssh.api.job.SlurmJobConfiguration.java-getJobIdMonitorCommand.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 5, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:12 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
+JOptionPane.showMessageDialog(null,"No se pudo cargar la canci�n","Error",JOptionPane.ERROR_MESSAGE);
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V30/7753/pattern-ver1-serial/src.entities.Playlist.java-putInMemory.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:15 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+assert (year>=0):"Receive a negative tratment";
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:19 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+assert (year>=0):"Receive a negative tratment";
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Book.java-setChapters.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:21 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
+import javax.swing.JOptionPane;
+
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+JOptionPane.showMessageDialog(null,"Uspješno ste odjavljeni sa sistema!","Info",JOptionPane.INFORMATION_MESSAGE);
 }

PATTERN : /home/jiajun/GithubData/2016/V24/3046/pattern-ver1-serial/Projekat.iTravel.src.main.java.ba.unsa.etf.si.app.iTravel.Forms.Meni.java-OdjaviSe.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:24 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+assert (year!=0):"Receive a size tratment";
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:27 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.util.Date;
+
 public Year(int year){
+assert (year!=0):"Receive a size tratment";
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6481/pattern-ver1-serial/QualCurso.app.src.main.java.models.Course.java-newArray.pattern
MATCHLEVEL : ALL
ALL : 5, UPD : 0, INS : 5, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+synchronized(this){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+}
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V13/4122/pattern-ver1-serial/hazelcast.src.main.java.com.hazelcast.impl.DefaultRecord.java-invalidateValueCache.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 6, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:32 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+}
+if(year>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:35 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+if(year>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:37 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if(year>7){
+throw new RuntimeException("Sorry, it is impossible to determine what number it is in canonical form if base is larger than 7. \n Use rational fraction or sequence representation.");
+}
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V57/4557/pattern-ver1-serial/p-adic.src.main.java.vvk.numbers.PAdic.java-PAdic.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:40 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+this.year=(short)year;
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
-this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V5/2749/pattern-ver1-serial/src.org.opencms.importexport.CmsImportVersion7.java-addAccessControlEntry.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 1, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:43 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
+if(this.year<0){
+this.year=0;
+}
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V6/4394/pattern-ver1-serial/src.main.java.cloudsync.connector.RemoteGoogleDriveConnector.java-remove.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 0, INS : 6, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:45 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
-this.year=(short)year;
+try{
 peg(Calendar.getInstance());
+}finally{
+this.year=(short)year;
+}
 }

PATTERN : /home/jiajun/GithubData/2016/V41/5562/pattern-ver1-serial/httplite.src.main.java.alexclin.httplite.impl.ProgressRequestBody.java-writeTo.pattern
MATCHLEVEL : ALL
ALL : 6, UPD : 1, INS : 0, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if(!(year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5542/pattern-ver1-serial/RedZone.redzone.blocks.Pipe.java-onBlockPlaced.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if(true){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2015/V14/6216/pattern-ver1-serial/app.src.main.java.example.com.mpdlcamera.Upload.CustomAdapter.java-getView.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V8/293/pattern-ver1-serial/src.snpsvm.app.CommandLineApp.java-main.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
-if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
+if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V41/1184/pattern-ver1-serial/swagplash.src.main.java.com.github.albertosh.swagplash.actions.ApiBodyParamAction.java-call.pattern
MATCHLEVEL : ALL
ALL : 7, UPD : 7, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 18:59:59 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
-this.year=(short)year;
+if(this.year!=(short)year){
 peg(Calendar.getInstance());
+}
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V10/529/pattern-ver1-serial/src.com.crankcode.threads.MediaThread.java-end.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 3, INS : 0, DEL : 5
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:00:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+ final String dropStatement="Year constructor: year ("+year+") outside valid range.";
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+throw new IllegalArgumentException(dropStatement);
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:00:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+ final String dropStatement="Year constructor: year ("+year+") outside valid range.";
+throw new IllegalArgumentException(dropStatement);
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V21/6019/pattern-ver1-serial/src.main.java.nz.co.gregs.dbvolution.internal.h2.MultiPoint2DFunctions.java-add.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:00:06 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+String loc="Year constructor: year ("+year+") outside valid range.";
+throw new IllegalArgumentException(loc);
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:00:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+String loc="Year constructor: year ("+year+") outside valid range.";
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
-throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
+throw new IllegalArgumentException(loc);
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
 }

PATTERN : /home/jiajun/GithubData/2016/V8/5610/pattern-ver1-serial/app.src.main.java.com.toddburgessmedia.stackoverflowretrofit.MeetupActivity.java-onNext.pattern
MATCHLEVEL : ALL
ALL : 8, UPD : 5, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:00:11 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+if(year==3){
+System.out.println("debug");
+}
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+if(year==3){
+System.out.println("debug");
+}
 }

PATTERN : /home/jiajun/GithubData/2015/V9/4383/pattern-ver1-serial/Dameo.src.dameo.gametree.NegaMax.java-alphaBeta.pattern
MATCHLEVEL : ALL
ALL : 10, UPD : 0, INS : 10, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:00:14 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[91,105]
------------Candidate---------------
 public Year(int year){
+long startTime=System.currentTimeMillis();
 if((year<SerialDate.MINIMUM_YEAR_SUPPORTED)||(year>SerialDate.MAXIMUM_YEAR_SUPPORTED)){
 throw new IllegalArgumentException("Year constructor: year ("+year+") outside valid range.");
 }
 this.year=(short)year;
 peg(Calendar.getInstance());
+long endTime=System.currentTimeMillis();
+long totalTime=endTime-startTime;
 }

PATTERN : /home/jiajun/GithubData/2016/V6/5668/pattern-ver1-serial/Euler.src.Euler20.java-main.pattern
MATCHLEVEL : ALL
ALL : 13, UPD : 0, INS : 13, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:00:16 CDT
--------------- END -----------------
Location : org.jfree.data.time.Year.getFirstMillisecond:[150]#0.31622776601683794
Compute Candidate : 2019.09.04 AD at 19:00:37 CDT - 2019.09.04 AD at 19:03:44 CDT , PNumber : 11282, CandNumber : 11 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
-return this.firstMillisecond;
+return this.getFirstMillisecond();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:03:46 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
+this.getFirstMillisecond();
 return this.firstMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:03:48 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
-return this.firstMillisecond;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5321/pattern-ver1-serial/app.src.main.java.edu.gatech.johndoe.carecoordinator.community.UI.CommunityAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:03:51 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
-return this.firstMillisecond;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:03:53 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
-return this.firstMillisecond;
+return (long)(this.firstMillisecond);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:03:56 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
-return this.firstMillisecond;
+return this.firstMillisecond&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:03:58 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.io.Serializable;
+
 public long getFirstMillisecond(){
-return this.firstMillisecond;
+return this.firstMillisecond*1000l;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/5781/pattern-ver1-serial/app.src.main.java.com.badou.mworking.entity.category.CategoryDetail.java-getStartline_c.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:04:01 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
+int a=0;
 return this.firstMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:04:04 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
+String OUTSTRING="";
 return this.firstMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:04:07 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
+int a=1;
 return this.firstMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:04:09 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[139,151]
------------Candidate---------------
 public long getFirstMillisecond(){
+boolean b=true;
 return this.firstMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:04:12 CDT
--------------- END -----------------
Location : org.jfree.data.time.Year.getLastMillisecond:[164]#0.31622776601683794
Compute Candidate : 2019.09.04 AD at 19:04:31 CDT - 2019.09.04 AD at 19:07:23 CDT , PNumber : 11282, CandNumber : 11 
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
-return this.lastMillisecond;
+return this.getLastMillisecond();
 }

PATTERN : /home/jiajun/GithubData/2016/V3/6962/pattern-ver1-serial/CodenameOne.src.com.codename1.ui.Toolbar.java-constructSideNavigationComponent.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:26 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
+this.getLastMillisecond();
 return this.lastMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2015/V35/5018/pattern-ver1-serial/app.src.main.java.it.unimi.unimiplaces.presenters.BookmarksPresenter.java-init.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 0, INS : 2, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:29 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
-return this.lastMillisecond;
+return 0;
 }

PATTERN : /home/jiajun/GithubData/2016/V12/5321/pattern-ver1-serial/app.src.main.java.edu.gatech.johndoe.carecoordinator.community.UI.CommunityAdapter.java-compare.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:31 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
-return this.lastMillisecond;
+return 1;
 }

PATTERN : /home/jiajun/GithubData/2011/V4/7202/pattern-ver1-serial/client.SurvivalGuide.src.ch.ethz.inf.vs.android.g54.a4.ui.TouchImageView.java-getPointerCount.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:34 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
-return this.lastMillisecond;
+return (long)(this.lastMillisecond);
 }

PATTERN : /home/jiajun/GithubData/2012-2014/V19/1621/pattern-ver1-serial/src.lab4.FileService.FileService.java-readFile.pattern
MATCHLEVEL : ALL
ALL : 2, UPD : 2, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:36 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
-return this.lastMillisecond;
+return this.lastMillisecond&0xff;
 }

PATTERN : /home/jiajun/GithubData/2015/V16/5603/pattern-ver1-serial/uk.ac.herts.SmartLab.XBee.Response.XBeeRx64Response.java-GetReceiveStatus.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:39 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
+import java.util.Calendar;
+
+import java.io.Serializable;
+
 public long getLastMillisecond(){
-return this.lastMillisecond;
+return this.lastMillisecond*1000l;
 }

PATTERN : /home/jiajun/GithubData/2015/V32/5781/pattern-ver1-serial/app.src.main.java.com.badou.mworking.entity.category.CategoryDetail.java-getStartline_c.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 3, INS : 0, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:41 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
+int a=0;
 return this.lastMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2015/V24/5087/pattern-ver1-serial/app.src.main.java.ru.alexandersurinov.androidtimereportingsystem.repository.ProjectRepository.java-onFailure.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:44 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
+String OUTSTRING="";
 return this.lastMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2016/V49/487/pattern-ver1-serial/api.src.main.java.v1.rest.LabelsResource.java-getLabel_XML.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:47 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
+int a=1;
 return this.lastMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2016/V25/7434/pattern-ver1-serial/app.src.main.java.hummingbird.android.mobile_app.views.fragments.LibraryFragmentAdapter.java-onFragmentSelected.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:49 CDT
--------------- END -----------------
FILE : /home/jiajun/GenPat/artifacts-bak/projects/chart/chart_7_buggy/source/org/jfree/data/time/Year.java[153,165]
------------Candidate---------------
 public long getLastMillisecond(){
+boolean b=true;
 return this.lastMillisecond;
 }

PATTERN : /home/jiajun/GithubData/2015/V30/6898/pattern-ver1-serial/minijava-compiler-frontend.SamplePrograms.SampleMiniJavaPrograms.QuickSort.java-main.pattern
MATCHLEVEL : ALL
ALL : 3, UPD : 0, INS : 3, DEL : 0
Failing Tests:[org.jfree.data.time.junit.TimePeriodValuesTests::testGetMaxMiddleIndex]
---------START : 2019.09.04 AD at 15:23:00 CDT
---------TIME : 2019.09.04 AD at 19:07:52 CDT
--------------- END -----------------
Finish : chart-7 > patch : 2 | Start : Wed Sep 04 15:23:00 CDT 2019 | End : 2019.09.04 AD at 19:07:52 CDT
